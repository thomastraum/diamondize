%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.0.0%%For: (Thomas Eberwein) ()%%Title: (jelly-bg.ai)%%CreationDate: 31/07/2011 21:38%%Canvassize: 16383%%BoundingBox: -5 -1690 1194 6%%HiResBoundingBox: -4.05713 -1689.3428 1193.3096 5.74707%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 595.5 -842.5 595.5 -842.5%AI3_TileBox: 315.7749 -1221.8906 874.7754 -438.8901%AI3_DocumentPreview: None%AI5_ArtSize: 1190.5498 1683.7803%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -917 56 0.63 1908 1120 18 0 0 6 74 0 0%AI5_OpenViewLayers: 7%%PageOrigin:289 -1238%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 92 128 8%%BeginData: 13474 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFA8A8A8AFA8A8A8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04A87E%A8A8A87EA8A8A87EFD04A8FF7D7D84A8A8A87EA8A8A87EA8A8A87EA8A8A8%7EA8A8A87EA8A8A87DA8A8A87EA8A8A87EA8A8A87EA8A8A87EFD04A8AFA8%FFFF7DA8FFFFA8FFA8FFFD0EA87DA8A8FFFFFFA8FFFFFFA8FD07FFA8FFA8%A8FD16FFA884A8AFFD16FFA87DFD14FFA8A8FD0FFFA8FFFFA9A8FD15FFA8%FFA8FFA8AFFD12FFA8FFFF7DA8A8FD13FF84A8FD0EFFA8FFFFFFA8A8A8FD%13FFA8FFA8A8FFFFA8A8FD12FFA8FFA8A8FFA8FD11FFA8FFA8FD0DFFA8FD%05FFA8FD13FFA8FFFFFFA8FD04FFA8FD10FFA8FFFF7EFFA8FFA8FD10FFA8%FFA8A8FD0BFFA8FD05FFAFAFA8FD11FFA8FFFFFFA8FD06FFA8A8FD0FFFA8%FFA8FFA9A8FFA8FD0FFFA8FFA8FD0BFFA8FD07FFA8FFA8FD0FFFA8FD04FF%A8A8FD06FFA9A8FD0DFFA8FFFF7DFFA8A8FFFFA8FD0DFFA8A8FFFFA8FD09%FFA8FD08FFFD04A8FD0DFFA8FD05FFA8FD08FFA8A8FD0DFFA8FFA8FFFFA8%FFFFFFA8FD19FFA8FD09FFA8FFFFAFFD0CFFA8FD06FFA8FD0AFFA8FD0BFF%A8FFFF7DFFFFA8A8FFFFFFA8FD0BFFA8FFFFFFA8FD07FFA8FD0BFFA8FFA8%FD0BFFA8FD07FFA8FD0BFFA8FD0BFFA8FFA8A8FFFFA8FD04FFA8FD0AFFA8%FD04FFA8FD05FFA8FD0CFFA8FFFFA8FD09FFA8FD07FFA8FD0DFFA8FD0CFF%7DFFFFFFA8FD04FFA8A8FD08FFA8A8FFFFFFA8A8FD04FFA8FD0DFFA8FFFF%A8FD08FFA8FD08FFA8A8FD0DFFA8FD09FFA8FFA8A8FFFFFFA8FD05FFAFFD%07FFA8FD05FFA8FFFFFFA8FD0EFFA9FFFFA8FD07FFA8FD09FFA8FD0FFFA8%FD0AFFA8A8FFFFFFA8FD05FFA8A8FD05FFA8A8FD05FFA8A8FFA8FD0FFFA8%A8FFFFA8FD04FFA8A8FD0AFFA8FD10FFA8FD07FFA8FFFFA8FFFFFFA8FD06%FFA9FD06FFA8FD05FFA8A8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8%FFFFFFA8FFFFFFA8FD0BFFA8FD11FFA8FD08FFA8A8FD04FFA8FD05FFA8A8%FD04FFA8FD05FFA8A87DFD11A87D7D7DA8A8A9FFA8A8FD0BFFA8A8FD12FF%A8A8FD04FFA8FFFFA8FD04FFA8FD07FFA8FFFFFFA8FD04FFA8FFA8FD12FF%A8FFFF84A87DA8FD23FFA8FD05FFA8A8FD04FFA8A8FD06FFA8A8FFFFA8FF%A8A8A8FFFFA8A8FD10FFA8A8FFFFFFA87D7DFD0DFFA8FD15FFA8A8A8FFA8%FFA8A8FD05FFA8FD07FFA8FFA8FFA8A8A8FFFFFFA8FD10FFA8A8FFFFFFA8%FFA8A87EFD0CFFA8FD17FFA8A8FFFFA8A8FD05FFA8A8FD07FFA87D7DFD06%FFA8A8FD0EFFA97DFFFFFFA8A8FFFFA8FF7DFD0BFFA8FD18FFA87EFFAFA8%FD06FFA9FD08FF7DFD07FFA8FD0FFF7DFD0BFF7DFD09FFA9FD17FFA8A852%A8FFA8A8FD06FFA8FD07FFA8A8A8FD05FFA8A8FD0EFF7DA8FFFFFFA8FD04%FFA8FFFFFF7DFD08FFA8A8FD13FFA8A87D7D7DA8A8FFFFA8FD07FFA8FD05%FFA8FFA8FD07FFA8FD0DFFA8A8FFFFFFAFFD05FFAFA8FFFFFF7DFD07FFA8%FD11FFA8A87DFD04A8FFFFA8FFA8A8FD06FFA8A8FD04FFA8A8FFA8A8FD05%FFA8FD0DFFA87EFFFFFFA8A8FD05FFA8A8FD04FF7DFD05FFA8A8FD0CFFA8%FFA8A87DA8A8FFA8A8A8FFFFFF7EFFFFA8FD07FFA8FD04FFA8FFFFFFA8FD%13FFA8FFFFFFAFA8FD07FFA8FD05FF7DFD05FFA8FD0BFFA8AFA8A8A8FFFF%FFA8A8A8FD04FFAFFFA8A8FD08FFA8FFFFA8FD04FFA8FD05FFA8FD0CFFA8%A8FFFFA8A8FD08FFA8A8FD05FF7DA8FFFFA8A8FD08FFFD05A8FFFFFFFD05%A8FD05FFA8FFA8A8FD08FFA8FFAFA8FFFFFFA8AFFD05FFA8FD0BFFA87EFF%FFFFA8FD09FFA8FD07FF7DFFFFAFFD06FFA8FFA8A8A8FFA8FFFFFFA8FFA8%FD07FFA8A8FFA8A8FD08FFA8A8A8FD05FFA8FD05FFA8FD0BFF7DFFFFFFA8%FD0BFFA8FD07FF7DA8A8FFFD09A8FD04FFAFA8FFA8A8A8FD07FF7DFFA8A8%FD09FF7DFD0CFFA8FD0AFF7DFFFFFFA8FD0CFFA9FD08FF7DA8A8AFA8FFA8%FFA8FD06FFA8A8FFA8FD09FFA8A8FFA8A8AFFD07FF7D52A8FD05FFA8FD05%FFA8FD09FF7DA8FFFFA8FD0DFFA8FD09FF52FFFFA8A8FD07FFA8A8FFFFA8%FD0BFF7DFFFFA8FD07FFA8A87DA8FD06FFA8FFFFFFA8FD09FFA8A8FFFFA8%FD0FFFA8FD07FFA87D7DFD09FFA8FFFFFFA8FD0BFFA8A8FFA8A8A8FD04FF%A8A8FFA87E7DFD05FFA8A8FFFFFFA8A8FD07FFA8A8FFFFA8FD0FFFA8A8FD%07FFA87DA8FD07FFA8A8FFFFFFA8FD0DFF7DFFFFA8FD04FFA8A8FFA8FF7D%A8A8FD05FFA8FFFFFFA8FD08FFA8FFFFA8FD11FFA8FD07FFA8A87DFD05FF%A8A8A8FFFFFFA8FD0DFFAFA8FFA8A8A8FFA8A8FFFFA8A9FF7EA8A8A8FFFF%FFA8A8FFFFA8A8FD07FFA8A8FFA8FD12FFA8A8FD05FFA8FFA87DA8FFFFFF%A8A8FFFFFFA8A8FD0FFF7EFFFFA8FFA8A9FFFFFFA8FFFFA8FFA8AFFD04FF%A8FFFFFFA8FD06FFAFA8FFA8FD13FFA8FD06FFAFA8FF7DFFFFFFA8FD04FF%A8A8FD0FFFA8A8FFA8A8A8FD05FFA8FFA8A8FFA8A8A8FFFFFFA8A8FFA8A8%FD06FF7DFFA8FD15FFA8FD05FFA8FFFD05A8FFFFFFA8A8FD11FFA8A8FFFF%84A8FD04FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FD05FF7DFFA8FD1C%FFA8FFFFA8A8FD04FFA8FD13FFA8FFFFA8A8A8FFFD04A8FFFFA8FFA8FFA8%FFA8FFFFFFA8FFA8FD05FF7EA8A8FD17FFA8FD05FFA8FFA8A8A8FFFFFFA8%A8FD13FFA8A8FFFF84FD04FFA87DFFFFA8A8FFFFA8FD05FFA9FFA8A8FFFF%FFA8A8A8FD19FFA8FFFFFFA8FFFFA8A8A8FFFFA8FD15FFA8A9FFA8A8AFFF%FFFFA8A9A8FFA8A8A8FFFD04A8FFFFA8FFA8FFFFFFFD04A8FD18FFAFA8FF%FFFFA8A8FF7EA8A8FFA8FD16FFA8A8FFFFA8FFFFFFA8FD05FFA8FFFFFFA8%FFA8FD04FFA9FFFFFFA8A8FD1BFFA8FFFFFFA8FFFFA87DA87DFD17FFA8FF%FFA8A8FFFFFFA8FFFFFFA8A8FFA8FFFFA8A8FFA8FFA8FFA8FFFFA884A8FD%1BFFA8A8FFA8A8FFFF7DA8A8FFA8FD16FFA8A8FFA87EFFFFFFA8FFFFFFA8%A8A8FFFFFFAFA8FFFFA9FFA8FFFFFF7DA8FD1DFFA8FFAFFFFFA8A8A8FFFF%FFA8A8FD14FFA8FFFF7DA8FFFFA8FFFFFFFD04A87DFFA8FFA8FFFFFD04A8%FF7DA8A8FD1DFFA8FFA8FFA8A87DFD05FFA8A8A8FD12FFA8A8FFA8A8FFFF%AFFFFFFFA9FFFFA8A87DFD04A8FFFFA87DFFA8A8FD1FFFAFA8FFA8FFA8FD%09FFA8FD11FFA8FFFF7DA8FFA8A8FFA8A8FFFFA8FFFFA87D7D7DA87DFFA8%7D7EA8A8FD1FFFA8A8A8FFA87DA8FD09FFA8A8A8FD0EFFA8A8FFA8A8FFA8%FFFFAFFFFFA8FFA8FFFFFFFD04A87D7D52A8A8FD0BFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FD05FF7DFD04A8FFA8A9A8FD08FFA8A8FD0DFFA8A9%FF7DA8A8FFFD07A8FD05FFA8A8FFFF7D7D7DFD1DA87DA87D7D527DA8FF7D%FFFFFFA8FFA8A8A8FD06FFAFA8FD0CFFA8A8FFA8A8FFFFFFA8A8A8FD0AFF%A8FFFFFFA8FD1AFFA8FFA8A884A8A8FFA8FFA8A8FD08FFA8A8A8FD05FFA8%A8FD0AFFA8FFFF7DA8A8A87DA8A8FD0CFFA8A8FFA8FD13FFA8FFFD05A8FF%A8A8A8FFFFFFA8A8FFA8A8FD0AFFFD04A8FD04FFA8A8FD08FFA8A8FF7DA8%A87DA8FD10FFA8FFA8FD0DFFA8FFA8A8A8AFA8FD05FFA8FD07FFA8FFFFA8%FD0EFFA8A8A8FFFFFFA8FD07FFA8FFFF52527DFFFFFFA8FD0FFFA8A8A8FD%07FFA8FFFD05A8FFA8FFFFFFFD05A8FD07FFA87DA8FFA8FD0FFFFD05A8FF%A8A8A8FD04FFA8A8FF7D7DA8A8AFA8FFA8A9A8FFA8A9A8FFA8FD07FFA8A8%FD04FFA8FFA8A8A8FD09FFA8A9A8FD0BFF7DFD17FFA8FFA8A8A8FFFFFFA8%FFFFA8FFA8FD05FFA8FFA8FFA8FFA8FFFD08A87D7EA8A8A8FFA8FD09FFA8%A8A8FD09FFA8FFA8A87D7EFFA8A8FD15FFFD04A87DFFFFA8A8FFA8FFFFA8%A9FD14FF7DFD0BFFA8A8A8FD07FFA8FFA8A8A8FFA8FFA8A87EFFA8FD1BFF%7D7EA8FFFF7DFFFFFFA8A8A8FD11FFA8A8A8FD07FFA8A8A8FFFFFFA8FFFD%07A8FFA8FFFFFFA8FFFFFD04A8FD15FFA8FFFD04A87DA8A8FFA8FD06FFA8%FD11FFA8FFA8FD05FFA8A8A8FFA8AFA8FFA8FD0BFFA8FFFFFFA8FFA8FD13%FFA8FFA8A9A8FD05FFA8FFFF7DFD07FFA8FD10FFA8FFA8A8A87D7D7DFD04%A8FFA8FD0DFFA8FD04FFA87DA8FD0AFFA8FFFD07A8FFA8FD08FFA8A8FFA8%FD08FFA8A9FD0EFFA8FFFF7D7EFD15FFA8FD05FFA87DFD06FFA8FFA8A8A8%FFA8FFA9FD0FFFA8FFFF7DFD09FFA8A8A8FD0DFFA8FF7DFD14FFA8A8FD07%FF53FFFD07A8FFA8FD14FFA8A8FFA8FD0CFFA8FD0BFFAFFFFFA8A8FD12FF%A8A8FD07FFA87D7DA8A8FD1BFFA8FFFF7DFD0DFFA8FD0BFFA8FFA8A8A8FD%0FFFA8A8FD06FFA8A8A8AF7DA8FFFD04A8FFA8FD16FFA8A8FFA8FD0EFFA8%FD0AFFA9A8A8FD10FFA8A8FD06FFA8A8A8FFA8FF7DFD05FFA8A8A8FD15FF%A8A9FF7DFD0FFFA8A8A8FD07FFA8A87DFFA8FD0DFFA8A8FD04FFA8A8A8FD%04FFA8FFA87DFD07FFFD05A8FD10FFA8A8FFA8FD11FFA8A8FD07FFA8A8FF%FFA8FD0BFFA8FD05FFA8A8A8FD05FFA8FFA8A8FD0AFFA8FFA8A8A8FD0DFF%A8FFFF7DFD12FFA8A8FD06FFA87DFFA9A8FD0AFFA8FFFFFFA8A8A8FD07FF%A8A8FFFF7DA9FD0CFFA8A9A8A8A8FFA8FD08FFA8A8FFA8FD14FFA8FD05FF%A8A8FFFFA8FD09FFA8FFFFFFA8AFFD09FFAFA8FFFFA9A8FD11FFA8A8A8FD%07FFA8FFFF7DFD15FFA8A8FFFFFFA87DFFFFFFA8FD07FFA8FFA8A8A8FD0B%FFA8FFFFFFA8A8A8FD13FFFD05A8FFFFA8A8FFA8FD17FFA8A8FFA8A8FFFF%FFA8FD06FFA8FFA8FD0EFFA8FD04FFA8FD19FFA8FF7DFFFF7DFD18FFA8A8%A87DFFFFFFA8A8FFFFFFA8A8FFA8FD0FFFA8FD04FFA8A8A8FD18FFA87DA8%FFA8FD1AFF7D7EFD04FFA8FFFFA8A8AFA8FD0FFFA8FD05FFA8FFA8FD17FF%A8A8A8FFFF7DFD19FFA8A852FD06A87E7EFD12FFA8A8FD05FFA8FFA8FD13%FFFD05A8FFA8FFA8FD18FFA8FFFFFFA8FFFFFFA87DFD14FFA8FD06FFA8FF%FFA9FD11FFA8FD05FFA8FFFF7DFD15FFA9A8A8FD04FFA8A8FFFFFF7DFD13%FFA8FD07FFA8FFA8A8FD10FFA8FFFFA8A8FD05FFA8FD14FFA8A9FD06FFA8%A8FFFFA8A8A8FD12FFA9FD08FFA8FFA8FD0EFFA8A8FFFFA9A8FFFFFFA8FF%FF7DFD13FFA8FD09FF7DFFFFA87DFFA8FD11FFA8FD07FFA8A8FFFFA8FD0B%FFA8A8A8FFFFA8A8FD05FFA8FFA8FD10FFA8AFA8FD0BFFA8FFA8A8FFFFA8%FD0FFFA8FD09FFA8FFFFFFA9FD09FFA8FD05FFA8FD05FFA8FFFF7DFD0FFF%A8A8A8FD0CFFA8FFA87DFFFFFFA8FD0EFFA8A8FD09FFA8FFA8A8FD06FFA8%A8A8FD04FFA8A8FD07FFA8FFA8FD0DFFAFA8FD0FFFA8A8A8FD04FFA9A8FD%0DFFA8FD0AFFAFFFFFA8FD05FFA8A8A8FD05FFA8FD07FFA8FFFF7DFD0BFF%A8A8A8FD11FF7D7E7DFD04FFA8A8FD0BFFA8A8FD0AFFA8FFFFFFA8FFFFFF%A8FD06FFA8A8FD09FFA8FFA8FD0AFFA8FD13FFA8A87DA8A8FD11FFA8FD0B%FFA8FFFFFFA8FFA8FD07FFA8FD09FFA8FFFF7DFD07FFA8A8A8FD0DFFA8FF%FD05A8FFA87DA8FFA8FFFFFFA8A8FD0AFFA8FD0BFFA8A8FFFFA87DA8FD07%FFA8FD0DFFA8FD06FFA8A8A8FD0BFFA8AFA8A8A8FD07FFA8A8FFFFA8FFFF%FFA8FD0AFFA8FD0CFFA8FFFFA8A8FD07FFA8FD0BFFA8FFFF7DFD04FFA8A8%FD07FFA8FFFD05A8FFA8FD09FFA8A87DA8A8FFA8A8FFFFA8FD09FFA8FD0C%FFAFA8A8A8FFA8FD05FFA8FD0DFFA8FFA8FFFFFFA8A8FD05FFA8A9A8FFA8%FD11FFA8FFA8FFA8FFA8FFFFFFA8FD07FFA8FD0EFFA8A8FFFFFFA8FFFFFF%A8FD0DFFA8FFFF84FFA8A8A8FFFD05A8FFA8FD13FFA8A8A8FFA8FFA8FFA8%A8FFFFA8FD06FFA8A9FD0BFFA8A852A8A8FFAFFFA8FFA8FD0FFFA8FF7D7D%A8A8FFA8FFA8FD19FFA8A8FFA8FFFFA8FFA8A9FFFFA8FD05FFA8FD0BFFA8%FFFFA87DFFFD05A8FD0FFFA8FFFF52FD04A8FFA8FD1AFFA87EFFA8FFFFFF%FD07A8FFFFFFA8A8FD08FFA8A8A8FFFFFF7DA8FD04FF7D7DA8FD0FFFA8FF%A8FD04FFA8A9A8FFA8FD17FFA8A8FFFFA8FD05FFA8A9A8FD04FFA9A8FD06%FFA9A8FD06FFA87EFD04FFA8A8FFA8FD0DFFA8FFFF7DFD07FFA8FFFD05A8%AFA8FD10FFA8A8FFFFFFA8FD05FFFD04A8FFFFA8FD04FFFD04A8FD07FF7D%A8A8FFFFA8A8A8FFFFA8A8FD0EFFA8FD0CFFA8FFA8A8A8AFA8AFA8FD0BFF%7DFD04FFA8A8FFA8FD04FFA87DFD05FFA8A8A8FD0AFFA8A8A8FFFFA8FFA8%FFFFFFA8A8A8FD09FFA8FFFF7DFD11FFA8FFFD07A8FFA8FD04FFA8A8FFFD%0CA853FD04A8AFFD0CFF7DFFA8FFA8A9FFFFA8FD04FFA8A8FD09FFA8FFA8%FD1AFFA8A8A8FFA8FF7DFFA8FD0BFFA8A852A8A8FD0EFFA8FD0EFFA8FD07%FFA8FFFFA8A8FD1CFFA8FFA87D7DFD05FFA8A8FD07FFA87DA9A8A8A8FFA8%FD09FF7EFFA8A8A8FFA8A87DA8A8FD05FFA8A8A8FD05FFA8FFFFA8FD21FF%A8FD05FFA8A9FD06FFA8FFA8FFFFFFA8A9A8A8A8FD06FFA8A8FF7DA8A8FF%FFFF7DA87DA8A8FD05FFA8FFFFFFA8FFFFA8A8FD1DFFA8A8FFFFFFA8A8A8%FFFFFFA8A8FD04FFA8A8FFFFA8FD05FFFD05A8FFA8FFA8FFA8A8A8FD04FF%A8A8FFFD07A8FFA8A8FFFFA8FFFFA8FD1DFFA8FD07FFA8FFFFFFA8FD05FF%A8FFFFFFA8FD09FFA8FFA87DA8FFFFFFA8FD07FFA8FFA8FFFFFFA8FF7EA8%A8FFFFA8A8A8FD1BFFA8FD09FFA8A8A8FFA8FFFFFFA8FD05FFA8FD09FFFD%05A8FFFFA8A8FFFFFFA8FD05FFA8A8FD04FFA87DA8FFFFA8FD1BFFA8FD0D%FFA8FFA8FFFFA8A8FD05FFA8FD05FFA8FFA8FD04FFA8A8FFFFA9A8FFFFFF%A8FD05FFA8A8A8FFFFFFA8FFFFA8A8A8FD19FFA8FD0FFFA8A87DFFA8FD06%FFA9A8FFFFFFA8A8A8FD06FFA8A8FFFFA8A8FFFFA8A8FD07FFFD05A8FFFF%AFFD19FFA8FD13FF7DA8FD07FFA87DA8A8FD0BFFA8FFFFFFA9FFFFAFFD09%FFA87DFFFFA8FFA8FD17FFA8A8FD12FFAFA87DFD08A87DA8A8A8FD0BFFA8%A8FFA8A8FFA8FD09FFA8A8FD04FFA8FD17FFA8FD12FFA8A8FD0AFFA8FFA8%FFA8A8A8FD09FFA8A8FD04FFA8FD07FFA8FFA8FFFFA8FFA8FD15FFA8A8FD%12FFA8FFFFFFA8A8FD06FFA8A8FD04FFFD05A8FD07FFFD05A8FFA8FD05FF%FD04A8FD04FFA9A8FD26FFA8A8FD05FFA8FD07FFA8FD09FFA8FFA8FD07FF%A8FD08FFA8FFFFA8FFFFA8FFA8FD14FFA8A8FD0FFFA8A8A8FD06FFA8A8FD%05FFA8A8FD0AFFA8FFA8A8A8FD05FFA8A8A8FD04FFA8A8FFA8A8FD19FFA8%FD0FFFA8FD09FFA8FD06FFA8A8FD0FFFA8AFA8FFFFFFA8A8A8FFFFFFA8FF%FFFF7EFFFFA8FFA8A8FD12FFA8FD0EFFA8A8FD0BFFA8FD05FFA8FD11FFA8%FFA8A8A8FFA87DA8FFA8FD04FFA8A8FD04FFA8FD11FFA8FD0DFFA8A8A8FD%12FFA9FD16FFA8FF7D7DA8FD05FFA8FFFFA8FFA8A8FD10FFA8FD0DFFA8FD%0FFFA8FD05FFA8FD19FF7D7DA8FD04FFA8A8FD04FFA8FD0FFFA8FD0DFFA8%FD11FFA8FD1DFFA8FFA8FFA8A9A9FFA8FFFFA8FFFFA8A8FD0DFFA8A8FD0A%FFA8A8A8FD12FFA8A8FFFFFFA8FD15FFA8A8A8FFFFA8A8FFFD05A8FD04FF%A8FD0DFFA8FD0BFFA8FD15FFA8FD19FFA8A8FD04FFA8FFFFFFA8A87DFFFF%A8FFFFA8A8FD0BFFA8A8FD09FFA8A8FD17FFA8FFFFFFA8FD13FFA8FD06FF%A87DAFA8AFA8FD07FFA8FD0BFFA8FD08FFA8A8A8FD18FFA8FFFFFFA8A8FD%11FFA8FD05FFFD04A8FD04FFA8FFFFA8FFFFFFA8FD0AFFA8A8FD07FFA8A8%A8FD19FFA8FFFFFFA8FD0FFFA8A8A8FFFFFFFD05A8FFA8FD05FFA8FD05FF%A9FD0AFFA8FD07FFA8FD1DFFA8FFFFA9FD0EFFA8FD05FFA8FFA8FD05FFA8%FFFFFFA8FFFFA8FFFFFFA8FD08FFA8A8FD06FFA8A8FD1DFFA8A8FFFFA8FD%0CFFA8A8FFFFFFA8A8A8FD07FFA9A8FD13FFA8FD05FFA8A8FD20FFA8FFA9%FD0BFFA8A9A8FFFFFFA8A9A9FD09FFA8FFFFFFA8FFFFA8FFFFFFA8FD07FF%A8FD05FFA8A8FD21FFA8A8FFA8FD09FFA8A8FFFFA8A8A8FD0CFFA8A8FFA8%FD08FFA9FD05FFA8FD05FFA8FD2FFFA8FFFFFFA8FD10FFA8FFFFA8FFFFA8%FFFFFFA8A8FD04FFA8FFFFFFA8A8A8FD25FFA8FFA8FD05FFA8A8A8FFA8A8%A8FD11FFA8FFA8FD08FFA8FFFFFFA8FFFFFFA8FD29FFA8A8FD04FFFD05A8%FD17FFA9FFFFA8FFFFFFA8A8FFFFA8A8FFA8A8FD29FFA8A8A8FFFFFFA8A8%A8FD17FFA8A8A8FD04FFAFFFFFFFA8FFFFFFA8FFA8FD2BFFA8FFFFA87DA8%A8FD19FFA8FD06FFA8FFFFFD05A8FD28FFA8FD04FFA87D7D7DFD1CFFA8A8%FD06FFA8FFA87D7DFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFFD0CA87EA8A8A8%7EA8A8A87EA8A8A87EA87EA87DA87DA87D7D7DFD0AA8FFFFFFA8FFFFFFA8%FD0CFFA8FD08FFA87DA87DA87D7D7DA87DA87DA87D7D7DA87DA87DA87D7D%7D7E7D7D7DA8A8A87EA8A8A87EA8A8A87EA8A8A87DFD08A8FFA8A87EA8A8%A87D7EFD0A7D53FD047DA87D7D7DA87DA87DFFFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp7 Bn%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 25 0 %_BS%_0 0 0 1 1 25 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Green, Yellow, Orange)(Green, Yellow, Orange) 0 7 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A696867676665646463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A494847474645444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827262625242323222120201F1E1D1D1C1B1A1A>101 %_Br0<1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF><F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF>01 %_Br<D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0.1<FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9><BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B2B2B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A3A2A1A1A09F9E9E9D9C9B9B9A999898979695949493929191908F8E8E8D8C8B8B8A898887878685848483828181807F7E7E7D7C7B7B7A797877777675747473727171706F6E6E6D6C6B6A6A696867676665646463626161605F5E5D5D5C5B5A5A595857575655545453525150504F4E4D4D4C4B4A4A494847474645444443424140403F3E3D3D3C3B3A3A393837373635343333323130302F2E2D2D2C2B2A2A292827262625242323222120201F1E1D1D1C1B1A1A>101 %_Br0<1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF><F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF>01 %_Br<D9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B5B4B3B3B2B1B0AFAEADACABABAAA9A8A7A6A5A4A4A3A2A1A09F9E9E9D9C9B9A9998989796959494939291908F8F8E8D8C8B8B8A898888878685848483828181807F7E7E7D7C7B7B7A79787877767575747373727170706F6E6E6D6C6B6B6A6969686767666565646363626161605F5F5E5D5D5C5B5B5A5A595858575656555554535352525150504F4F4E4D4D4C4C4B4B4A494948484747464645444443434242414140403F3F3E3D3D3C3C3B3B3A3A3939383837373636363535343433333232313130302F2F2F2E2E2D2D2C2C2B2B2B2A2A29292928282727262626252524242423232322222121212020201F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A19191918181817171717161616151515141414141313131212121211111111101010100F0F0F0F0E0E0E0E0D0D0D0D0D0C0C0C0C0B0B0B0B0B0A0A0A0A0A0909090909080808080808070707070707060606060606060505050505050504040404040404040303030303030303030202020202020202020202020101010101010101010101010101010101010000000000000000000000000000000000000000000000000000>0.1<FFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2>01 %_Br[0.85 0.1 1 0 1 50 100 %_BS%_0.85 0.1 1 0 1 50 100 Bs0 0.75 1 0 1 50 80.117 %_BS%_0 0.75 1 0 1 50 80.117 Bs0 0.1 0.95 0 1 50 64 %_BS%_0 0.1 0.95 0 1 50 64 Bs0.85 0.1 1 0 1 50 47 %_BS%_0.85 0.1 1 0 1 50 47 Bs0 0.75 1 0 1 50 30 %_BS%_0 0.75 1 0 1 50 30 Bs0 0.1 0.95 0 1 50 15 %_BS%_0 0.1 0.95 0 1 50 15 Bs0.85 0.1 1 0 1 28 0 %_BS%_0.85 0.1 1 0 1 28 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Purple Radial)(Purple Radial) 1 2 Bd[<0001010203030405050607070809090A0B0B0C0C0D0E0E0F101011121213131415151617171818191A1A1B1B1C1D1D1E1E1F20202121222323242425262627272828292A2A2B2B2C2C2D2E2E2F2F3030313132333334343535363637373839393A3A3B3B3C3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F505051515152525353545455555656565757585859595A5A5A5B5B5C5C5D5D5D5E5E5F5F5F606061616262626363646464656566666667676768686969696A6A6B6B6B6C6C6C6D6D6D6E6E6F6F6F7070707171717272727373737474747575757676767777777878787979797A7A7A7B7B7B7B7C7C7C7D7D7D7E7E7E7E7F7F7F7F808080818181818282828283838384848484858585858686868687878787878888888889898989898A8A8A8A8B8B8B8B8B8C8C8C8C8C8D8D8D8D8D8E8E8E8E8E8F8F8F8F8F8F9090909090909191919191919292929292929293939393939393949494949494949495959595959595959596969696969696969696979797979797979797979797989898989898989898989898989898989898999999999999999999999999999999999999999999999999><000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242525262728292A2B2C2D2E2F2F30313233343536373738393A3B3C3D3E3E3F4041424343444546474849494A4B4C4D4D4E4F5051525253545556565758595A5A5B5C5D5D5E5F606161626364646566676768696A6A6B6C6D6D6E6F7070717272737475757677777879797A7B7C7C7D7E7E7F8080818282838484858686878888898A8A8B8B8C8D8D8E8F8F90909192929394949595969797989899999A9B9B9C9C9D9E9E9F9FA0A0A1A1A2A3A3A4A4A5A5A6A6A7A7A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B2B2B3B3B4B4B5B5B5B6B6B7B7B8B8B9B9BABABABBBBBCBCBDBDBEBEBEBFBFC0C0C0C1C1C2C2C3C3C3C4C4C5C5C5C6C6C6C7C7C8C8C8C9C9C9CACACACBCBCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D9D9D9D9DADADADADBDBDBDBDBDCDCDCDCDDDDDDDDDDDEDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E6><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0 0 0 0 1 30 63.1579 %_BS%_0 0 0 0 1 30 63.1579 Bs0.6 0.9 0.000031 0.000031 1 50 100 %_BS%_0.6 0.9 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Super Soft Black Vignette)(Super Soft Black Vignette) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 56.0729 57.4443 %_BS%_0.2 0.2 0.2 1 1 56.0729 57.4443 Bs0.2 0.2 0.2 1 1 31.8603 79.7713 %_BS%_0.2 0.2 0.2 1 1 31.8603 79.7713 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 26)(Unnamed gradient 26) 0 3 Bd[<00000000010101010101020202020202020303030303030303040404040404040405050505050505050506060606060606060606070707070707070707070707080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><0001020303040506070808090A0B0C0C0D0E0F0F10111212131414151616171818191A1A1B1C1C1D1D1E1E1F20202121222223232425252626272727282829292A2A2B2B2C2C2C2D2D2E2E2F2F2F303030313132323233333334343435353536363637373737383838393939393A3A3A3A3B3B3B3B3C3C3C3C3D3D3D3D3E3E3E3E3E3F3F3F3F3F3F40404040404141414141414242424242424243434343434343434444444444444444454545454545454545454646464646464646464646464747474747474747474747474747474848484848484848484848484848484848484848484849494949494949494949494949494949494949494949494949494949494949494949494949494949494949494A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A><00020406080A0C0E10121416181A1C1E1F21232527282A2C2D2F3132343637393A3C3D3F404243454647494A4C4D4E50515253555657585A5B5C5D5E606162636465666768696A6B6C6D6E6F70717273747576777778797A7B7C7C7D7E7F8080818282838485858687878889898A8B8B8C8C8D8E8E8F8F9090919192929394949495959696979798989999999A9A9B9B9B9C9C9D9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A6A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9A9AAAAAAAAAAAAAAABABABABABABABACACACACACACACACACADADADADADADADADADADADAEAEAEAEAEAEAEAEAEAEAEAEAEAEAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFB0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1><00000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202>1 %_Br10 %_Br[0.05246 0.289616 0.692164 0.007477 1 50 100 %_BS%_0.05246 0.289616 0.692164 0.007477 1 50 100 Bs1 0 13 45 %_BS%_1 0 13 45 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 30)(Unnamed gradient 30) 1 2 Bd[<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><181919191A1A1B1C1C1D1D1E1F1F202122222324252526272829292A2B2C2D2E2E2F30313233343536363738393A3B3C3D3E3F404142434445464748494A><CECECECDCDCDCCCCCCCBCBCBCACAC9C9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBBBABAB9B9B8B8B7B6B6B5B5B4B3B3B2B2B1B1><0101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202>1 %_Br[0.049561 0.095003 0.808347 0.00296 1 57.3034 0 %_BS%_0.049561 0.095003 0.808347 0.00296 1 57.3034 0 Bs0.05246 0.289616 0.692164 0.007477 1 50 100 %_BS%_0.05246 0.289616 0.692164 0.007477 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 31)(Unnamed gradient 31) 0 3 Bd[<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><4A494847464544434241403F3E3D3C3B3A393838373635343433323131302F2F2E2D2D2C2B2B2A2A292828272726262525242423232322222121212020201F1F1F1E1E1E1D1D1D1D1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A1A19191919191919191919191918181818181818181818181818181818><B1B1B2B2B3B4B4B5B5B6B7B7B8B8B9B9BABABBBBBCBCBDBDBEBEBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C5C5C5C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACACACBCBCBCBCBCBCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECECECECECECECECECECECECECECE><020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101>1 %_Br<0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D><18191A1B1C1D1E1F202122232425262728292A2B2C2D2F303132333435363738393A3B3C3D3E3F404142434445464748494A><CECECDCCCCCBCBCAC9C9C8C7C7C6C6C5C4C4C3C3C2C1C1C0C0BFBEBEBDBDBCBBBBBABAB9B8B8B7B7B6B5B5B4B4B3B2B2B1B1><0101010101010101010101010101010101010101010101010101010101010101020202020202020202020202020202020202>1 %_Br[0.049561 0.095003 0.808347 0.00296 1 50 100 %_BS%_0.049561 0.095003 0.808347 0.00296 1 50 100 Bs0.05246 0.289616 0.692164 0.007477 1 23.7288 50 %_BS%_0.05246 0.289616 0.692164 0.007477 1 23.7288 50 Bs0.049561 0.095003 0.808347 0.00296 1 50 0 %_BS%_0.049561 0.095003 0.808347 0.00296 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Laguna)(Laguna) 0 3.1914 84.1563 84.791 [%AI3_Tile(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 30.3906 m12.2227 12.8779 9.0488 12.4082 V7.2871 14.1709 0 30.3906 Y13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 Cf42.0781 57.5908 m12.2227 40.0781 9.0488 39.6094 V7.2871 41.3711 0 57.5908 Y13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 Cf42.0781 84.791 m12.2227 67.2773 9.0488 66.8096 V7.2871 68.5703 0 84.791 Y13.1641 74.918 29.1484 77.7402 42.0781 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.6 0.9 0.000031 0.000031 k 0.6 0.9 0.000031 0.000031 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR84.1563 30.3906 m54.3008 12.8779 51.127 12.4082 V49.3652 14.1709 42.0781 30.3906 Y55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 Cf84.1563 57.5908 m54.3008 40.0781 51.127 39.6094 V49.3652 41.3711 42.0781 57.5908 Y55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 Cf84.1563 84.791 m54.3008 67.2773 51.127 66.8096 V49.3652 68.5703 42.0781 84.791 Y55.2422 74.918 71.2266 77.7402 84.1563 84.791 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.85 0.1 1 0 k 0.85 0.1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR21.0391 33.582 m19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c24.2285 32.1523 22.8008 33.582 21.0391 33.582 cf21.0391 6.3818 m19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c17.8477 1.4287 19.2773 0 21.0391 0 c22.8008 0 24.2285 1.4287 24.2285 3.1914 c24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 cf21.0391 60.7822 m19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 cf21.0391 87.9824 m19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 cf63.1172 33.582 m61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c66.3066 32.1523 64.8789 33.582 63.1172 33.582 cf63.1172 6.3818 m61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c59.9258 1.4287 61.3555 0 63.1172 0 c64.8789 0 66.3066 1.4287 66.3066 3.1914 c66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 cf63.1172 60.7822 m61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 cf63.1172 87.9824 m61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 cf%AI6_EndPatternLayer) &(0 O 0 R 0.6 0.9 0.000031 0.000031 k 0.6 0.9 0.000031 0.000031 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR0 3.1914 m29.8535 20.7041 33.0273 21.1738 V34.79 19.4111 42.0781 3.1914 Y28.9141 13.0645 12.9277 10.2422 0 3.1914 Cf0 30.3906 m29.8535 47.9033 33.0273 48.374 V34.79 46.6104 42.0781 30.3906 Y28.9141 40.2646 12.9277 37.4434 0 30.3906 Cf0 57.5908 m29.8535 75.1035 33.0273 75.5752 V34.79 73.8105 42.0781 57.5908 Y28.9141 67.4648 12.9277 64.6436 0 57.5908 Cf%AI6_EndPatternLayer) &(0 O 0 R 0 1 1 0 k 0 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 10 M []0 d0 XR42.0781 3.1914 m71.9316 20.7041 75.1055 21.1738 V76.8691 19.4111 84.1563 3.1914 Y70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 Cf42.0781 30.3906 m71.9316 47.9033 75.1055 48.374 V76.8691 46.6104 84.1563 30.3906 Y70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 Cf42.0781 57.5908 m71.9316 75.1035 75.1055 75.5752 V76.8691 73.8105 84.1563 57.5908 Y70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7596 7349 m-7596 7290.0254 L-7580.4902 7290.0254 L-7580.4902 7349 L-7596 7349 Ln0 O0 0 0 1 k10 M-7596 7300.0586 m-7596 7299.5742 L-7580.4878 7299.5742 L-7580.4878 7300.0586 L-7596 7300.0586 Lf-7596 7317.3838 m-7596 7316.8965 L-7580.4878 7316.8965 L-7580.4878 7317.3838 L-7596 7317.3838 Lf-7595.9995 7302.3682 m-7595.9995 7301.6494 L-7580.4878 7301.6494 L-7580.4878 7302.3682 L-7595.9995 7302.3682 Lf-7595.9995 7312.6328 m-7595.9995 7311.9121 L-7580.4878 7311.9121 L-7580.4878 7312.6328 L-7595.9995 7312.6328 Lf-7595.9995 7310.4951 m-7595.9995 7309.4141 L-7580.4878 7309.4141 L-7580.4878 7310.4951 L-7595.9995 7310.4951 Lf-7595.9995 7304.9395 m-7595.9995 7303.8594 L-7580.4878 7303.8594 L-7580.4878 7304.9395 L-7595.9995 7304.9395 Lf-7595.9995 7307.9854 m-7595.9995 7306.334 L-7580.4878 7306.334 L-7580.4878 7307.9854 L-7595.9995 7307.9854 Lf*u1 D-7580.4888 7316.1455 m-7595.9995 7316.1455 L-7595.9995 7315.6816 L-7595.6514 7315.6816 L-7595.6514 7314.4844 L-7595.9995 7314.4844 L-7595.9995 7314.0215 L-7580.4888 7314.0215 L-7580.4888 7314.4844 L-7580.8408 7314.4844 L-7580.8408 7315.6846 L-7580.4888 7315.6846 L-7580.4888 7316.1455 Lf0 D-7592.1255 7315.6846 m-7591.4199 7315.6846 L-7591.4199 7314.4844 L-7592.1255 7314.4844 L-7592.1255 7315.6846 Lf-7592.8306 7314.4844 m-7593.5361 7314.4844 L-7593.5361 7315.6846 L-7592.8306 7315.6846 L-7592.8306 7314.4844 Lf-7590.7144 7315.6846 m-7590.0098 7315.6846 L-7590.0098 7314.4844 L-7590.7144 7314.4844 L-7590.7144 7315.6846 Lf-7589.3042 7315.6846 m-7588.5986 7315.6846 L-7588.5986 7314.4844 L-7589.3042 7314.4844 L-7589.3042 7315.6846 Lf-7587.8936 7315.6846 m-7587.1885 7315.6846 L-7587.1885 7314.4844 L-7587.8936 7314.4844 L-7587.8936 7315.6846 Lf-7586.4834 7315.6846 m-7585.7778 7315.6846 L-7585.7778 7314.4844 L-7586.4834 7314.4844 L-7586.4834 7315.6846 Lf-7585.0718 7315.6846 m-7584.3672 7315.6846 L-7584.3672 7314.4844 L-7585.0718 7314.4844 L-7585.0718 7315.6846 Lf-7583.6616 7315.6846 m-7582.9575 7315.6846 L-7582.9575 7314.4844 L-7583.6616 7314.4844 L-7583.6616 7315.6846 Lf-7582.2515 7315.6846 m-7581.5454 7315.6846 L-7581.5454 7314.4844 L-7582.2515 7314.4844 L-7582.2515 7315.6846 Lf-7594.9463 7315.6846 m-7594.2407 7315.6846 L-7594.2407 7314.4844 L-7594.9463 7314.4844 L-7594.9463 7315.6846 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7596 7348.998 m-7596 7290.0225 L-7537.0254 7290.0225 L-7537.0254 7348.998 L-7596 7348.998 Ln*u1 D0 O0 0 0 1 k10 M-7569.4902 7308.4453 m-7567.9678 7309.9678 -7568.5166 7312.9834 -7570.7153 7315.1836 c-7572.9146 7317.3809 -7575.9302 7317.9297 -7577.4526 7316.4082 c-7578.9751 7314.8857 -7578.4263 7311.8682 -7576.2271 7309.6709 c-7574.0288 7307.4717 -7571.0127 7306.9238 -7569.4902 7308.4453 cf0 D-7570.1519 7309.0781 m-7571.5728 7307.6582 -7574.2241 7308.0059 -7576.0728 7309.8545 c-7577.9214 7311.7031 -7578.2695 7314.3545 -7576.8486 7315.7754 c-7575.4282 7317.1953 -7572.7769 7316.8486 -7570.9282 7315 c-7569.0786 7313.1504 -7568.7314 7310.5 -7570.1519 7309.0781 cf*U-7587.5327 7299.2607 m-7586.7969 7299.1309 l-7586.71 7298.4385 l-7581.9458 7303.9814 l-7587.5327 7299.2607 lf-7576.9409 7296.3145 m-7577.1235 7294.7266 L-7576.7002 7294.4512 -7576.3184 7294.1309 -7575.9346 7293.8145 C-7575.6841 7296.9189 L-7575.3535 7296.9453 L-7575.4678 7293.4395 L-7575.0503 7293.1162 -7574.6089 7292.8213 -7574.0913 7292.6152 C-7574.1235 7297.7266 L-7573.9063 7297.7734 L-7573.5938 7292.4521 L-7573.2007 7292.3516 -7572.7632 7292.3008 -7572.2642 7292.3213 C-7573.0376 7301.4463 L-7571.7666 7292.3594 L-7571.3359 7292.4063 -7570.96 7292.4746 -7570.6289 7292.5625 C-7571.4551 7299.334 L-7571.2998 7299.2109 L-7570.1465 7292.7148 L-7569.7471 7292.8633 -7569.4238 7293.0449 -7569.1528 7293.25 C-7569.7334 7298.0762 L-7569.4688 7297.9414 L-7568.7114 7293.6426 L-7568.2256 7294.1494 -7567.9194 7294.7344 -7567.5127 7295.2822 C-7568.0713 7297.3496 L-7567.6001 7297.1709 L-7567.1338 7295.7383 L-7566.8096 7296.082 -7566.4063 7296.3945 -7565.8394 7296.6406 c-7565.8506 7296.6357 -7564.7393 7296.6826 -7564.7466 7296.6533 c-7564.7959 7296.4375 -7565.6655 7296.2998 -7565.6455 7296.3105 c-7568.2974 7294.8965 -7567.3232 7292.3301 -7571.8735 7291.873 c-7575.4072 7291.5176 -7576.2515 7294.75 -7579.0962 7295.0615 c-7579.1152 7295.0625 -7579.7632 7295.3174 -7579.8442 7295.4502 C-7579.8486 7295.625 -7579.4595 7295.5186 -7579.2417 7295.4766 c-7578.6001 7295.3477 -7578.0498 7295.2402 -7577.5728 7294.9912 C-7577.4023 7296.1914 L-7576.9409 7296.3145 Lf-7589.6626 7308.9463 m-7591.2495 7308.7637 L-7591.5254 7309.1865 -7591.8462 7309.5693 -7592.1626 7309.9521 C-7589.0576 7310.2031 L-7589.0322 7310.5352 L-7592.5376 7310.4189 L-7592.8608 7310.8369 -7593.1558 7311.2783 -7593.3618 7311.7959 C-7588.2505 7311.7637 L-7588.2031 7311.9814 L-7593.5249 7312.293 L-7593.6265 7312.6865 -7593.6758 7313.125 -7593.6558 7313.623 C-7584.5298 7312.8496 L-7593.6177 7314.1201 L-7593.5713 7314.5498 -7593.5024 7314.9277 -7593.4146 7315.2578 C-7586.6426 7314.4316 L-7586.7656 7314.5869 L-7593.2622 7315.7402 L-7593.1138 7316.1406 -7592.9312 7316.4629 -7592.7271 7316.7344 C-7587.9014 7316.1533 L-7588.0352 7316.418 L-7592.3335 7317.1768 L-7591.8271 7317.6621 -7591.2417 7317.9688 -7590.6943 7318.375 C-7588.6274 7317.8145 L-7588.8066 7318.2871 L-7590.2383 7318.752 L-7589.8945 7319.0762 -7589.5825 7319.4814 -7589.3359 7320.0479 c-7589.3408 7320.0361 -7589.2935 7321.1484 -7589.3242 7321.1416 c-7589.54 7321.0908 -7589.6768 7320.2227 -7589.6675 7320.2412 c-7591.0806 7317.5898 -7593.6475 7318.5645 -7594.1045 7314.0127 c-7594.4595 7310.4805 -7591.2271 7309.6367 -7590.9165 7306.791 c-7590.9136 7306.7725 -7590.6602 7306.125 -7590.5273 7306.043 C-7590.3535 7306.0381 -7590.4575 7306.4277 -7590.5015 7306.6455 c-7590.6294 7307.2871 -7590.7368 7307.8369 -7590.9858 7308.3145 C-7589.7842 7308.4854 L-7589.6626 7308.9463 Lf-7560.0127 7307.2285 m-7555.2495 7308.6348 -7553.9502 7310.9209 -7553.9746 7312.5654 C-7553.5366 7309.459 -7551.6558 7311.8652 -7551.1313 7313.0029 C-7552.0498 7309.416 -7549.4463 7312.5439 -7549.2715 7312.8496 C-7550.2593 7309.4063 -7557.3955 7306.9404 -7560.0127 7307.2285 Cf-7565.9775 7306.2197 m-7569.3242 7300.1738 -7566.4233 7298.5703 -7565.7354 7298.377 c-7565.9233 7298.4287 -7566.3135 7299.2949 -7566.2026 7299.6367 C-7565.9482 7299.0928 -7565.4111 7298.8193 -7564.8994 7298.6094 C-7566.1626 7299.6094 -7566.6943 7302.4111 -7565.9082 7305.9512 c-7565.9775 7306.2197 lf-7568.2222 7306.5254 m-7570.6035 7304.1016 -7572.0474 7303.2773 -7570.1035 7300.668 c-7570.2202 7300.8262 -7570.3838 7301.7168 -7570.1758 7302.0117 C-7570.0942 7301.418 -7569.6626 7300.998 -7569.2358 7300.6455 C-7570.9395 7304.0732 -7568.2222 7306.5254 yf-7560.6577 7305.4199 m-7560.9897 7303.5615 -7559.4922 7302.4688 -7557.8662 7301.8496 C-7558.4194 7301.8662 -7559.0176 7301.9307 -7559.4482 7302.3496 C-7559.4302 7301.9893 -7558.7598 7301.3184 -7558.5654 7301.3359 c-7559.2778 7301.2744 -7561.4951 7300.8447 -7560.8408 7305.6191 c-7560.6577 7305.4199 lf-7557.5576 7306.1133 m-7557.1538 7304.7266 -7554.9502 7304.459 V-7555.5342 7304.2871 -7556.2314 7304.3662 -7556.6626 7304.7852 C-7556.6455 7304.4258 -7555.8408 7303.7178 -7555.6479 7303.7568 c-7557.3921 7303.4141 -7557.6782 7305.9072 y-7557.5576 7306.1133 lf-7554.1152 7307.3213 m-7553.8408 7306.627 -7553.0942 7306.1201 -7552.2646 7306 C-7552.6475 7305.8975 -7553.0854 7305.9873 -7553.4297 7306.3242 C-7553.4175 7306.0352 -7552.7744 7305.4863 -7552.6182 7305.502 c-7554.2729 7305.3496 -7554.1152 7307.3213 Yf-7563.5562 7305.4629 m-7563.6504 7302.1309 -7562.4175 7300.4541 -7560.9761 7299.6514 C-7561.5264 7299.7148 -7562.1162 7299.8271 -7562.5103 7300.2793 C-7562.5249 7299.9189 -7561.9087 7299.1953 -7561.7134 7299.1973 c-7562.4287 7299.1943 -7565.0034 7299.0898 -7563.7866 7305.7109 c-7563.5562 7305.4629 lf-7578.7944 7326.0137 m-7577.3882 7330.7754 -7575.1006 7332.0762 -7573.4575 7332.0518 C-7576.5635 7332.4893 -7574.1567 7334.3701 -7573.0195 7334.8945 C-7576.6074 7333.9766 -7573.4795 7336.5791 -7573.1729 7336.7549 C-7576.6162 7335.7676 -7579.0825 7328.6309 -7578.7944 7326.0137 Cf-7579.8022 7320.0488 m-7585.8481 7316.7002 -7587.4521 7319.6025 -7587.6465 7320.291 c-7587.5938 7320.1025 -7586.7295 7319.7119 -7586.3857 7319.8242 C-7586.9297 7320.0781 -7587.2017 7320.6152 -7587.4126 7321.127 C-7586.4126 7319.8633 -7583.6113 7319.334 -7580.0703 7320.1182 c-7579.8022 7320.0488 lf-7579.4966 7317.8037 m-7581.9214 7315.4229 -7582.7446 7313.9805 -7585.3535 7315.9229 c-7585.1968 7315.8066 -7584.3057 7315.6426 -7584.0112 7315.8496 C-7584.6064 7315.9307 -7585.0239 7316.3633 -7585.3774 7316.79 C-7581.9487 7315.0879 -7579.4966 7317.8037 yf-7580.6025 7325.3682 m-7582.4614 7325.0361 -7583.5537 7326.5342 -7584.1729 7328.1602 C-7584.1558 7327.6074 -7584.0918 7327.0098 -7583.6719 7326.5791 C-7584.0327 7326.5957 -7584.7041 7327.2656 -7584.6865 7327.4609 c-7584.7485 7326.75 -7585.1777 7324.5313 -7580.4038 7325.1846 c-7580.6025 7325.3682 lf-7579.9087 7328.4688 m-7581.2959 7328.873 -7581.5649 7331.0762 V-7581.7354 7330.4922 -7581.6558 7329.7949 -7581.2368 7329.3633 C-7581.5967 7329.3809 -7582.3042 7330.1865 -7582.2666 7330.3789 c-7582.6079 7328.6348 -7580.1152 7328.3477 y-7579.9087 7328.4688 lf-7578.7007 7331.9111 m-7579.3955 7332.1846 -7579.9009 7332.9307 -7580.0234 7333.7617 C-7580.1265 7333.3789 -7580.0337 7332.9404 -7579.6982 7332.5967 C-7579.9873 7332.6104 -7580.5361 7333.252 -7580.5215 7333.4082 c-7580.6729 7331.7529 -7578.7007 7331.9111 Yf-7580.5591 7322.4697 m-7583.8921 7322.377 -7585.5679 7323.6094 -7586.3696 7325.0508 C-7586.3081 7324.502 -7586.1953 7323.9102 -7585.7422 7323.5146 C-7586.1035 7323.5029 -7586.8262 7324.1162 -7586.8257 7324.3135 c-7586.8286 7323.5967 -7586.9321 7321.0234 -7580.3115 7322.2402 c-7580.5591 7322.4697 lfuu-7590.0234 7298.709 m-7590.2856 7298.1953 -7590.0479 7297.6689 -7588.2905 7297.6504 C-7589.0322 7296.9082 L-7590.9927 7296.9941 -7591.3423 7298.1777 -7591.1665 7298.7578 c-7590.9736 7299.3906 -7590.5488 7299.9023 -7590.2085 7300.25 C-7591.2031 7300.6113 -7591.2505 7301.3916 -7591.0479 7301.79 c-7590.7729 7302.334 -7590.2998 7302.752 -7589.9487 7303.0176 C-7590.9448 7303.377 -7590.8623 7304.1133 -7590.6074 7304.457 c-7590.2856 7304.8906 -7589.8174 7305.2031 -7589.4751 7305.4023 C-7590.4585 7305.8301 -7590.3022 7306.5234 -7590.0239 7306.8154 c-7589.6929 7307.166 -7589.2466 7307.3916 -7588.9199 7307.5322 C-7589.7695 7308.0225 -7589.5537 7308.6318 -7589.2715 7308.8633 c-7588.9458 7309.1318 -7588.5342 7309.2842 -7588.23 7309.377 C-7588.9395 7309.9082 -7588.6802 7310.4297 -7588.4014 7310.6074 c-7588.0698 7310.8174 -7587.6714 7310.9082 -7587.3857 7310.9541 C-7587.9673 7311.5098 -7587.6768 7311.9482 -7587.4097 7312.0762 c-7586.9326 7312.3037 -7586.3511 7312.2764 -7586.1768 7312.2813 c-7585.6343 7312.2959 -7584.8838 7312.125 -7584.4272 7312.0703 c-7583.3442 7311.9434 -7579.5718 7311.2754 -7577.9023 7311.4385 C-7578.1704 7311.2285 -7578.1714 7311.2285 v-7580.1304 7311.041 -7583.0479 7311.4678 -7584.1294 7311.5957 c-7584.9839 7311.6953 -7586.1182 7311.9951 -7586.9951 7311.7295 c-7587.2593 7311.6494 -7587.3696 7311.4453 -7586.8906 7311.0215 C-7586.3135 7311.0732 -7585.5737 7311.002 -7585.1118 7311.0039 c-7583.9009 7311.0098 -7579.6504 7310.7832 -7577.8311 7311.1895 C-7578.0986 7310.9209 -7578.0986 7310.9199 v-7580.2344 7310.4492 -7583.5098 7310.5254 -7584.7202 7310.5186 c-7585.6758 7310.5137 -7586.9673 7310.6914 -7587.8984 7310.2783 c-7588.1777 7310.1563 -7588.2729 7309.918 -7587.6953 7309.5166 C-7587.0615 7309.6602 -7586.2153 7309.6816 -7585.6968 7309.7471 c-7584.3623 7309.918 -7579.6431 7310.2441 -7577.6929 7310.9375 C-7577.9502 7310.6064 -7577.9512 7310.6064 v-7580.2422 7309.7969 -7583.8647 7309.4375 -7585.1992 7309.2656 c-7586.2529 7309.1309 -7587.7007 7309.1504 -7588.6719 7308.5703 c-7588.9624 7308.3975 -7589.0352 7308.123 -7588.3481 7307.7578 C-7587.6704 7307.998 -7586.7578 7308.1328 -7586.2026 7308.2754 c-7584.7534 7308.6445 -7579.5938 7309.6426 -7577.5361 7310.6689 C-7577.7754 7310.2695 -7577.7759 7310.2695 v-7580.1934 7309.0664 -7584.1392 7308.1797 -7585.5879 7307.8105 c-7586.7314 7307.5186 -7588.3311 7307.3457 -7589.3242 7306.5723 c-7589.6182 7306.3457 -7589.6626 7306.0352 -7588.8745 7305.7305 C-7588.1606 7306.082 -7587.1802 7306.3535 -7586.5889 7306.584 c-7585.0415 7307.1865 -7579.4863 7308.9863 -7577.3564 7310.3984 C-7577.5654 7309.9258 -7577.5674 7309.9248 v-7580.0698 7308.2695 -7584.3018 7306.7578 -7585.8486 7306.1543 c-7587.0703 7305.6777 -7588.8115 7305.2695 -7589.8018 7304.2842 c-7590.0786 7304.0098 -7590.1006 7303.6846 -7589.3384 7303.4551 C-7588.5942 7303.9404 -7587.5234 7304.3584 -7586.8926 7304.6895 c-7585.2446 7305.5518 -7579.2441 7308.2246 -7577.1055 7310.0957 C-7577.2407 7309.5186 -7577.2417 7309.5186 v-7579.7559 7307.3281 -7584.2954 7305.127 -7585.9438 7304.2617 c-7587.2456 7303.5801 -7589.1602 7302.9248 -7590.0815 7301.6709 c-7590.3135 7301.3555 -7590.2974 7301.0127 -7589.6118 7300.8105 C-7588.8594 7301.4668 -7587.6641 7302.0762 -7586.9888 7302.5322 c-7585.27 7303.6953 -7578.9126 7307.377 -7576.8442 7309.7637 C-7577.1377 7308.9902 -7577.1382 7308.9893 v-7579.5718 7306.1934 -7584.0825 7303.2842 -7585.8018 7302.1221 c-7587.1582 7301.2031 -7589.2295 7300.2607 -7590.0234 7298.709 cfUu-7587.2329 7295.918 m-7587.7446 7295.6543 -7588.2715 7295.8926 -7588.2905 7297.6504 C-7589.0313 7296.9082 L-7588.9473 7294.9473 -7587.7622 7294.5977 -7587.1826 7294.7754 c-7586.5503 7294.9658 -7586.0386 7295.3916 -7585.6919 7295.7324 C-7585.3306 7294.7373 -7584.5498 7294.6904 -7584.1504 7294.8906 c-7583.6064 7295.168 -7583.1895 7295.6406 -7582.9224 7295.9922 C-7582.5649 7294.9951 -7581.8281 7295.0781 -7581.4834 7295.334 c-7581.0498 7295.6543 -7580.7368 7296.123 -7580.5376 7296.4648 C-7580.1113 7295.4824 -7579.4175 7295.6387 -7579.1255 7295.918 c-7578.7759 7296.248 -7578.5488 7296.6943 -7578.4082 7297.0215 C-7577.9185 7296.1719 -7577.3086 7296.3877 -7577.0767 7296.6689 c-7576.8086 7296.9951 -7576.6553 7297.4053 -7576.5649 7297.7109 C-7576.0327 7297.002 -7575.5103 7297.2607 -7575.3345 7297.5391 c-7575.1235 7297.8701 -7575.0322 7298.2695 -7574.9858 7298.5537 C-7574.4312 7297.9727 -7573.9912 7298.2637 -7573.8638 7298.5313 c-7573.6367 7299.0078 -7573.6655 7299.5898 -7573.6592 7299.7637 c-7573.6431 7300.3066 -7573.8159 7301.0566 -7573.8696 7301.5137 c-7573.9966 7302.5957 -7574.6655 7306.3682 -7574.5034 7308.0381 C-7574.7129 7307.7695 l-7574.8999 7305.8105 -7574.4727 7302.8926 -7574.3457 7301.8105 c-7574.2446 7300.957 -7573.9458 7299.8223 -7574.2114 7298.9453 c-7574.2915 7298.6816 -7574.4946 7298.5703 -7574.9199 7299.0508 C-7574.8682 7299.6279 -7574.9395 7300.3662 -7574.9375 7300.8281 c-7574.9302 7302.04 -7575.1567 7306.29 -7574.7524 7308.1094 C-7575.0195 7307.8428 -7575.0195 7307.8418 v-7575.4922 7305.7061 -7575.4155 7302.4316 -7575.4214 7301.2207 c-7575.4272 7300.2646 -7575.25 7298.9736 -7575.6616 7298.043 c-7575.7847 7297.7637 -7576.0234 7297.668 -7576.4238 7298.2461 C-7576.2798 7298.8789 -7576.2593 7299.7246 -7576.1929 7300.2441 c-7576.0225 7301.5781 -7575.6958 7306.2959 -7575.0034 7308.248 C-7575.3345 7307.9902 -7575.3354 7307.9893 v-7576.1455 7305.6982 -7576.5039 7302.0762 -7576.6753 7300.7402 c-7576.8096 7299.6885 -7576.79 7298.2402 -7577.3706 7297.2695 c-7577.5435 7296.9785 -7577.8174 7296.9053 -7578.1816 7297.5938 C-7577.9434 7298.2695 -7577.8081 7299.1836 -7577.6665 7299.7383 c-7577.2969 7301.1865 -7576.2993 7306.3477 -7575.27 7308.4053 C-7575.6704 7308.166 -7575.6714 7308.166 v-7576.8745 7305.7471 -7577.7607 7301.8008 -7578.1294 7300.3535 c-7578.4214 7299.209 -7578.5962 7297.6094 -7579.3662 7296.6172 c-7579.5962 7296.3232 -7579.9058 7296.2783 -7580.2114 7297.0664 C-7579.8594 7297.7793 -7579.5874 7298.7617 -7579.3574 7299.3516 c-7578.7534 7300.8984 -7576.9546 7306.4541 -7575.5415 7308.585 C-7576.0161 7308.375 l-7577.6704 7305.8711 -7579.1826 7301.6387 -7579.7866 7300.0918 c-7580.2622 7298.8701 -7580.6714 7297.1289 -7581.6558 7296.1387 c-7581.9312 7295.8623 -7582.2559 7295.8398 -7582.4858 7296.6016 C-7582.0015 7297.3457 -7581.5825 7298.418 -7581.2529 7299.0469 c-7580.3887 7300.6953 -7577.7158 7306.6973 -7575.8447 7308.8359 C-7576.4209 7308.6992 -7576.4214 7308.6992 v-7578.6128 7306.1846 -7580.8145 7301.6455 -7581.6782 7299.9961 c-7582.3599 7298.6943 -7583.0161 7296.7793 -7584.2695 7295.8594 c-7584.5854 7295.627 -7584.9272 7295.6426 -7585.1313 7296.3281 C-7584.4736 7297.082 -7583.8638 7298.2764 -7583.4072 7298.9512 c-7582.2441 7300.6709 -7578.5635 7307.0273 -7576.1768 7309.0967 C-7576.9502 7308.8037 -7576.9512 7308.8018 v-7579.7471 7306.3682 -7582.6558 7301.8584 -7583.8184 7300.1387 c-7584.7368 7298.7822 -7585.6802 7296.7119 -7587.2329 7295.918 cfUU*u1 D-7537.0264 7300.0566 m-7543.5264 7300.0566 L-7543.1826 7300.4189 -7542.7622 7300.7578 -7542.1777 7301.0332 c-7542.1978 7301.0234 -7541.3994 7301.1563 -7541.2622 7301.332 c-7541.0967 7301.541 -7542.7886 7301.582 -7543.6929 7300.5342 C-7544.3486 7303.709 L-7544.8135 7304.0273 L-7544.0918 7300.0977 L-7544.5249 7299.5703 -7544.8594 7299.002 -7545.3687 7298.5186 C-7546.0337 7304.6289 L-7546.29 7304.7754 L-7545.8286 7298.1475 L-7546.1104 7297.957 -7546.4424 7297.791 -7546.8486 7297.6621 C-7547.7119 7305.0225 L-7547.9482 7305.0078 L-7547.3369 7297.5322 L-7547.6729 7297.4609 -7548.0518 7297.4111 -7548.4834 7297.3857 C-7549.0303 7304.9541 L-7549.1992 7304.9521 L-7548.9814 7297.3711 L-7549.4814 7297.377 -7549.9175 7297.4473 -7550.3042 7297.5674 C-7550.4155 7304.7061 L-7550.6338 7304.6689 L-7550.7935 7297.7549 L-7551.2998 7297.9863 -7551.7266 7298.3018 -7552.1279 7298.6455 C-7552.0454 7304.2412 L-7552.3774 7304.0273 L-7552.5752 7299.043 L-7552.9434 7299.377 -7553.3096 7299.7168 -7553.7178 7300.0127 C-7553.7217 7303.3389 L-7554.1455 7303.0645 L-7554.1553 7300.2988 L-7554.6191 7300.5693 -7555.5854 7301.0098 -7556.4014 7300.8672 C-7555.1714 7300.543 -7554.7925 7300.3301 -7554.5034 7300.0566 C-7557.7295 7300.0566 L-7553.8955 7304.4512 -7547.3394 7308.6865 -7542.3018 7302.0225 C-7542.1807 7301.8838 -7541.8174 7301.5625 -7541.1255 7301.6475 C-7537.0264 7301.6475 L-7537.0264 7302.3672 L-7540.4834 7302.3672 L-7540.1318 7302.6777 -7539.8223 7303.4863 -7540.0386 7303.8574 C-7537.0264 7303.8574 L-7537.0264 7304.9385 L-7540.1689 7304.9385 L-7540.2935 7305.4492 -7540.5439 7305.8857 -7540.8218 7306.3311 C-7537.0264 7306.3311 L-7537.0264 7307.9873 L-7541.7354 7307.9873 L-7541.9424 7308.4453 -7542.1016 7308.9082 -7542.1768 7309.4121 C-7537.0264 7309.4121 L-7537.0264 7310.4922 L-7542.1714 7310.4922 L-7542.1074 7310.9834 -7541.9614 7311.4668 -7541.7378 7311.9111 C-7537.0264 7311.9111 L-7537.0264 7312.6309 L-7541.2744 7312.6309 L-7540.9375 7313.0039 -7539.8535 7313.5938 -7539.9375 7314.0225 C-7537.0239 7314.0225 L-7537.0239 7314.4824 L-7537.3721 7314.4824 L-7537.3721 7315.6826 L-7537.0239 7315.6826 L-7537.0239 7316.1426 L-7544.9736 7316.1426 L-7545.4082 7316.4375 -7546.2192 7316.4521 -7546.9897 7316.1426 C-7550.8564 7316.1426 L-7551.1162 7316.4609 -7552.1807 7316.5693 -7552.6846 7316.1426 C-7553.8232 7316.1426 L-7554.0439 7316.3994 -7554.3174 7316.6387 -7554.6782 7316.8975 C-7537.0264 7316.8975 L-7537.0264 7317.3809 L-7555.8394 7317.3809 L-7556.1982 7317.5615 -7557.2417 7317.8389 -7558.3774 7317.3809 C-7568.6406 7317.3809 L-7568.6406 7327.6494 L-7568.1826 7328.7861 -7568.4614 7329.8281 -7568.6455 7330.1895 C-7568.6455 7349 L-7569.1279 7349 L-7569.1279 7331.3477 L-7569.3838 7331.709 -7569.6235 7331.9824 -7569.8794 7332.2031 C-7569.8794 7333.3418 L-7569.4536 7333.8457 -7569.5615 7334.9082 -7569.8794 7335.1689 C-7569.8794 7339.0361 L-7569.5698 7339.8076 -7569.5854 7340.6182 -7569.8833 7341.0518 C-7569.8833 7348.998 L-7570.3394 7348.998 L-7570.3394 7348.6543 L-7571.5435 7348.6543 L-7571.5435 7348.998 L-7572.0039 7348.998 L-7572.0039 7346.0879 L-7572.4287 7346.1738 -7573.0186 7345.0898 -7573.3955 7344.752 C-7573.3955 7348.9951 L-7574.1113 7348.9951 L-7574.1113 7344.2891 L-7574.5552 7344.0654 -7575.0376 7343.9189 -7575.5298 7343.8555 C-7575.5298 7348.9951 L-7576.6138 7348.9951 L-7576.6138 7343.8496 L-7577.1143 7343.9248 -7577.5767 7344.085 -7578.0391 7344.29 C-7578.0391 7348.9951 L-7579.6958 7348.9951 L-7579.6958 7345.2041 L-7580.1362 7345.4824 -7580.5728 7345.7324 -7581.0854 7345.8555 C-7581.0854 7348.9951 L-7582.1689 7348.9951 L-7582.1689 7345.9893 L-7582.5552 7346.1289 -7583.3486 7345.8945 -7583.6543 7345.543 C-7583.6543 7348.9951 L-7584.3794 7348.9951 L-7584.3794 7344.9014 L-7584.4634 7344.209 -7584.1382 7343.8457 -7584.0015 7343.7227 C-7577.3359 7338.6885 -7581.5713 7332.1309 -7585.9658 7328.2959 C-7585.9658 7331.5244 L-7585.6919 7331.2344 -7585.48 7330.8555 -7585.1558 7329.625 C-7585.0127 7330.4414 -7585.4526 7331.4082 -7585.7246 7331.8711 C-7582.9575 7331.8828 L-7582.6831 7332.3047 L-7586.0103 7332.3066 L-7586.3066 7332.7168 -7586.6455 7333.084 -7586.98 7333.4512 C-7581.9951 7333.6475 L-7581.7817 7333.9814 L-7587.3774 7333.8984 L-7587.7202 7334.2998 -7588.0361 7334.7266 -7588.2681 7335.2314 C-7581.3535 7335.3926 L-7581.3169 7335.6113 L-7588.4546 7335.7227 L-7588.5742 7336.1094 -7588.6465 7336.5439 -7588.6514 7337.0449 C-7581.0688 7336.8262 L-7581.0688 7336.9951 L-7588.6362 7337.543 L-7588.6113 7337.9746 -7588.5615 7338.3545 -7588.4888 7338.6895 C-7581.0142 7338.0781 L-7580.9995 7338.3145 L-7588.3599 7339.1777 L-7588.2314 7339.585 -7588.0654 7339.916 -7587.8755 7340.1973 C-7581.2485 7339.7354 L-7581.3945 7339.9932 L-7587.5034 7340.6572 L-7587.0215 7341.168 -7586.4521 7341.502 -7585.9238 7341.9336 C-7581.9946 7341.2139 L-7582.3135 7341.6768 L-7585.4878 7342.334 L-7584.4409 7343.2373 -7584.4814 7344.9297 -7584.6914 7344.7637 c-7584.8657 7344.627 -7584.9985 7343.8281 -7584.9897 7343.8486 c-7585.2656 7343.2637 -7585.6035 7342.8438 -7585.9697 7342.502 C-7585.9697 7349 L-7586.4536 7349 L-7586.4536 7342.085 L-7587.6582 7341.1377 -7588.9551 7340.5674 -7589.1167 7337.4111 c-7589.25 7334.8311 -7587.5562 7333.7656 -7586.4497 7332.2871 C-7586.4497 7327.7441 L-7587.5767 7326.418 -7588.5225 7324.9912 -7588.9614 7323.1455 C-7589.8809 7318.3662 -7586.7568 7312.8545 -7581.7959 7312.4863 C-7581.7183 7312.6133 L-7586.1494 7313.5352 -7588.8442 7318.6641 -7587.9814 7323.1455 C-7587.0635 7327.0029 -7583.9395 7329.0234 -7581.5503 7332.1475 C-7579.8975 7334.5361 -7579.3457 7337.1094 -7580.0806 7339.8652 c-7580.8545 7342.6133 -7583.25 7343.5977 -7583.5649 7344.5303 c-7583.8506 7345.375 -7582.6689 7345.7002 -7581.6968 7345.6348 C-7579.5454 7345.4395 -7578.1602 7342.4922 -7574.3184 7343.7559 c-7573.2222 7344.1162 -7572.5913 7344.9375 -7572.3042 7345.5469 c-7572.1104 7345.957 -7570.7241 7345.4395 -7571.9165 7343.2207 C-7574.8774 7343.0879 -7574.4521 7341.0645 -7574.2026 7341.2109 c-7572.5015 7342.209 -7571.1826 7340.3047 -7572.1055 7339.2959 c-7574.2129 7336.9902 -7575.8481 7337.2861 -7577.9248 7333.3174 c-7580.2095 7328.9521 -7581.2695 7323.0723 -7578.7959 7318.9082 C-7578.7954 7318.1387 L-7579.0479 7317.5439 -7579.0249 7317.085 -7579.2134 7316.168 c-7579.3818 7315.3535 -7579.6689 7315.085 -7579.9575 7314.9121 C-7580.1304 7314.7969 -7580.5015 7314.9053 -7580.5054 7315.1445 c-7580.52 7315.7461 -7579.7842 7315.5225 -7579.8271 7315.584 c-7580.1895 7316.0869 -7580.7329 7315.7295 -7580.8345 7315.377 c-7580.9648 7314.9287 -7580.6606 7314.5762 -7580.3145 7314.4902 C-7579.6655 7314.3594 -7579.1968 7314.9277 -7578.9575 7315.457 c-7578.4365 7316.6074 -7578.4746 7318.252 -7577.2607 7318.8574 c-7576.4385 7319.2471 -7575.5537 7318.9277 -7574.7271 7318.6328 c-7571.8296 7317.6016 -7568.3096 7314.082 -7567.2783 7311.1836 c-7566.9834 7310.3574 -7566.6641 7309.4727 -7567.0537 7308.6494 c-7567.6606 7307.4375 -7569.3042 7307.4746 -7570.4546 7306.9541 c-7570.9834 7306.7148 -7571.5513 7306.2461 -7571.4214 7305.5967 C-7571.3345 7305.25 -7570.9824 7304.9473 -7570.5327 7305.0762 c-7570.1826 7305.1797 -7569.8242 7305.7227 -7570.3281 7306.084 c-7570.3882 7306.127 -7570.1655 7305.3906 -7570.7681 7305.4053 c-7571.0054 7305.4111 -7571.1143 7305.7813 -7570.9995 7305.9541 C-7570.8257 7306.2422 -7570.5591 7306.5293 -7569.7422 7306.6973 c-7568.7085 7306.9102 -7568.2578 7306.8535 -7567.5386 7307.2266 C-7567.1167 7307.2266 L-7562.9546 7304.7529 -7557.0674 7305.8008 -7552.7095 7308.0977 c-7552.0527 7308.4551 -7551.4834 7308.8008 -7550.9126 7309.1475 c-7549.5488 7309.9766 -7547.5542 7312.8857 Y-7547.1782 7313.332 -7546.9521 7313.7979 -7546.5225 7314.0625 c-7545.3569 7314.7783 -7543.8184 7313.5215 -7544.8154 7311.8193 c-7544.9614 7311.5703 -7542.9385 7311.1455 -7542.8057 7314.1064 C-7540.5874 7315.2988 -7540.0698 7313.9121 -7540.4795 7313.7178 c-7541.0889 7313.4316 -7541.9087 7312.7998 -7542.2705 7311.7041 c-7543.5342 7307.8623 -7540.3599 7306.0234 -7540.4463 7304.3262 C-7540.3008 7303.5322 -7540.6514 7302.1719 -7541.4961 7302.459 c-7542.4282 7302.7725 -7543.4126 7305.168 -7546.1606 7305.9414 c-7548.9175 7306.6768 -7551.4897 7306.125 -7553.8774 7304.4717 C-7557.0034 7302.084 -7559.0234 7298.959 -7562.8818 7298.041 C-7567.3623 7297.1777 -7572.4902 7299.873 -7573.4126 7304.3037 C-7573.5391 7304.2266 L-7573.1729 7299.2656 -7567.6592 7296.1426 -7562.8818 7297.0615 C-7561.0361 7297.502 -7559.6104 7298.4453 -7558.2822 7299.5723 C-7553.7393 7299.5723 L-7552.2607 7298.4668 -7551.1943 7296.7725 -7548.6143 7296.9053 c-7545.4585 7297.0664 -7544.8882 7298.3633 -7543.9409 7299.5723 C-7537.0264 7299.5723 L-7537.0264 7300.0566 Lf0 D-7566.1362 7309.4121 m-7558.5166 7309.4121 L-7559.5635 7308.8301 -7560.5435 7308.3184 -7561.8057 7307.9873 C-7566.6079 7307.9873 L-7566.2998 7308.3809 -7566.1055 7308.8701 -7566.1362 7309.4121 Cf-7567.0591 7311.9111 m-7555.5254 7311.9111 L-7555.6338 7311.6201 -7556.0063 7310.9404 -7556.8042 7310.4922 C-7566.4321 7310.4922 L-7566.6118 7310.9727 -7566.8232 7311.4463 -7567.0591 7311.9111 Cf-7555.8096 7314.0225 m-7555.3174 7313.4395 -7555.2568 7313.2207 -7555.3857 7312.6309 C-7567.4521 7312.6309 L-7567.7295 7313.1074 -7568.0322 7313.5723 -7568.3599 7314.0225 C-7560.2568 7314.0225 L-7559.9111 7313.2041 -7559.1665 7313.3711 -7558.8218 7314.0225 C-7555.8096 7314.0225 Lf-7557.1201 7314.4824 m-7557.1201 7314.8242 L-7556.5664 7314.7861 -7556.4995 7314.752 -7556.1982 7314.4824 C-7557.1201 7314.4824 Lf-7558.4863 7314.4824 m-7558.3311 7314.6719 -7558.0264 7314.8154 -7557.8257 7314.8457 C-7557.8257 7314.4824 L-7558.4863 7314.4824 Lf-7561.3535 7314.4824 m-7561.3535 7315.6826 L-7560.6465 7315.6826 L-7560.6465 7314.4824 L-7561.3535 7314.4824 Lf-7562.7622 7314.4824 m-7562.7622 7315.6826 L-7562.0576 7315.6826 L-7562.0576 7314.4824 L-7562.7622 7314.4824 Lf-7564.1729 7314.4824 m-7564.1729 7315.6826 L-7563.4678 7315.6826 L-7563.4678 7314.4824 L-7564.1729 7314.4824 Lf-7565.5835 7314.4824 m-7565.5835 7315.6826 L-7564.8774 7315.6826 L-7564.8774 7314.4824 L-7565.5835 7314.4824 Lf-7566.9946 7314.4824 m-7566.9946 7315.6826 L-7566.2886 7315.6826 L-7566.2886 7314.4824 L-7566.9946 7314.4824 Lf-7572 7325.7695 m-7572 7317.6504 L-7572.4497 7317.9756 -7572.9146 7318.2754 -7573.3911 7318.5449 C-7573.3911 7330.6406 L-7572.8018 7330.7695 -7572.5825 7330.709 -7572 7330.2158 C-7572 7327.2041 L-7572.6514 7326.8613 -7572.8169 7326.1152 -7572 7325.7695 Cf-7571.5391 7325.3799 m-7570.3394 7325.3799 L-7570.3394 7324.6748 L-7571.5391 7324.6748 L-7571.5391 7325.3799 Lf-7570.3394 7323.9688 m-7570.3394 7323.2637 L-7571.5391 7323.2637 L-7571.5391 7323.9688 L-7570.3394 7323.9688 Lf-7570.3394 7322.5586 m-7570.3394 7321.8535 L-7571.5391 7321.8535 L-7571.5391 7322.5586 L-7570.3394 7322.5586 Lf-7570.3394 7321.1484 m-7570.3394 7320.4434 L-7571.5391 7320.4434 L-7571.5391 7321.1484 L-7570.3394 7321.1484 Lf-7570.3394 7319.7373 m-7570.3394 7319.0313 L-7571.5391 7319.0313 L-7571.5391 7319.7373 L-7570.3394 7319.7373 Lf-7570.3394 7318.3262 m-7570.3394 7317.6201 L-7571.5391 7317.6201 L-7571.5391 7318.3262 L-7570.3394 7318.3262 Lf-7570.3394 7316.918 m-7570.3394 7316.2725 L-7570.5728 7316.4941 -7570.8135 7316.709 -7571.0591 7316.918 C-7570.3394 7316.918 Lf-7568.4058 7315.6826 m-7567.6992 7315.6826 L-7567.6992 7314.4824 L-7568.4058 7314.4824 L-7568.4058 7315.6826 Lf-7569.7495 7315.6826 m-7569.1094 7315.6826 L-7569.1094 7314.9746 L-7569.3159 7315.2158 -7569.5288 7315.4521 -7569.7495 7315.6826 Cf-7575.5298 7319.5273 m-7575.5298 7329.2227 L-7575.0815 7330.0186 -7574.4014 7330.3926 -7574.1113 7330.502 C-7574.1113 7318.9258 L-7574.5762 7319.1563 -7575.0488 7319.3564 -7575.5298 7319.5273 Cf-7578.0352 7319.209 m-7578.0352 7324.2207 L-7577.7041 7325.4844 -7577.1929 7326.4629 -7576.6094 7327.5098 C-7576.6094 7319.7725 L-7577.1606 7319.7705 -7577.6494 7319.5439 -7578.0352 7319.209 Cf-7570.3394 7347.2441 m-7571.5391 7347.2441 L-7571.5391 7347.9482 L-7570.3394 7347.9482 L-7570.3394 7347.2441 Lf-7570.3394 7345.834 m-7571.3896 7345.834 L-7571.4375 7345.8838 -7571.4878 7345.9297 -7571.5391 7345.9678 C-7571.5391 7346.5381 L-7570.3394 7346.5381 L-7570.3394 7345.834 Lf-7570.3394 7344.4209 m-7571.0039 7344.4209 L-7570.9702 7344.6475 -7570.9595 7344.9121 -7571.0137 7345.1279 C-7570.3394 7345.1279 L-7570.3394 7344.4209 Lf-7570.3394 7343.0117 m-7571.5015 7343.0117 L-7571.3872 7343.2461 -7571.2798 7343.4814 -7571.1919 7343.7168 C-7570.3394 7343.7168 L-7570.3394 7343.0117 Lf-7570.3394 7341.9033 m-7570.4614 7342.0625 -7570.5938 7342.2197 -7570.6753 7342.3066 C-7570.3394 7342.3066 L-7570.3394 7341.9033 Lf-7570.4399 7326.4395 m-7570.6968 7326.2891 -7572.0845 7325.8135 -7572.0737 7326.5381 c-7572.0674 7326.9502 -7571.4512 7327.2412 -7571.2495 7327.4473 c-7570.6338 7328.0703 -7570.1885 7329.5254 -7571.2974 7330.4238 c-7573.6328 7332.3145 -7575.1865 7330.5879 Y-7579.1118 7326.7324 -7579.1104 7321.1113 Y-7580.2295 7325.334 -7578.9663 7330.3936 -7577.4048 7333.1426 c-7574.8818 7337.584 -7573.9575 7336.0566 -7571.6113 7338.9482 c-7570.8047 7339.9434 -7571.1294 7342.3818 -7573.9546 7341.75 c-7574.2026 7341.6934 -7573.7759 7342.2949 -7573.2681 7342.5498 c-7571.1104 7343.6406 -7569.8618 7341.1631 -7570.1338 7339.8594 c-7570.4761 7338.2109 -7571.0986 7337.3662 -7573.1616 7336.2246 C-7572.8311 7336.2373 -7571.2134 7336.541 -7570.2295 7335.0088 c-7570.0195 7334.6826 -7569.8745 7333.7578 -7570.3042 7333.877 c-7570.3906 7333.9023 -7570.6416 7334.1973 -7570.9414 7334.3613 c-7572.9321 7335.3945 -7573.7075 7333.0137 Y-7571.4165 7332.8418 -7570.7515 7332.7637 -7569.2559 7330.7637 c-7569.0542 7330.4941 -7568.1162 7327.8047 -7570.4399 7326.4395 cf-7571.5391 7333.1367 m-7571.5391 7334.0225 L-7571.2993 7333.998 -7570.9302 7333.957 -7570.3394 7333.4033 C-7570.3394 7333.1367 L-7571.5391 7333.1367 Lf-7572.9946 7333.2305 m-7572.8042 7333.7031 -7572.4185 7333.9473 -7572 7334.0127 C-7572 7333.1709 L-7572.3857 7333.2354 -7572.9946 7333.2305 Yf-7570.3394 7336.666 m-7570.3394 7335.959 L-7570.6382 7335.959 L-7570.9136 7336.1475 -7571.2246 7336.293 -7571.5391 7336.3818 C-7571.5391 7336.666 L-7570.3394 7336.666 Lf-7570.9897 7337.3682 m-7570.7935 7337.5342 -7570.5576 7337.7813 -7570.3394 7338.1084 C-7570.3394 7337.3682 L-7570.9897 7337.3682 Lf-7572.2495 7336.4746 m-7572.1914 7336.5273 -7572.1025 7336.5967 -7572 7336.6719 C-7572 7336.4668 L-7572.0835 7336.4746 -7572.1675 7336.4785 -7572.2495 7336.4746 Cf-7571.5391 7328.9063 m-7571.5391 7329.8262 L-7571.2715 7329.5273 -7571.2358 7329.46 -7571.1982 7328.9063 C-7571.5391 7328.9063 Lf-7571.1758 7328.2012 m-7571.2065 7328.002 -7571.3506 7327.6943 -7571.5391 7327.54 C-7571.5391 7328.2012 L-7571.1758 7328.2012 Lf-7559.1865 7316.8975 m-7559.4233 7316.6943 -7559.6401 7316.4463 -7559.8271 7316.1426 C-7569.8794 7316.1426 L-7569.8794 7326.1992 L-7569.5762 7326.3857 -7569.3271 7326.6025 -7569.1255 7326.8408 C-7569.1265 7316.8975 L-7559.1865 7316.8975 Lf-7552.6226 7315.6826 m-7552.0698 7315.0928 -7552.0298 7314.7227 -7552.0034 7314.4824 C-7552.8887 7314.4824 L-7552.8887 7315.6826 L-7552.6226 7315.6826 Lf-7552.8564 7314.0225 m-7552.0127 7314.0225 L-7552.0791 7313.6045 -7552.3232 7313.2188 -7552.7959 7313.0273 C-7552.7915 7313.6367 -7552.8564 7314.0225 Vf-7549.3623 7314.4824 m-7549.6455 7314.4824 L-7549.7334 7314.7979 -7549.8799 7315.1084 -7550.0674 7315.3838 C-7550.0674 7315.6826 L-7549.3623 7315.6826 L-7549.3623 7314.4824 Lf-7549.3545 7314.0225 m-7549.4302 7313.9199 -7549.4995 7313.8311 -7549.5518 7313.7734 C-7549.5479 7313.8555 -7549.5518 7313.9395 -7549.5601 7314.0225 C-7549.3545 7314.0225 Lf-7547.9185 7315.6826 m-7548.2446 7315.4648 -7548.4912 7315.2305 -7548.6577 7315.0332 C-7548.6577 7315.6826 L-7547.9185 7315.6826 Lf-7543.7202 7315.3477 m-7543.8066 7315.4287 -7543.9639 7315.5615 -7544.1226 7315.6826 C-7543.7202 7315.6826 L-7543.7202 7315.3477 Lf-7543.4751 7312.7549 m-7543.7329 7312.2461 -7544.0913 7311.8945 -7544.2778 7312.0684 c-7544.4248 7312.2041 -7543.4424 7313.9434 -7544.9009 7314.7725 c-7545.7158 7315.2354 -7546.8721 7314.873 -7547.2842 7314.3066 c-7549.5615 7311.1836 -7549.4746 7310.5586 -7552.8848 7308.6172 c-7555.6318 7307.0537 -7560.6943 7305.793 -7564.9155 7306.9121 C-7559.2935 7306.9102 -7555.4385 7310.8359 V-7553.7119 7312.3906 -7555.6025 7314.7246 v-7556.5015 7315.834 -7557.9551 7315.3887 -7558.5791 7314.7734 c-7558.7842 7314.5703 -7559.0752 7313.9551 -7559.4873 7313.9482 c-7560.2134 7313.9385 -7559.7378 7315.3242 -7559.5874 7315.582 c-7558.2217 7317.9063 -7555.5322 7316.9678 -7555.2622 7316.7656 c-7553.2622 7315.2705 -7553.1846 7314.6064 -7553.0127 7312.3145 C-7550.6328 7313.0898 -7551.6655 7315.0801 v-7551.8286 7315.3809 -7552.1245 7315.6318 -7552.1489 7315.7178 c-7552.2695 7316.1475 -7551.3423 7316.0029 -7551.0176 7315.7949 c-7549.4858 7314.8086 -7549.7881 7313.1914 -7549.8018 7312.8613 C-7548.6602 7314.9248 -7547.8154 7315.5469 -7546.1675 7315.8887 c-7544.8633 7316.1602 -7542.3857 7314.9121 -7543.4751 7312.7549 cf-7542.3096 7314.8301 m-7542.5454 7314.7422 -7542.7817 7314.6357 -7543.0142 7314.5215 C-7543.0142 7315.6826 L-7542.3096 7315.6826 L-7542.3096 7314.8301 Lf-7540.8994 7315.0088 m-7541.1143 7315.0625 -7541.3794 7315.0518 -7541.6055 7315.0186 C-7541.6055 7315.6826 L-7540.8994 7315.6826 L-7540.8994 7315.0088 Lf-7538.7822 7315.6826 m-7538.0767 7315.6826 L-7538.0767 7314.4824 L-7538.7822 7314.4824 L-7538.7822 7315.6826 Lf-7540.1934 7315.6826 m-7539.4878 7315.6826 L-7539.4878 7314.4824 L-7540.0586 7314.4824 L-7540.0967 7314.5342 -7540.1426 7314.585 -7540.1934 7314.6328 C-7540.1934 7315.6826 Lf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed 3)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3723.5 3476.291 m-3624.5696 3476.291 L-3624.5696 3459.9272 L-3723.5 3459.9272 L-3723.5 3476.291 Lnuu0 O0 0 0 1 k-3627.0071 3465.6094 m-3626.7832 3465.5537 -3626.5879 3465.8643 -3626.6721 3466.0039 C-3626.2161 3465.627 -3626.2063 3466.0557 -3626.1472 3465.3262 C-3625.8545 3464.9683 -3625.5422 3465.4639 -3625.8752 3465.7598 C-3625.0313 3465.3135 L-3625.5359 3465.1997 L-3625.3984 3464.5933 -3624.7295 3465.3809 -3624.5696 3464.6743 C-3625.4832 3464.7334 L-3625.4375 3464.5313 L-3625.6455 3464.749 -3626.0496 3464.6582 -3626.1904 3464.5732 C-3626.1682 3464.4736 -3626.1824 3464.3115 -3626.0212 3464.2935 C-3627.1243 3464.2471 -3626.3184 3465.3545 -3627.2336 3465.5557 C-3627.1763 3465.541 -3627.1052 3465.5493 -3627.0071 3465.6094 Cf-3627.9441 3464.125 m-3628.3289 3464.8853 L-3628.9744 3464.6895 L-3628.9817 3464.9517 -3629.4519 3465.1641 -3629.1335 3465.3955 C-3629.0713 3465.3545 -3628.9482 3465.2759 -3628.8489 3465.2998 C-3628.9209 3465.8672 -3629.7073 3465.583 -3629.5176 3466.1572 C-3629.0071 3466.0068 -3628.9287 3466.1318 -3628.6145 3465.6709 C-3628.1465 3465.7236 -3627.8057 3465.8545 -3627.5872 3466.0615 C-3627.4482 3465.9751 -3627.4287 3465.627 -3627.2522 3465.5576 C-3627.2913 3465.5664 -3627.3271 3465.5752 -3627.3721 3465.5796 C-3627.3911 3464.7261 L-3627.5383 3464.9063 -3627.6775 3464.8213 -3627.8408 3464.8389 C-3627.0852 3463.8423 L-3627.3289 3463.0435 -3628.0713 3463.5127 -3628.3679 3463.1807 C-3628 3463.8984 -3628.6609 3463.5376 -3627.9441 3464.125 Cf-3627.2522 3465.5576 m-3627.2473 3465.5576 -3627.2393 3465.5566 -3627.2336 3465.5557 C-3627.2393 3465.5566 -3627.2473 3465.5566 -3627.2522 3465.5576 Cf-3683.7073 3470.5225 m-3683.8679 3470.5376 -3683.9153 3470.7393 -3683.9385 3470.8408 C-3682.1296 3470.8247 L-3682.1863 3470.6006 -3682.7073 3470.3232 -3682.3591 3470.1895 C-3682.5144 3469.9414 -3682.9873 3470.1533 -3683.0559 3470.4561 C-3682.9248 3470.1143 L-3683.3416 3470.5518 -3683.6262 3469.6919 -3683.3545 3469.4336 C-3683.3896 3469.4385 L-3684.5439 3471.123 L-3684.1201 3471.2212 -3684.2175 3470.5435 -3683.7073 3470.5225 Cf-3720.8567 3469.665 m-3720.6223 3469.5869 -3720.5935 3469.5059 -3720.6201 3469.4229 C-3720.7041 3469.4854 -3720.7839 3469.5576 -3720.8567 3469.665 Cf-3684.8137 3471.5181 m-3685.1753 3472.0454 L-3685.0305 3471.9033 -3684.9033 3471.7139 -3684.8137 3471.5181 Cf-3682.3088 3463.499 m-3682.3081 3463.4712 -3682.3042 3463.4463 -3682.3137 3463.4087 C-3682.4761 3463.6782 L-3682.4736 3463.6782 -3682.4729 3463.6782 -3682.4719 3463.6782 C-3682.4121 3463.6187 -3682.3584 3463.5591 -3682.3088 3463.499 Cf-3693.0212 3473.499 m-3693.0601 3473.5127 -3693.0935 3473.5181 -3693.1399 3473.5356 C-3693.0967 3473.5313 -3693.0576 3473.5176 -3693.0212 3473.499 Cf-3677.4087 3460.4854 m-3678.2129 3460.9927 L-3678.1057 3460.7524 -3678.4937 3460.8247 -3678.3242 3460.5449 C-3678.3855 3460.583 -3678.6729 3460.6782 -3678.5945 3460.8013 C-3678.4304 3460.7856 L-3678.8545 3461.4854 -3678.5977 3461.7544 -3679.3008 3462.2871 C-3678.8643 3462.7017 -3678.6729 3462.3223 -3678.4417 3462.0039 C-3678.3633 3461.9551 -3678.2976 3461.9336 -3678.2312 3461.9072 C-3677.5625 3460.9292 L-3677.4087 3460.4854 Lf-3709.6504 3465.6934 m-3709.6416 3465.6392 L-3709.6497 3465.6582 -3709.6511 3465.6763 -3709.6504 3465.6934 Cf-3709.6064 3465.415 m-3709.6416 3465.6392 L-3709.5984 3465.5269 -3709.4329 3465.4199 -3709.6064 3465.415 Cf-3684.6809 3471.0654 m-3684.6919 3471.1953 -3684.7383 3471.3545 -3684.8137 3471.5181 C-3684.5439 3471.123 L-3684.5823 3471.1152 -3684.6328 3471.0879 -3684.6809 3471.0654 Cf-3684.0671 3469.5376 m-3683.3896 3469.4385 L-3683.1399 3469.0752 L-3683.3992 3469.2124 -3683.7024 3469.3062 -3684.0671 3469.5376 Cf-3691.9512 3473.9102 m-3693.3545 3474.0176 -3691.6064 3473.0869 -3692.2512 3472.8887 C-3692.6409 3472.9854 -3692.7783 3473.3765 -3693.0212 3473.499 C-3691.9082 3473.165 -3693.1721 3474.7856 -3692.0496 3474.5791 C-3692.2092 3475.2856 -3692.8591 3475.3496 -3693.24 3475.1582 C-3693.6711 3474.4771 -3692.8633 3474.6592 -3692.7656 3473.9912 C-3693.2161 3474.1021 -3693.1367 3474.2261 -3693.3279 3474.6064 C-3694.0352 3474.4478 -3694.7913 3475.4429 -3695.2136 3474.499 C-3695.7256 3474.6494 -3695.6919 3474.9751 -3695.9863 3475.334 C-3696.0449 3476.063 -3695.2249 3475.7168 -3695.0352 3476.291 C-3695.0745 3476.2295 -3695.1511 3476.1064 -3695.1289 3476.0039 C-3694.6863 3476.1572 L-3695.1064 3475.9033 -3694.6279 3475.4287 -3694.4033 3475.3716 C-3694.24 3475.3564 -3693.9153 3475.3232 -3693.96 3475.5254 C-3694.2073 3475.6816 L-3693.8889 3475.9126 -3693.5049 3475.1504 -3693.1687 3475.5454 C-3693.1511 3475.709 -3693.2783 3475.7856 -3693.2976 3475.8877 C-3692.9209 3475.3896 -3692.5576 3475.4185 -3692 3475.0664 C-3692.3232 3475.7896 L-3691.8772 3474.9893 -3690.8672 3475.2168 -3690.1672 3475.6392 C-3690.2449 3475.5166 -3690.3848 3475.4307 -3690.3008 3475.291 C-3689.8896 3475.1182 -3689.5791 3475.6143 -3689.7695 3475.9951 C-3689.3679 3475.3955 -3688.2393 3476.5 -3687.6919 3475.7207 C-3685.1753 3472.0454 L-3685.2695 3472.1377 -3685.3704 3472.2124 -3685.4744 3472.2437 C-3685.7031 3471.6094 -3685.8264 3471.6865 -3685.4255 3471.0879 C-3685.8191 3471.4238 -3685.6687 3471.9336 -3686.26 3471.96 C-3686.0281 3471.6406 -3685.9695 3470.9121 -3686.5359 3470.8369 C-3687.9519 3471.4712 -3688.8904 3473.2759 -3690.2129 3474.1982 C-3690.2617 3473.709 -3691.3 3473.8462 -3691.8047 3473.7314 C-3691.6121 3473.2061 -3691.2375 3473.0566 -3690.8489 3472.9502 C-3691.0928 3472.917 -3691.5127 3472.9033 -3691.8242 3472.8799 C-3691.9512 3473.9102 Lf-3688.6631 3472.2661 m-3688.6985 3472.2227 -3688.7351 3472.1982 -3688.7727 3472.1753 C-3688.7527 3472.2158 -3688.72 3472.2471 -3688.6631 3472.2661 Cf-3690.7305 3472.9648 m-3690.7256 3472.9473 -3690.7273 3472.9326 -3690.7256 3472.9126 C-3690.7664 3472.9238 -3690.8071 3472.9385 -3690.8489 3472.9502 C-3690.8071 3472.9541 -3690.76 3472.96 -3690.7305 3472.9648 Cf-3685.0127 3469.9604 m-3684.9287 3469.8213 -3684.8665 3469.7822 -3684.7825 3469.6416 C-3684.8342 3469.6895 -3684.8992 3469.7271 -3684.9617 3469.7695 C-3685.0212 3469.835 -3685.0496 3469.9014 -3685.0127 3469.9604 Cf-3684.7295 3470.8213 m-3684.7744 3471.0225 L-3684.7383 3471.0449 -3684.7129 3471.0493 -3684.6809 3471.0654 C-3684.6711 3470.957 -3684.6816 3470.8662 -3684.7295 3470.8213 Cf-3697.3137 3469.4873 m-3697.4482 3469.5933 L-3697.3672 3469.5854 -3697.3323 3469.542 -3697.3137 3469.4873 Cf-3693.5144 3473.0796 m-3693.0264 3473.0313 -3693.4561 3472.3496 -3692.7656 3472.3462 C-3692.9683 3472.3013 L-3692.4729 3471.9893 -3691.6023 3472.1328 -3691.0137 3472.1064 C-3691.0801 3472.3984 -3690.6567 3472.4604 -3690.7256 3472.9126 C-3690.3232 3472.8062 -3689.9248 3472.7061 -3689.7175 3472.2393 C-3689.4683 3472.3926 -3689.0896 3471.9824 -3688.7727 3472.1753 C-3688.9065 3471.9019 -3688.3215 3471.2515 -3689.0928 3471.5854 C-3689.0305 3471.5479 -3689.0696 3471.4854 -3689.0081 3471.4473 C-3689.5049 3471.0664 -3689.7041 3471.7124 -3690.1321 3471.7212 C-3690.3879 3471.4517 -3689.7136 3471.2856 -3689.9551 3471.1782 C-3690.4895 3471.4292 -3691.6321 3470.8535 -3691.5967 3471.8677 C-3691.9856 3471.9395 -3692.0393 3471.7158 -3692.1553 3471.5303 C-3692.7705 3472.6108 -3694.4385 3471.0664 -3694.4329 3472.4478 C-3694.2083 3472.3936 -3693.8423 3472.4229 -3693.5127 3472.127 C-3693.5144 3473.0796 Lf-3685.8323 3470.0313 m-3685.8623 3470.0254 -3685.9023 3470.0303 -3685.9272 3470.0181 C-3685.8992 3470.0254 -3685.8643 3470.0303 -3685.8323 3470.0313 Cf*u1 D-3679.6736 3474.0356 m-3679.8777 3474.9395 L-3681.0398 3475.1553 -3681.46 3474.9014 -3682.4761 3474.9375 C-3682.5537 3474.8135 -3682.4304 3474.7349 -3682.3679 3474.6953 C-3683.0823 3474.7998 -3684.1511 3474.6104 -3684.6711 3475.0254 C-3684.8984 3475.0181 -3685.4951 3474.7314 -3685.2693 3474.4648 C-3685.3799 3474.5454 -3685.5063 3474.623 -3685.6335 3474.5942 C-3685.6672 3474.2695 -3685.3489 3474.5015 -3685.3416 3474.2349 C-3685.4424 3474.2134 -3685.4817 3474.1504 -3685.5049 3474.2524 C-3685.3352 3473.9736 -3685.6809 3473.1509 -3684.8896 3473.1719 C-3684.5833 3473.9307 -3685.4385 3473.2598 -3685.2576 3474.0967 C-3684.9951 3474.1021 -3685.0256 3473.7783 -3685.0032 3473.6763 C-3684.6687 3473.6953 -3684.6775 3473.9053 -3684.6953 3474.0967 C-3684.5671 3473.8369 -3684.1465 3474.1982 -3683.9695 3473.8037 C-3683.3191 3473.7393 -3684.0049 3474.4326 -3683.5801 3474.4229 C-3683.3352 3473.5752 L-3682.6289 3473.7349 L-3681.6064 3473.4375 -3682.7751 3472.2705 -3681.6064 3471.791 C-3681.76 3472.2334 -3681.2913 3472.9766 -3680.7473 3473.1533 C-3681.0728 3473.1846 -3681.6743 3473.7373 -3682.0945 3473.4854 C-3681.5022 3474.1494 -3682.9097 3473.5654 -3682.6023 3474.3252 C-3682.3096 3473.9648 -3681.8215 3473.917 -3681.4409 3474.1108 C-3681.5657 3474.1895 L-3681.1609 3474.2793 -3680.8545 3473.3926 -3680.2959 3473.7314 C-3680.0183 3473.7041 -3680.0703 3473.9429 -3680.1191 3474.1416 C-3679.8843 3474.0142 -3679.6743 3473.8486 -3679.6736 3474.0356 Cf0 D-3680.2783 3474.2134 m-3680.6497 3474.1294 L-3680.5615 3474.2695 -3680.4231 3474.2646 -3680.2783 3474.2134 Cf*U-3633.1377 3464.2349 m-3633.1008 3464.2573 -3633.0583 3464.2803 -3633.0249 3464.3037 C-3633.0496 3464.2646 -3633.0923 3464.2471 -3633.1377 3464.2349 Cf-3666.0967 3463.9102 m-3665.8816 3463.9385 L-3665.9656 3463.9092 -3666.0344 3463.9053 -3666.0967 3463.9102 Cf-3661.2693 3461.1104 m-3660.9551 3460.9126 L-3661.0791 3460.9253 -3661.1763 3461.0039 -3661.2693 3461.1104 Cf-3635.7024 3464.1768 m-3635.7129 3464.1709 L-3635.7305 3464.1846 -3635.7439 3464.2041 -3635.7625 3464.2158 C-3635.7024 3464.1768 Lf-3651.5872 3463.0933 m-3651.5393 3463.165 -3651.4856 3463.23 -3651.4121 3463.2803 C-3651.4209 3463.1963 -3651.4863 3463.1353 -3651.5872 3463.0933 Cf-3661.3271 3461.1475 m-3661.3191 3461.1553 -3661.3145 3461.1572 -3661.3081 3461.1631 C-3661.2959 3461.1455 -3661.2825 3461.1265 -3661.2693 3461.1104 C-3661.3271 3461.1475 Lf-3668.2231 3461.4385 m-3668.2693 3461.4648 -3668.3113 3461.4854 -3668.3608 3461.5225 C-3668.2959 3461.5059 -3668.2561 3461.4741 -3668.2231 3461.4385 Cf-3667.9199 3463.8408 m-3667.9695 3463.8623 -3668.0168 3463.8887 -3668.0537 3463.9253 C-3667.9199 3463.8408 Lf-3675.3577 3462.1934 m-3675.6472 3462.3145 L-3675.5049 3462.3013 -3675.4199 3462.2544 -3675.3577 3462.1934 Cf-3668.6863 3463.2856 m-3668.7031 3463.3252 -3668.72 3463.3633 -3668.7312 3463.4014 C-3668.6912 3463.375 -3668.6721 3463.3252 -3668.6863 3463.2856 Cf-3631.2976 3466.7617 m-3631.3042 3466.7617 -3631.3113 3466.7646 -3631.3152 3466.7646 C-3631.3225 3466.8633 L-3631.2976 3466.7617 Lf-3630.5935 3465.5269 m-3630.5105 3465.5015 -3630.4241 3465.479 -3630.3391 3465.457 C-3630.4336 3465.4517 -3630.5256 3465.4785 -3630.5935 3465.5269 Cf-3647.3809 3464.457 m-3647.3042 3464.5796 -3647.1243 3464.7261 -3647.2083 3464.8662 C-3647.0615 3464.6895 -3647.0713 3464.2603 -3647.3809 3464.457 Cf-3632.7092 3472.0664 m-3632.6631 3471.9517 -3632.6057 3471.8643 -3632.5481 3471.7783 C-3632.6553 3471.9019 -3632.7493 3472.0039 -3632.7092 3472.0664 Cf-3632.5481 3471.7783 m-3632.4951 3471.7173 -3632.4385 3471.6533 -3632.3911 3471.5869 C-3632.4463 3471.6416 -3632.4993 3471.7061 -3632.5481 3471.7783 Cf-3649.3313 3471.4912 m-3649.3503 3471.4336 -3649.3799 3471.3853 -3649.4199 3471.3701 C-3649.4082 3471.4854 -3649.3762 3471.5103 -3649.3313 3471.4912 Cf-3630.1335 3465.5928 m-3630.0879 3465.3911 -3628.9817 3464.9517 -3629.9121 3464.8486 C-3629.8762 3464.2192 -3629.3152 3464.5576 -3629.0671 3464.4019 C-3629.2473 3464.2544 -3628.9775 3463.998 -3629.0322 3463.7734 C-3629.1553 3463.8496 -3629.3015 3464.0303 -3629.5049 3463.9854 C-3629.5984 3463.6982 -3629.2898 3463.5024 -3629.0488 3463.6104 C-3629.3457 3463.2783 -3628.6721 3463.1118 -3629.0923 3462.8574 C-3629.9905 3463.0791 -3630.6252 3463.3076 -3631.2568 3464.2261 C-3630.7449 3464.0752 -3630.1721 3463.8877 -3629.7522 3464.1406 C-3629.9287 3464.6846 L-3630.4033 3464.2061 -3630.6963 3464.563 -3631.1631 3464.5127 C-3630.1145 3464.8013 L-3629.6233 3465.2544 -3629.9519 3465.3584 -3630.3391 3465.457 C-3630.2439 3465.4639 -3630.1577 3465.4966 -3630.1335 3465.5928 Cf-3630.8401 3470.3662 m-3630.8225 3470.3809 L-3630.8071 3470.3623 -3630.7881 3470.3496 -3630.7783 3470.3267 C-3630.8401 3470.3662 Lf-3675.3042 3473.2017 m-3675.3943 3473.4077 L-3675.3191 3473.3145 -3675.2959 3473.2515 -3675.3042 3473.2017 Cf-3631.4656 3467.7314 m-3631.4648 3467.7314 L-3631.4719 3467.7373 -3631.4736 3467.7373 -3631.4656 3467.7314 Cf-3673.0632 3473.2437 m-3673.0664 3473.2583 -3673.0696 3473.2744 -3673.0752 3473.291 C-3673.0671 3473.2744 -3673.0671 3473.2583 -3673.0632 3473.2437 Cf-3672.4641 3461.5142 m-3672.4683 3461.4893 -3672.4695 3461.4648 -3672.4792 3461.4404 C-3672.5271 3461.4712 -3672.5039 3461.4966 -3672.4641 3461.5142 Cf-3673.0615 3473.1934 m-3673.0615 3473.21 -3673.0601 3473.2261 -3673.0632 3473.2437 C-3673.0615 3473.2261 -3673.0576 3473.209 -3673.0615 3473.1934 Cf-3662.1641 3471.1963 m-3662.1985 3471.1021 -3662.2527 3471.0127 V-3662.2737 3471.063 -3662.2527 3471.1221 -3662.1641 3471.1963 Cf-3664.3152 3470.3911 m-3664.3152 3470.3911 L-3664.3289 3470.3711 -3664.3369 3470.3535 -3664.3545 3470.3311 C-3664.3152 3470.3911 Lf-3647.8896 3462.0068 m-3647.9961 3461.999 -3648.0759 3462.0127 -3648.1433 3462.0356 C-3648.0657 3462.0493 -3647.9817 3462.0479 -3647.8896 3462.0068 Cf-3673.0752 3473.291 m-3673.0977 3473.3486 -3673.1296 3473.4077 -3673.1824 3473.4814 c-3673.1243 3473.4033 -3673.0935 3473.3433 -3673.0752 3473.291 Cf-3658.8843 3468.4478 m-3658.9072 3468.4692 -3658.9287 3468.4893 -3658.9504 3468.5078 C-3658.9373 3468.5181 -3658.9241 3468.5225 -3658.9111 3468.5352 C-3658.8843 3468.4478 Lf-3657.7617 3468.8486 m-3657.8 3468.9102 -3657.8176 3468.9741 -3657.8391 3469.0303 C-3657.4385 3468.8037 -3656.7024 3469.0493 -3656.6152 3468.4712 C-3656.7512 3468.4854 -3657.4561 3468.1455 -3657.3359 3467.8062 C-3657.6152 3467.9512 -3658.0281 3467.5454 -3658.1785 3467.6406 C-3657.72 3467.957 -3658.1289 3468.1289 -3658.4385 3468.3232 C-3658.72 3468.1553 -3658.3855 3467.8584 -3658.6279 3467.7515 C-3659.2793 3467.8145 L-3658.7119 3467.8916 L-3658.8843 3468.4478 L-3658.8633 3468.4292 -3658.8489 3468.417 -3658.8264 3468.3955 C-3657.8665 3468.1353 -3658.7449 3469.21 -3657.7617 3468.8486 Cf-3657.8391 3469.0303 m-3657.8992 3469.0654 -3657.9519 3469.1079 -3657.9929 3469.167 C-3657.9023 3469.1582 -3657.8672 3469.1016 -3657.8391 3469.0303 Cf-3653.9172 3469.9478 m-3653.8679 3469.9292 -3653.8145 3469.9033 -3653.7473 3469.8599 c-3653.7793 3469.8809 -3653.8535 3469.9077 -3653.9172 3469.9478 Cf-3682.6584 3469.167 m-3682.6416 3469.3311 -3682.0823 3469.6685 -3682.0923 3469.2407 C-3682.0923 3469.2407 L-3682.2583 3469.1982 -3682.4255 3469.1533 -3682.5935 3469.1064 C-3682.6584 3469.167 Lf-3643.2336 3467.4604 m-3643.2959 3467.4478 -3643.3584 3467.4429 -3643.4209 3467.4502 C-3643.4343 3467.4712 -3643.4473 3467.4951 -3643.4573 3467.5166 C-3643.4192 3467.5796 -3643.2959 3467.5015 -3643.2336 3467.4604 Cf-3657.1631 3467.605 m-3657.2656 3467.6709 -3657.3113 3467.7383 -3657.3359 3467.8062 C-3657.2695 3467.7725 -3657.2083 3467.7173 -3657.1631 3467.605 Cf-3643.1985 3468.4785 m-3643.1191 3468.6006 -3643.0022 3468.7871 -3642.9856 3468.9502 C-3642.8232 3468.9541 -3642.7092 3468.7295 -3642.5439 3468.6494 C-3642.7305 3468.7119 -3642.9463 3468.6685 -3643.1985 3468.4785 Cf-3642.5305 3468.6416 m-3642.5352 3468.6455 -3642.5398 3468.6475 -3642.5439 3468.6494 C-3642.5393 3468.6494 -3642.5352 3468.644 -3642.5305 3468.6416 Cf*u1 D-3682.9912 3468.9854 m-3683.0393 3469.0181 -3683.0889 3469.0479 -3683.1399 3469.0752 C-3683.0625 3468.9604 L-3683.1912 3468.9185 -3683.3191 3468.8774 -3683.4473 3468.8311 C-3683.4937 3468.8584 -3683.5439 3468.8843 -3683.6057 3468.8984 C-3683.5808 3468.8843 -3683.5615 3468.8389 -3683.5496 3468.792 C-3683.5913 3468.7764 -3683.6321 3468.7593 -3683.6729 3468.7422 C-3683.9792 3469.1851 -3684.7417 3469.5088 -3684.9617 3469.7695 C-3685.2527 3469.959 -3685.6089 3470.0664 -3685.8323 3470.0313 C-3685.6252 3470.041 -3685.3503 3469.9517 -3685.4329 3469.707 C-3685.8533 3469.4517 -3686.0576 3468.7173 -3686.7832 3469.3486 C-3686.3577 3469.3389 L-3687.3145 3470.2896 L-3687.6497 3469.8955 -3686.8369 3469.8145 -3686.7041 3469.4727 C-3687.4482 3469.9414 -3688.0671 3468.6895 -3688.4121 3469.5127 C-3688.4607 3469.0244 -3688.5422 3468.21 -3689.0305 3468.2583 C-3688.6785 3468.8145 -3689.3232 3468.6157 -3689.0344 3469.2119 C-3689.2031 3469.4912 -3689.5791 3469.0356 -3689.6072 3469.4014 C-3689.5615 3469.1992 L-3690.3953 3468.4263 -3690.6682 3469.6377 -3691.0249 3470.0356 C-3692.0232 3470.2349 -3692.4817 3469.9185 -3693.2959 3470.0015 C-3693.3279 3469.6743 -3693.5496 3468.7744 -3693.8762 3468.8086 C-3694.0281 3469.2515 -3694.7649 3469.4561 -3694.8401 3470.0225 C-3694.2561 3470.2598 -3694.3623 3469.5479 -3694.0127 3469.415 C-3693.7217 3470.0093 -3693.9863 3470.0024 -3693.5889 3470.3584 C-3693.9097 3470.127 -3695.0383 3470.6685 -3695.3896 3470.1104 C-3695.2656 3470.0313 L-3695.8264 3469.6934 -3695.9336 3468.291 -3696.8679 3469.1396 C-3697.3137 3469.4873 L-3697.2922 3469.4307 -3697.2898 3469.3643 -3697.2783 3469.3135 C-3698.0081 3469.2544 -3697.8088 3468.6094 -3698.6145 3469.1182 c-3698.5522 3469.0791 -3698.5913 3469.0166 -3698.5281 3468.9785 C-3698.9873 3468.6597 -3699.4504 3469.2998 -3699.7976 3469.4336 C-3700.0095 3468.9604 -3699.7473 3468.9683 -3699.6162 3468.6265 C-3700.4241 3468.4429 -3701.2959 3469.2544 -3701.7976 3469.8311 C-3702.3184 3469.5537 L-3702.0095 3469.3584 -3701.6321 3468.8599 -3701.7263 3468.5742 C-3702.0127 3468.6685 -3701.9573 3468.8926 -3702.3623 3468.8013 C-3702.2932 3468.499 -3702.1233 3468.2173 -3701.9329 3467.8369 C-3702.7705 3467.3311 -3702.1201 3468.9092 -3702.7063 3467.9814 C-3702.9695 3467.9751 -3703.1223 3468.417 -3703.1511 3468.7822 C-3703.6279 3468.3037 L-3703.6809 3468.7695 -3704.2695 3468.7959 -3704.6553 3468.8662 C-3704.7024 3469.0664 -3704.3447 3469.3623 -3704.1985 3469.1816 C-3704.2273 3469.5479 -3704.6377 3469.7192 -3704.9016 3469.7124 C-3704.9983 3468.7373 -3706.6296 3469.8535 -3706.3176 3468.7041 C-3707.5032 3469.021 -3709.1687 3469.1201 -3709.9512 3469.5269 C-3710.2092 3469.2573 -3710.7351 3469.2437 -3710.4199 3468.7856 C-3711.3743 3468.7822 -3711.8665 3469.7832 -3712.8137 3469.5166 C-3712.8921 3469.394 -3712.3855 3469.5078 -3712.4192 3469.1816 C-3713.0383 3469.5732 -3713.5457 3468.7695 -3714.5063 3469.0303 C-3714.3447 3469.0127 -3714.2976 3468.8115 -3714.2751 3468.71 C-3714.2583 3468.8716 -3714.6687 3469.0454 -3714.9172 3469.2017 C-3715.0569 3469.1182 -3714.7312 3469.0854 -3714.8096 3468.9604 C-3716.6653 3468.4873 -3718.0791 3469.8135 -3719.9248 3469.7695 c-3719.3977 3469.7822 -3719.1985 3469.1353 -3719.1929 3468.8716 C-3719.7092 3468.8599 L-3719.9082 3469.1816 -3720.2959 3469.1816 -3720.6201 3469.4229 C-3720.6599 3469.3013 -3720.8176 3469.1709 -3720.6567 3469.0181 C-3721.6768 3468.3643 -3722.25 3470.1982 -3723.5 3469.8623 C-3721.9863 3468.5591 L-3722.3608 3468.105 L-3721.6953 3467.5127 L-3722.0928 3467.1553 -3722.4385 3467.9814 -3722.4863 3467.4912 C-3722.4023 3467.3535 -3722.2 3467.3975 -3722.1936 3467.1328 C-3722.5752 3466.9414 -3722.6052 3467.3062 -3722.8921 3467.4014 C-3722.1362 3466.4053 -3720.6543 3466.4209 -3719.8567 3466.1768 C-3719.7312 3466.0977 -3719.9641 3466.417 -3719.9863 3466.5181 C-3719.6609 3466.4854 -3719.4656 3466.7959 -3719.0559 3466.623 C-3718.8015 3466.2017 -3719.25 3466.3135 -3719.4519 3466.2695 C-3719.4241 3465.9033 -3719.3225 3465.9253 -3719.0977 3465.8701 C-3719.0488 3466.3584 -3717.8633 3466.0435 -3717.5735 3466.6392 C-3716.3721 3466.4854 -3717.7656 3465.375 -3716.5928 3465.5869 C-3716.2424 3466.1455 L-3715.5615 3465.7139 -3714.6809 3465.3311 -3713.9104 3465.4502 C-3714.0728 3465.4683 L-3714.1809 3465.707 -3714.0022 3465.8545 -3713.9231 3465.9766 C-3713.3408 3466.2158 -3712.8176 3465.5376 -3712.4648 3466.0967 C-3711.8008 3465.5024 -3710.6936 3465.063 -3709.9343 3464.7568 C-3709.7295 3465.4932 -3710.9248 3465.3809 -3711.2407 3465.8413 C-3710.5496 3465.8389 L-3710.9768 3465.8486 -3711.1455 3466.1289 -3711.4016 3466.5479 C-3710.7959 3466.6846 -3710.5967 3466.04 -3710.0225 3465.8535 C-3710.0671 3466.0537 -3709.9905 3466.1768 -3709.7256 3466.1816 C-3709.6504 3465.6934 L-3709.6455 3465.7334 -3709.6162 3465.7705 -3709.5344 3465.8013 C-3708.5127 3465.5024 L-3708.7295 3465.2935 -3708.74 3464.8677 -3709.0039 3464.8623 C-3708.9097 3465.1475 -3709.1335 3465.2041 -3709.3977 3465.1963 C-3709.1663 3464.8774 -3709.6553 3464.9272 -3709.6497 3464.6631 C-3709.1201 3464.6763 -3708.4695 3464.6104 -3708.1223 3464.4766 C-3708.0095 3464.9272 L-3707.5049 3465.041 -3706.9719 3464.7896 -3706.6296 3464.9209 C-3706.7375 3465.1597 L-3706.1321 3465.2979 -3705.5359 3465.0078 -3704.9983 3465.4473 C-3704.4583 3464.9326 -3703.7783 3464.5039 -3703.3369 3463.9648 C-3703.1008 3463.3843 -3701.7522 3464.6953 -3701.1433 3463.8774 C-3701.1023 3463.9395 -3701.5615 3464.3145 -3701.7693 3464.5342 C-3701.3643 3464.624 -3701.0422 3463.9014 -3700.9153 3464.5132 C-3701.8242 3464.3076 -3700.8665 3465.0015 -3701.2759 3465.1753 C-3700.8503 3465.1641 -3700.4016 3465.0537 -3700.1929 3464.835 C-3700.8816 3464.8398 -3699.9482 3463.9893 -3700.6455 3464.2559 C-3700.1052 3463.7412 -3699.3679 3463.5356 -3698.7241 3463.7349 C-3698.7305 3463.999 -3698.6511 3464.1221 -3698.4111 3464.2314 C-3698.2175 3463.8486 L-3697.9163 3463.9185 -3698.8 3464.3013 -3698.1936 3464.4385 C-3697.5696 3463.7832 -3696.3145 3464.8096 -3696.0413 3463.5977 C-3695.5657 3464.0767 -3696.9463 3464.083 -3696.2295 3464.6685 C-3696.6465 3465.1064 -3697.2217 3464.605 -3697.3591 3465.21 C-3696.9504 3465.0376 -3697.21 3465.7212 -3696.9463 3465.7271 C-3696.4905 3465.3545 L-3696.5913 3465.3311 L-3695.8264 3464.7603 -3694.6145 3465.0342 -3693.6377 3464.9375 C-3692.8103 3464.3281 -3692.2407 3463.4478 -3691.2483 3463.5142 C-3691.5413 3463.8716 -3690.4241 3463.8584 -3691.0488 3464.5132 C-3690.5896 3464.8286 -3690.1362 3464.4551 -3690.1272 3464.1909 C-3690.5313 3464.1006 -3690.2693 3464.1064 -3690.6096 3463.9766 C-3690.3799 3463.6563 -3689.8503 3463.6709 -3689.6328 3463.8799 C-3689.7336 3463.8564 -3689.6953 3463.9185 -3689.7175 3464.0181 C-3689.2351 3464.2334 -3689.4863 3463.6997 -3689.1377 3463.5664 C-3689.0271 3464.0142 -3688.3679 3463.6865 -3688.0496 3463.9185 C-3687.5879 3463.2793 L-3687.8416 3463.6992 -3687.1455 3463.4326 -3687.0728 3463.8188 C-3686.7417 3463.5225 -3686.4641 3463.0024 -3685.96 3463.1157 C-3686.1682 3463.335 -3685.5 3463.4326 -3685.4912 3463.8584 C-3684.6279 3464.2661 -3684.0615 3462.6963 -3683.2439 3463.3062 C-3683.2693 3463.4063 -3683.4343 3463.6865 -3683.1953 3463.7935 C-3683.0071 3463.6743 -3682.6775 3463.7246 -3682.4761 3463.6782 C-3682.4824 3463.6904 L-3682.4785 3463.6865 -3682.4761 3463.6816 -3682.4719 3463.6782 C-3682.3733 3463.6553 -3682.3113 3463.6021 -3682.3088 3463.499 C-3681.9641 3463.082 -3681.7864 3462.6553 -3681.1079 3462.3013 C-3681.1577 3461.8135 -3681.7305 3462.0024 -3681.9785 3462.1597 C-3682.1929 3462.6416 L-3682.3977 3461.9053 -3682.8047 3462.7695 -3682.9607 3462.521 C-3682.5537 3461.6582 -3681.3816 3461.8701 -3680.6785 3461.3398 C-3681.1072 3460.6597 -3682.0398 3460.5537 -3682.8535 3460.6353 C-3682.4951 3460.9287 L-3682.9209 3460.9385 L-3682.5088 3461.457 L-3682.9121 3461.3662 -3683.2607 3461.499 -3683.6252 3461.4692 C-3683.1985 3461.46 -3683.0322 3462.1328 -3683.2737 3462.0264 C-3683.7493 3461.5479 -3683.7693 3462.3389 -3684.1328 3462.3096 C-3683.9304 3462.3545 -3683.6672 3462.3623 -3683.8369 3462.6416 C-3684.5537 3462.0557 -3684.7473 3462.4375 -3685.3992 3461.8115 C-3685.3184 3462.625 -3686.2136 3461.8926 -3686.3113 3462.5591 C-3686.0088 3462.627 L-3686.6504 3463.1187 L-3687.2424 3462.4561 -3686.1262 3462.4429 -3687.0271 3461.9741 C-3687.8584 3461.8926 -3687.8369 3462.7471 -3688.4905 3462.8101 C-3688.2751 3462.3286 -3687.7568 3461.915 -3687.2295 3461.9287 C-3687.5488 3461.6963 L-3687.3799 3461.417 -3686.6504 3461.4756 -3686.2864 3461.5044 C-3686.8879 3462.0576 -3686.0049 3461.6743 -3685.7312 3462.1064 C-3685.6809 3461.6406 -3686.0671 3461.7139 -3685.6111 3461.3398 C-3686.0383 3461.3486 -3686.1008 3461.3877 -3686.6443 3461.2119 C-3685.4695 3461.4238 -3685.5879 3459.5933 -3684.5625 3459.9854 C-3685.0352 3460.1963 -3684.3977 3460.6582 -3684.3408 3460.8843 C-3684.1184 3460.8281 -3683.6672 3460.7173 -3683.4817 3460.6006 C-3683.6497 3459.9272 L-3683.0522 3459.6353 -3682.8447 3461.0625 -3682.1553 3460.3677 C-3682.0657 3459.9648 -3682.7617 3460.2314 -3682.6377 3460.1533 C-3681.6943 3459.73 -3681.3545 3460.8145 -3680.5168 3461.3223 C-3680.4695 3461.1201 -3680.4792 3460.6934 -3680.1863 3460.3369 C-3680.2783 3460.7412 -3680.0615 3460.9478 -3680.3911 3461.2437 C-3680.1111 3461.415 -3679.7793 3461.1182 -3679.5322 3460.9604 C-3680.1152 3460.7236 -3679.2937 3460.3799 -3679.1863 3460.1377 C-3678.8843 3460.2061 -3679.2783 3460.541 -3679.4641 3460.6582 C-3679.2217 3460.7661 -3678.9336 3461.3623 -3678.7959 3460.7568 C-3678.7864 3461.1816 -3679.4736 3461.8774 -3679.9231 3461.9873 C-3679.6201 3462.0557 L-3679.8289 3462.2734 -3679.8679 3462.2119 -3680.1687 3462.1455 C-3679.8743 3462.4756 -3679.9033 3462.8398 -3679.9719 3463.1431 C-3680.0105 3463.0811 -3679.9504 3463.042 -3679.9873 3462.9814 C-3680.2295 3462.873 -3680.4153 3462.9893 -3680.3591 3463.2158 C-3680.5769 3463.7876 -3680.0232 3463.5732 -3679.8591 3463.8584 C-3679.7351 3463.8213 -3679.6111 3463.7822 -3679.4895 3463.7437 C-3678.2312 3461.9072 L-3677.6936 3461.6934 -3677.4519 3462.1328 -3677.0481 3462.4102 C-3676.9373 3461.9185 L-3676.4695 3461.9692 -3676.0281 3462.125 -3676.3279 3462.7471 C-3676.3447 3462.583 -3676.4065 3462.6221 -3676.5081 3462.5977 C-3676.5215 3462.665 -3676.5449 3462.7124 -3676.5745 3462.7515 C-3676.5842 3462.7803 -3676.5896 3462.8086 -3676.5977 3462.8369 C-3676.0967 3462.6782 -3675.7839 3462.5752 -3675.7551 3462.5566 C-3676.6057 3463.2695 -3675.7976 3463.4478 -3675.9399 3464.3188 C-3675.0808 3464.0352 L-3675.6016 3463.7593 -3675.0903 3463.6094 -3674.9055 3463.4912 C-3674.8545 3463.9814 -3674.2136 3463.4873 -3673.9121 3463.5557 C-3673.9343 3463.6563 L-3673.6553 3463.8262 -3673.1663 3463.7783 -3672.8184 3463.6455 C-3672.8342 3463.4814 -3672.3879 3462.6807 -3672.1736 3462.1982 C-3672.7705 3462.0142 -3672.4163 3461.8184 -3672.4641 3461.5142 C-3672.4023 3461.542 -3672.2913 3461.5479 -3672.2783 3461.4854 C-3672.1929 3461.3462 -3672.3943 3461.2998 -3672.4111 3461.1377 C-3673.0457 3461.3662 -3673.6985 3461.4307 -3673.9573 3462.1143 C-3673.7625 3462.4238 -3673.6252 3461.8184 -3673.4072 3462.0254 C-3673.7217 3462.4854 -3674.1272 3462.394 -3674.6543 3462.3809 C-3674.8271 3461.9712 L-3675.3577 3462.1934 L-3675.1362 3461.9766 -3675.2695 3461.5479 -3674.7129 3461.4648 C-3674.7839 3461.0791 -3675.2649 3461.5537 -3675.6057 3461.4238 C-3675.78 3461.9683 L-3675.7129 3461.665 -3676.4424 3461.6064 -3675.9241 3461.1924 C-3675.0808 3460.7471 L-3675.3152 3460.375 L-3674.6023 3460.2705 L-3674.7705 3460.5518 L-3673.6252 3460.1753 -3674.4329 3461.6353 -3673.28 3460.9927 C-3672.9192 3460.333 -3672.5313 3460.2622 -3671.8247 3460.4229 C-3672.3359 3460.5703 -3671.8772 3460.8877 -3672.0696 3461.2695 C-3671.5481 3461.5449 -3671.3721 3461.0015 -3671.1016 3460.7437 C-3670.9688 3461.0923 -3670.8743 3461.3774 -3671.3401 3461.3262 C-3671.3984 3462.0557 -3670.7273 3461.1997 -3670.6848 3461.9512 C-3669.1416 3461.9287 -3669.4482 3459.5254 -3667.6443 3460.4639 C-3667.7119 3460.7661 L-3666.5664 3460.3896 -3665.9055 3460.7515 -3664.8447 3460.5127 C-3664.0095 3461.2832 L-3664.1963 3461.4014 -3664.6985 3461.9771 -3664.4641 3462.3486 C-3664.8704 3461.5688 -3665.3015 3461.8413 -3665.7393 3461.4238 C-3665.7839 3461.6265 -3665.6057 3461.7725 -3665.5281 3461.8975 C-3665.7922 3461.8896 -3665.9248 3461.541 -3666.2737 3461.6763 C-3666.2568 3461.8369 -3665.8762 3462.0303 -3666.1631 3462.125 C-3666.6377 3461.6455 L-3667.2727 3461.874 -3666.9504 3462.7935 -3667.6963 3462.5732 C-3667.5576 3462.1455 -3667.2744 3461.5264 -3666.9856 3461.4238 C-3667.3264 3461.3311 -3666.5313 3461.165 -3666.8423 3460.9092 C-3667.3333 3461.5435 -3667.5703 3461.041 -3668.2231 3461.4385 C-3668.1465 3461.3496 -3668.1262 3461.2256 -3667.9656 3461.1865 C-3668.9128 3460.9185 L-3668.6785 3461.2896 -3669.6953 3461.3262 -3669.6072 3461.8774 C-3668.5977 3462.105 -3668.8943 3461.7725 -3667.7439 3462.0854 C-3668.0696 3462.21 -3668.4895 3462.7705 -3668.6863 3463.2856 C-3668.6963 3463.2646 -3668.7129 3463.2471 -3668.7483 3463.2373 C-3668.9241 3463.7822 -3668.7449 3463.9287 -3668.7483 3464.8809 C-3668.2231 3464.2041 -3667.8721 3464.7617 -3667.2527 3464.3716 C-3667.1362 3463.8496 -3667.6121 3463.7061 -3667.9199 3463.8408 C-3667.3743 3463.4951 L-3667.4817 3463.7349 L-3666.0967 3463.9102 L-3666.3591 3463.9385 -3666.4482 3464.2407 -3666.5852 3464.4688 C-3666.4065 3464.4893 -3666.2295 3464.627 -3666.0413 3464.7783 C-3666.0808 3464.2803 -3666.0559 3463.9287 -3665.8816 3463.9385 C-3664.9905 3464.0566 -3664.4951 3464.5039 -3664.1663 3465.0728 C-3664.1321 3465.0615 -3664.0935 3465.0493 -3664.0625 3465.0376 C-3664.2119 3464.5269 -3663.4297 3464.1201 -3663.1536 3463.5977 C-3663.1672 3464.1265 -3662.6943 3463.915 -3662.4375 3464.1846 C-3662.3008 3463.5791 -3662.4832 3462.7432 -3662.7959 3462.248 C-3663.3984 3462.8013 -3663.1335 3462.8062 -3663.4182 3463.5923 C-3664.3848 3464.1157 L-3664.1687 3463.6328 L-3664.6511 3463.4199 -3665.1145 3464.0576 -3665.0791 3463.4292 C-3664.8242 3463.0103 -3664.4033 3463.2646 -3664.1504 3462.8438 C-3664.4695 3462.6143 L-3663.9065 3461.9966 -3664.1809 3463.209 -3663.4993 3462.7783 C-3663.75 3462.2437 -3663.4375 3462.7393 -3663.1455 3462.3809 C-3663.3799 3462.0093 -3664.3457 3462.5342 -3664.1409 3461.6265 C-3663.7864 3461.2295 -3662.9482 3462.6904 -3662.4792 3461.7876 C-3662.5022 3461.8896 L-3661.8103 3462.0078 -3661.5671 3461.4893 -3661.3081 3461.1631 C-3661.0137 3461.457 -3660.6072 3461.0435 -3660.2881 3461.0103 C-3660.2959 3461.2744 L-3659.8457 3461.1641 L-3660.0601 3461.6455 -3660.3733 3461.1509 -3660.76 3461.2212 C-3660.7119 3461.7119 L-3661.1577 3461.1294 -3661.4551 3462.0142 -3661.8008 3462.4375 C-3661.2976 3462.0127 -3660.3799 3462.5576 -3660.2617 3461.5977 C-3659.9504 3462.0942 L-3659.8015 3461.915 L-3659.5696 3462.2871 -3659.8064 3462.8701 -3660.2561 3462.9814 C-3660.3342 3462.8574 -3660.3733 3462.7959 -3660.3496 3462.6934 C-3660.5583 3462.9126 -3660.75 3463.2935 -3661.2551 3463.1807 C-3660.9856 3462.9209 L-3661.6145 3462.8853 -3662.1863 3463.0752 -3662.4016 3463.5576 C-3661.4937 3463.7622 -3660.6008 3463.8057 -3659.7483 3463.7832 C-3659.4968 3462.6743 -3659.1985 3462.0518 -3659.0703 3461.021 C-3658.4983 3460.8311 -3657.7217 3460.6895 -3657.2249 3461.0664 C-3657.2705 3461.2695 L-3657.0281 3461.375 -3656.8047 3461.3188 -3656.6184 3461.2017 C-3656.3623 3461.4727 -3656.7937 3461.7471 -3656.6152 3461.8936 C-3655.7959 3461.5479 L-3655.8464 3462.0142 -3656.5359 3462.0166 -3656.8633 3462.0493 C-3656.8015 3462.0103 -3656.6768 3461.9326 -3656.7168 3461.8701 C-3657.0977 3461.6782 -3657.8071 3462.4727 -3657.9736 3461.7979 C-3658.1592 3461.915 -3657.5967 3461.2998 -3658.2249 3461.2646 C-3658.6455 3461.0103 -3658.7825 3461.6157 -3658.8264 3461.8184 C-3658.8333 3462.083 -3658.1663 3462.1807 -3658.3977 3462.499 C-3658.0703 3462.4648 -3657.9399 3462.125 -3657.5212 3462.3799 C-3657.8457 3462.4121 -3658.2864 3462.9478 -3658.4592 3462.5376 C-3659.1008 3463.0303 -3659.0088 3464.2705 -3658.7063 3464.3389 C-3658.7783 3463.9502 -3657.5359 3463.8599 -3658.3772 3463.3535 C-3657.9993 3462.8535 -3657.3088 3462.8496 -3656.8145 3462.5376 C-3656.8369 3462.6377 L-3656.2231 3462.5127 L-3656.3096 3462.6509 -3656.4951 3462.7695 -3656.5012 3463.0313 C-3655.6511 3462.3232 L-3656.1296 3462.7998 -3655.3545 3462.6543 -3655.1367 3462.8643 C-3655.0457 3462.46 -3654.7136 3462.1641 -3655.0322 3461.9326 C-3655.3904 3461.6392 -3655.2407 3462.1509 -3655.5664 3462.1816 C-3655.1052 3461.5449 L-3655.0657 3461.6064 L-3654.7881 3461.0854 L-3654.1599 3461.1221 -3655.0625 3462.2979 -3654.2576 3461.7876 C-3654.3623 3461.0767 L-3653.4304 3461.1816 -3652.2336 3461.9814 -3651.5752 3461.6533 C-3651.7568 3462.0576 -3651.8369 3462.708 -3651.5872 3463.0933 C-3651.8711 3462.9712 -3652.4417 3462.9966 -3652.8489 3463.063 C-3652.9272 3462.9385 -3652.3401 3462.2227 -3651.8977 3462.3765 C-3652.1121 3461.2119 -3653.0105 3463.0791 -3653.0625 3461.8984 C-3654.1897 3461.4873 -3653.9033 3463.0356 -3654.8601 3462.3433 C-3654.8733 3462.8701 -3655.1321 3462.6006 -3655.1824 3463.0654 C-3654.8992 3463.9253 -3653.9033 3463.0356 -3653.2825 3463.3369 C-3653.3433 3463.375 -3653.4656 3463.4541 -3653.4895 3463.5537 C-3653.0457 3463.708 -3652.8623 3463.5908 -3652.5522 3463.3955 C-3652.5913 3463.333 L-3652.0496 3462.8184 -3652.2561 3463.7261 -3651.9373 3463.958 C-3651.8137 3463.8799 -3651.3704 3464.0313 -3651.4417 3463.6455 C-3650.8643 3464.1465 L-3650.8921 3463.5576 L-3650.5664 3463.5225 -3650.4951 3463.9121 -3650.2 3463.5537 C-3650.1863 3463.0269 L-3650.9951 3462.8438 L-3650.5852 3462.6719 -3650.8809 3462.3398 -3650.4304 3462.2295 C-3650.9336 3462.8057 -3650.0745 3462.5215 -3650.0249 3463.0103 C-3649.6936 3462.7139 L-3649.7783 3462.8545 L-3649.5183 3463.125 -3649.4688 3462.6582 -3649.1653 3462.7271 C-3649.5232 3462.4336 -3649.7576 3462.063 -3650.2136 3462.4375 C-3649.8816 3462.1416 -3649.2231 3461.8135 -3649.0615 3461.7959 C-3648.7129 3461.5752 -3648.4695 3461.9766 -3648.1433 3462.0356 C-3648.7693 3462.2471 -3647.9241 3463.6328 -3649.1785 3463.2544 C-3649.1553 3463.1533 -3649.0537 3463.1763 -3649.0144 3463.2383 C-3649.1816 3462.5654 -3649.7664 3463.2803 -3650.0383 3463.5376 C-3649.9683 3463.9253 -3650.2527 3464.021 -3649.7705 3464.2349 C-3649.9287 3463.9873 -3649.3643 3463.3716 -3648.9055 3463.6895 C-3648.9863 3464.5181 L-3648.3184 3464.6157 L-3648.3809 3464.6553 L-3648.1296 3465.1895 -3647.6682 3464.5518 -3647.2083 3464.8662 C-3646.8762 3464.5703 -3645.6023 3464.8057 -3646.1504 3463.9385 C-3645.7375 3464.457 -3645.3752 3463.7959 -3644.9248 3463.6846 C-3645.4863 3463.3462 L-3644.8225 3462.7524 -3645.0137 3463.1353 -3644.4824 3462.1924 C-3644.4287 3462.4185 -3644.3103 3462.605 -3644.4182 3462.8438 C-3643.5264 3462.8877 -3642.2527 3463.1221 -3641.7295 3462.4429 C-3641.1008 3462.479 -3641.0022 3463.4561 -3640.1201 3463.0728 C-3639.9343 3462.9561 -3640.2649 3462.2979 -3639.6809 3462.5356 C-3639.6416 3462.5977 -3640.2432 3463.1504 -3639.5928 3463.0854 C-3639.1296 3462.4473 -3638.5049 3463.4375 -3637.9023 3462.8843 C-3637.5842 3463.1143 -3637.0322 3463.0269 -3637.1472 3463.5313 C-3637.6511 3463.417 -3638.3643 3463.5225 -3638.4729 3463.7646 C-3638.4033 3463.46 -3638.8313 3463.4692 -3638.46 3463.2349 C-3639.2217 3462.8535 -3638.9543 3463.5479 -3639.6377 3463.2871 C-3639.6848 3463.4893 -3639.2864 3463.8457 -3639.1399 3463.665 C-3639.1367 3464.3545 -3640.4873 3463.998 -3639.8799 3464.8247 C-3639.1497 3464.8843 -3638.9329 3463.4473 -3638.3 3464.1729 C-3638.5537 3464.5923 -3638.9504 3464.2373 -3639.2727 3464.9604 C-3638.7527 3465.2383 L-3638.3752 3464.7393 L-3638.3977 3464.8413 L-3637.4792 3465.4727 -3637.5481 3464.1318 -3636.7263 3463.7856 C-3637.2024 3463.3076 -3636.6162 3462.5908 -3636.9744 3462.2979 C-3636.4248 3462.21 -3636.0212 3462.3013 -3636.0176 3462.9912 C-3637.0457 3463.5537 -3636.0759 3463.7207 -3637.0264 3464.4077 C-3636.8704 3464.6553 -3637.2527 3465.417 -3636.6863 3465.4932 C-3636.0481 3465.0015 -3636.8772 3464.9185 -3636.2407 3464.6909 C-3636.2031 3464.7524 -3636.1641 3464.8145 -3636.1863 3464.916 C-3635.8936 3464.5576 -3635.8447 3465.0454 -3635.4905 3464.6494 C-3635.5745 3464.7876 L-3635.1377 3465.2061 -3635.0967 3464.3135 -3634.7207 3464.7695 C-3634.8711 3464.2573 -3634.4683 3464.3496 -3634.2351 3464.0303 C-3634.6162 3463.8369 -3634.8225 3463.1021 -3635.5745 3463.1431 C-3635.6653 3463.5479 -3635.6104 3463.7725 -3635.9192 3463.9683 C-3635.4304 3463.9185 L-3635.5359 3463.9854 -3635.6162 3464.0894 -3635.7129 3464.1709 C-3636.1824 3463.9604 L-3635.5872 3463.6719 -3635.8601 3463.2393 -3635.6072 3462.8184 C-3635.0625 3462.9951 -3635.1577 3462.707 -3634.8152 3462.8389 C-3634.8496 3463.4326 -3633.7649 3463.8535 -3633.1377 3464.2349 C-3633.2351 3464.2119 -3633.3608 3464.2271 -3633.4287 3464.2119 C-3633.8843 3464.5869 -3633.1152 3464.707 -3633.0984 3464.8701 C-3632.7664 3464.5732 L-3632.8289 3464.6143 -3632.9153 3464.7524 -3632.7737 3464.8369 C-3632.3242 3464.7261 -3632.3503 3464.1377 -3631.9016 3464.0264 C-3631.8679 3464.3535 -3632.2473 3464.8496 -3631.9683 3465.021 C-3631.8721 3465.3062 -3631.5657 3466.0654 -3630.9695 3465.7764 C-3630.9272 3465.6509 -3630.7727 3465.5811 -3630.5935 3465.5269 C-3630.6184 3465.5449 -3630.6497 3465.5576 -3630.6609 3465.5811 C-3630.2649 3465.9375 L-3630.6023 3466.4951 -3630.9473 3465.6743 -3631.2864 3466.2344 C-3631.3152 3466.7646 L-3631.5791 3466.7661 -3631.9375 3466.9956 -3632.1023 3467.2705 C-3631.7 3467.3604 -3631.6152 3467.2212 -3631.1653 3467.1108 C-3631.1023 3467.4463 -3631.4192 3467.6953 -3631.4648 3467.7314 C-3631.3977 3467.4292 L-3631.9343 3466.9902 -3632.2 3467.9375 -3632.8679 3467.8389 C-3632.9688 3467.8174 -3632.9072 3467.7783 -3632.8848 3467.6772 C-3633.4255 3468.1909 -3633.9561 3467.4873 -3634.4817 3468.165 C-3634.3103 3467.8853 L-3634.6682 3468.1108 -3635.3679 3468.6328 -3636.0671 3469.1377 C-3636.0728 3469.3438 L-3635.9951 3469.4683 -3636.2576 3469.4604 -3636.3984 3469.3774 C-3636.3977 3469.374 L-3636.7483 3469.6265 -3637.0852 3469.8584 -3637.3608 3470.0313 C-3637.2727 3470.1592 -3637.1599 3470.2661 -3637.0305 3470.2959 C-3636.9209 3470.0537 -3636.2783 3470.2524 -3636.3665 3469.7017 C-3636.0696 3470.0342 -3635.5913 3469.5576 -3635.3733 3469.7661 C-3635.7705 3469.4126 -3635.0967 3469.2471 -3635.0271 3468.9429 C-3634.8936 3469.291 -3634.4385 3468.917 -3634.4905 3469.3843 C-3634.4121 3469.5059 -3634.6855 3469.0742 -3634.8545 3469.3545 C-3635.2705 3469.7896 -3634.0928 3469.7373 -3634.6111 3470.1509 C-3633.9519 3469.8232 -3633.0833 3469.9648 -3632.4033 3469.5352 C-3632.7839 3469.3438 L-3632.4817 3469.4126 -3631.7664 3469.3086 -3631.7129 3469.5342 C-3631.9375 3469.5889 -3632.2 3469.583 -3632.4873 3469.6768 C-3632.5012 3470.2041 -3631.7969 3469.6729 -3631.7649 3469.999 C-3630.9304 3469.1265 L-3631.2959 3469.0967 L-3631.0657 3468.7764 -3630.3015 3469.1631 -3629.7351 3469.2373 C-3630.0601 3469.959 -3630.5896 3469.2559 -3631.1855 3469.5454 C-3631.6184 3469.8188 -3630.9182 3470.2422 -3631.3279 3470.415 C-3631.2217 3470.583 -3630.9543 3470.563 -3630.8225 3470.3809 C-3630.6609 3470.5127 L-3631.0264 3471.1685 -3631.8457 3471.0225 -3632.3911 3471.5869 C-3632.3433 3471.5166 -3632.3015 3471.4424 -3632.2864 3471.3662 C-3632.7063 3471.1118 -3633.1328 3471.1221 -3633.5422 3471.2959 C-3633.3257 3471.5024 -3633.24 3471.3623 -3633.1162 3471.2856 C-3633.1008 3471.4478 -3633.4873 3471.5181 -3633.6335 3471.6982 C-3633.2527 3471.8896 -3633.5625 3472.0854 -3633.3215 3472.1934 C-3633.5696 3472.3496 -3633.7705 3472.3037 -3634.0728 3472.2349 C-3634.2295 3471.9873 -3633.9431 3471.8936 -3633.9751 3471.5688 C-3634.2864 3471.7646 -3634.4287 3470.9873 -3634.8843 3471.3623 C-3634.2783 3471.499 -3635.0439 3472.0688 -3635.2527 3472.2876 C-3635.1511 3472.3101 L-3635.3433 3472.6909 -3635.5063 3472.707 -3635.6392 3472.3584 C-3635.3911 3472.2017 -3635.1511 3472.3101 -3635.2217 3471.9229 C-3635.3855 3471.9395 -3635.5488 3471.9561 -3635.7344 3472.0728 C-3635.5657 3471.7935 L-3636.3799 3471.874 L-3636.5088 3472.2158 -3636.7241 3472.6982 -3636.8369 3473.2017 C-3637.0322 3472.8926 -3637.3042 3473.1504 -3637.4895 3473.2695 C-3637.4033 3473.127 L-3637.7625 3472.835 -3638.5615 3473.0791 -3638.6289 3473.3809 C-3638.8855 3473.1118 -3636.8152 3471.457 -3638.6289 3471.7373 C-3639.3184 3471.7393 -3639.0583 3472.7017 -3639.4519 3473.0356 C-3639.4297 3472.9375 -3639.4688 3472.874 V-3639.7705 3472.8037 -3639.8008 3473.1709 -3640.0488 3473.3262 C-3639.8679 3473.4727 -3639.6057 3473.479 -3639.5212 3473.3398 C-3639.6121 3473.7432 -3640.1497 3473.3037 -3640.3809 3473.6221 C-3640.0808 3473 -3640.9641 3473.3848 -3640.7312 3473.0654 C-3641.3313 3472.665 -3641.9729 3473.1572 -3642.2881 3473.6157 C-3642.6953 3472.835 -3643.0022 3473.7192 -3643.6631 3473.3584 C-3643.5615 3473.3809 -3643.3772 3473.2646 -3643.2351 3473.3486 C-3642.8584 3472.8535 -3643.9199 3473.0889 -3643.3401 3472.6353 C-3643.4641 3472.7139 -3643.3489 3472.8984 -3643.2217 3472.8213 C-3642.9993 3472.7656 -3642.7898 3472.5479 -3642.8457 3472.3223 C-3643.3843 3471.8843 L-3643.1963 3471.7646 L-3644.0137 3471.1582 L-3644.0359 3471.2573 -3643.9592 3471.3809 -3643.9199 3471.4429 C-3644.8679 3471.1768 -3645.9519 3471.5142 -3646.7825 3471.4336 C-3646.9385 3472.8311 -3648.8271 3472.0313 -3649.4983 3472.8896 C-3649.3184 3472.4893 -3649.22 3471.7822 -3649.3313 3471.4912 C-3649.1816 3471.4326 -3648.8752 3470.8677 -3648.5359 3470.9854 C-3648.4817 3471.21 -3648.0625 3471.4639 -3648.3323 3471.7207 C-3647.3943 3471.5615 -3648.4592 3471.1079 -3648.1824 3470.5879 C-3649.2217 3470.7236 -3649.8313 3471.542 -3650.4873 3471.8711 C-3650.5039 3471.7061 L-3650.9993 3472.0181 L-3650.5945 3472.1108 -3650.6145 3472.9033 -3651.1362 3472.6265 C-3651.0728 3472.5869 L-3651.3704 3472.2544 -3651.9895 3472.6455 -3652.4543 3472.5942 C-3652.7695 3473.0518 L-3653.2351 3473 -3653.2551 3472.1475 -3653.4065 3471.6367 C-3654.1362 3471.5767 -3654.5576 3472.2759 -3655.0759 3472.6909 C-3655.3103 3472.3188 -3656.4033 3472.2314 -3655.8242 3471.7803 C-3656.4824 3472.1079 -3656.3496 3474.1006 -3657.4785 3472.9966 C-3657.1855 3472.6377 L-3658.2649 3472.7124 -3659.8042 3473.4263 -3660.3015 3473.0488 C-3659.9033 3471.7598 -3661.6497 3471.7373 -3661.8416 3470.4736 c-3661.7881 3470.7622 -3662.1936 3470.8584 -3662.2527 3471.0127 C-3662.3416 3470.8643 -3662.4895 3470.7207 -3662.6465 3470.9814 C-3662.2256 3471.2349 -3662.9424 3472.2935 -3662.1377 3471.7832 C-3662.5449 3472.6494 -3663.0696 3473.3262 -3663.9617 3473.2832 C-3663.9482 3472.7559 L-3663.2424 3472.916 L-3663.3137 3472.5269 -3662.9504 3472.5566 -3662.8015 3472.3774 C-3664.1145 3472.0811 -3662.6296 3471.1431 -3663.9719 3471.2119 C-3664.1016 3471.5537 -3664.0176 3471.4126 -3664.3665 3471.5479 C-3664.2024 3471.5303 -3664.1729 3471.167 -3664.4373 3471.1597 C-3664.6912 3471.5811 L-3665.1599 3470.7017 -3663.9153 3471.0088 -3664.3152 3470.3911 C-3663.7969 3469.9771 -3662.8992 3469.7559 -3663.0664 3469.083 C-3663.9128 3468.8389 -3663.8279 3470.3433 -3664.7129 3470.0376 C-3664.8071 3469.7515 L-3665.1184 3469.9463 -3665.1687 3470.4102 -3665.3391 3470.6904 C-3665.3545 3470.5269 -3665.4336 3470.4053 -3665.6335 3470.3584 C-3666.1592 3471.0356 -3666.5081 3471.1685 -3666.9929 3471.9077 C-3665.7024 3471.3535 -3665.8896 3472.4229 -3664.5576 3471.9287 C-3664.7664 3472.1475 -3665.7041 3472.3076 -3665.7617 3473.0356 C-3665.7493 3472.5078 L-3666.1824 3472.7822 -3666.6152 3473.0537 -3667.1592 3472.8799 C-3666.8271 3472.583 L-3667.5481 3472.9502 -3668.0256 3471.7822 -3668.5945 3472.6597 C-3668.3936 3472.707 -3668.2305 3472.6909 -3668.1064 3472.6108 c-3668.4775 3472.8462 -3668.9431 3472.7935 -3669.3464 3472.7041 C-3670.1809 3473.5752 L-3670.1736 3473.3135 -3670.7024 3473.2979 -3670.4473 3472.8799 C-3671.0481 3472.4785 -3671.3313 3473.2646 -3671.6785 3473.3955 C-3672.2937 3472.835 -3671.1455 3473.1455 -3671.0852 3472.417 C-3671.9329 3472.1729 -3672.8313 3472.3936 -3673.3096 3472.8677 C-3673.1367 3472.9741 -3673.0527 3473.0654 -3673.0615 3473.1934 C-3673.0872 3473.0269 -3673.4287 3473.0703 -3673.6191 3473.0654 C-3673.75 3473.4077 L-3674.0671 3473.1763 -3674.0225 3472.9741 -3673.7527 3472.7158 C-3674.0559 3472.6494 -3674.4172 3473.3086 -3674.7295 3472.8145 C-3674.2119 3472.4014 -3673.5522 3472.7617 -3673.2825 3472.5044 C-3674.3643 3472.8423 -3674.3711 3471.4604 -3675.7424 3471.8955 C-3675.7593 3471.7314 -3675.5271 3471.4126 -3675.7913 3471.4077 C-3676.4033 3471.5342 -3675.9512 3472.1143 -3676.1423 3472.4951 C-3675.6711 3472.2822 -3675.4519 3472.4912 -3675.1785 3472.9238 C-3675.3042 3473.2017 L-3675.3232 3473.0576 -3675.6191 3473.0493 -3675.7063 3472.9102 C-3675.7825 3473.4771 L-3675.7473 3472.8496 -3676.2207 3472.3716 -3676.5928 3472.6064 C-3676.2168 3473.0615 -3676.3184 3473.0376 -3676.2161 3473.7524 C-3676.7393 3474.4292 -3676.8064 3473.0869 -3677.3928 3473.8037 C-3677.3489 3473.6021 -3676.8369 3473.4517 -3677.2793 3473.2979 C-3677.6455 3473.2705 -3677.5967 3473.7593 -3677.8423 3473.915 C-3677.5657 3473.3926 -3677.6367 3473.0044 -3677.3369 3472.3843 C-3676.6863 3472.3184 -3677.0745 3472.3911 -3676.4385 3472.1631 C-3676.9768 3471.7212 L-3676.4255 3471.6353 -3676.5759 3471.123 -3676.5305 3470.9229 C-3677.4719 3470.3911 -3677.24 3471.7168 -3677.8457 3471.5796 C-3678.1377 3471.9385 -3677.2783 3471.6553 -3677.7351 3472.0303 C-3678.3015 3471.9541 -3677.8643 3472.3716 -3678.5 3472.5977 C-3678.3936 3472.3584 L-3678.5879 3472.0479 -3678.78 3472.4307 -3679.0049 3472.4829 C-3679.2522 3472.6416 -3678.7249 3474.2998 -3679.7417 3474.335 C-3679.6919 3474.1895 -3679.6736 3474.0967 -3679.6736 3474.0356 C-3678.6816 3469.6455 L-3679.7119 3469.6563 -3680.8992 3469.5342 -3682.0923 3469.2393 C-3682.3733 3468.3809 -3681.2407 3468.5313 -3681.3137 3468.1455 C-3680.7695 3468.3213 L-3680.8 3468.6851 -3681.9097 3468.4336 -3681.4182 3469.0767 C-3680.4573 3468.8145 -3680.0212 3469.2334 -3679.1096 3468.4829 C-3679.3928 3467.623 -3680.3103 3468.6353 -3680.9033 3467.9712 C-3680.6543 3468.0269 -3680.4441 3467.9326 -3680.24 3467.8096 C-3680.7969 3467.6997 -3681.3928 3467.5811 -3682.0264 3467.4478 C-3682.1687 3467.6563 L-3681.7417 3467.7524 -3681.4463 3467.8262 -3681.4082 3467.8574 C-3681.9744 3467.7822 -3682.4519 3468.2583 -3682.4895 3468.8877 C-3682.3889 3468.9102 L-3682.5935 3469.1064 L-3682.7263 3469.0664 -3682.8591 3469.0269 -3682.9912 3468.9854 Cf-3719.6936 3468.8369 m-3719.6592 3468.7764 -3719.6321 3468.7061 -3719.6121 3468.6182 c-3719.6328 3468.71 -3719.6096 3468.7695 -3719.6936 3468.8369 Cf0 D-3671.9033 3466.875 m-3672.6584 3466.7832 -3673.4199 3466.6118 -3674.1455 3466.5356 C-3672.8359 3467.7793 -3671.9153 3468.7207 -3674.1008 3468.6963 C-3674.2439 3468.7856 L-3673.9583 3468.9385 -3673.4656 3468.957 -3673.0022 3468.8672 C-3672.6272 3468.4263 -3671.4172 3466.8062 -3671.4304 3466.6631 C-3671.5632 3466.3145 -3671.7568 3466.6953 -3671.9983 3466.5889 C-3671.9033 3466.875 Lf-3671.3665 3468.958 m-3670.9385 3469.0967 -3671.0359 3468.8213 -3670.9695 3468.5732 C-3671.1201 3468.605 -3671.2705 3468.6377 -3671.4192 3468.667 C-3671.3623 3468.7295 -3671.3342 3468.8174 -3671.3665 3468.958 Cf1 D-3670.9951 3468.3252 m-3671.0432 3468.3188 -3671.0842 3468.3076 -3671.1057 3468.2744 C-3670.9951 3468.3252 Lf0 D-3679.3191 3468.0103 m-3679.3 3468.0044 -3679.2932 3467.999 -3679.2751 3467.9951 C-3679.3762 3467.9751 -3679.4775 3467.957 -3679.5833 3467.9375 C-3679.5422 3467.9771 -3679.4641 3468.0078 -3679.3191 3468.0103 Cf-3678.4504 3468.6182 m-3678.3489 3468.1641 L-3678.4431 3468.1475 -3678.5393 3468.1294 -3678.6377 3468.1118 C-3678.6052 3468.3174 -3678.5713 3468.4966 -3678.4504 3468.6182 Cf-3675.6584 3470.1118 m-3675.4824 3469.5664 -3674.8928 3469.542 -3674.8567 3468.9126 C-3674.8191 3468.7515 -3674.9431 3468.6895 -3675.0823 3468.6377 C-3675.2375 3468.623 -3675.4033 3468.6055 -3675.5791 3468.5854 C-3675.5852 3468.6768 -3675.6201 3468.7622 -3675.6785 3468.8438 C-3675.5049 3468.9229 -3675.3889 3469.0791 -3675.4592 3469.4648 C-3675.9055 3468.623 -3675.8591 3470.0654 -3676.3416 3469.8496 C-3676.4951 3470.2935 -3675.8047 3470.2896 -3675.6584 3470.1118 Cf1 D-3638.5752 3468.4727 m-3638.5615 3468.5269 -3638.5144 3468.6685 -3638.4482 3468.8438 C-3638.7881 3469.1553 L-3639.3943 3469.0181 -3639.8799 3468.1143 -3640.4255 3468.8916 C-3640.6809 3468.6963 -3640.8176 3468.2832 -3640.9482 3467.9429 C-3640.8232 3467.9683 -3640.7063 3468.0015 -3640.6089 3468.0537 C-3639.0791 3466.915 -3639.8113 3469.2544 -3638.5752 3468.4727 Cf0 D-3645.5449 3467.3643 m-3645.4824 3467.3252 -3645.46 3467.2227 Y-3646.8145 3468.3774 -3647.9297 3468.7119 -3648.6599 3468.667 C-3648.5183 3469.125 -3647.8633 3469.479 -3647.5522 3469.6685 C-3647.8279 3470.1904 L-3648 3469.7803 L-3648.4785 3470.2544 L-3648.3447 3470.605 -3647.9583 3470.5313 -3647.7 3470.8013 C-3647.6775 3470.7017 -3646.8503 3470.0933 -3646.6191 3469.7725 C-3647.28 3469.4121 L-3647.1016 3469.5576 -3646.2249 3469.4375 -3645.8772 3469.3037 C-3645.8704 3469.042 -3646.4695 3468.6392 -3646.5449 3469.207 C-3646.6162 3468.8188 -3645.9255 3468.8145 -3646.3623 3468.3984 C-3645.8447 3467.9854 -3645.0212 3468.3311 -3644.6392 3468.5225 C-3644.5745 3469.1753 L-3644.1553 3469.4287 -3644.2913 3468.3896 -3643.7932 3468.7661 C-3644.4055 3468.8936 -3643.6897 3469.4814 -3644.1768 3469.5303 C-3644.0212 3469.7764 -3644.1736 3470.2192 -3643.6855 3470.1709 C-3643.2793 3469.3076 -3643.1711 3470.7119 -3642.7871 3469.9502 C-3642.5305 3470.2192 -3643.0632 3470.4692 -3642.5583 3470.5854 C-3641.9792 3470.1318 -3642.0127 3469.8062 -3641.9768 3469.1782 C-3642.5183 3469.0024 -3642.5852 3469.9951 -3643.0281 3469.8423 C-3642.1472 3468.7661 L-3642.3096 3468.6143 -3642.4297 3468.5977 -3642.5305 3468.6416 C-3642.3535 3468.5791 -3642.2031 3468.4199 -3642.0745 3468.1997 c-3642.0012 3468.0767 -3641.9336 3467.9712 -3641.8711 3467.8809 C-3642.3704 3467.875 -3642.8137 3467.8599 -3642.8921 3467.5923 C-3642.8232 3467.2876 L-3643 3467.0078 -3643.2881 3467.2271 -3643.4209 3467.4502 C-3643.8679 3467.4829 -3644.3145 3467.9077 -3644.4121 3467.5132 C-3644.2424 3467.2344 L-3644.7922 3467.3223 -3644.8535 3467.3604 -3645.5449 3467.3643 Cf-3663.5625 3466.6709 m-3663.2295 3467.7876 -3662.8623 3468.7744 -3661.3081 3468.5791 C-3661.4304 3468.6563 L-3660.6472 3469.3574 -3659.9033 3467.7295 -3658.9504 3468.5078 C-3659.4128 3468.9287 -3659.3879 3468.8896 -3659.8984 3469.8535 C-3659.4023 3469.5376 L-3659.5398 3470.1455 -3659.0449 3469.8311 -3658.6809 3469.8599 C-3659.0022 3470.583 L-3659.2207 3470.375 -3659.7871 3470.2998 -3659.7705 3470.4648 C-3659.6465 3470.3848 -3660.5183 3469.5518 -3660.9919 3469.7622 C-3660.9431 3470.2524 -3659.9431 3470.0537 -3660.3896 3470.8545 C-3659.9961 3470.5181 -3659.9473 3471.0068 -3659.5359 3470.835 C-3659.9304 3471.1709 -3659.6335 3471.5024 -3659.9272 3471.8599 C-3659.2527 3471.6934 L-3659.2351 3471.8564 -3660.2351 3472.0557 -3659.6824 3472.6582 C-3659.4121 3472.4014 -3658.6904 3472.7236 -3658.6775 3472.1963 C-3658.6609 3472.3584 L-3658.1553 3472.4727 -3658.4385 3471.6118 -3657.8176 3471.9126 C-3657.8103 3471.6475 -3657.9287 3471.4639 -3658.1511 3471.5181 C-3658.3391 3471.6353 -3658.3679 3471.999 -3658.7551 3472.0728 C-3658.9287 3471.6597 -3658.2881 3472.124 -3658.5569 3471.4263 c-3658.6904 3471.0791 -3659.5791 3471.7261 -3659.2959 3470.9424 C-3658.7913 3471.0557 L-3658.7783 3470.5269 -3658.4128 3470.5576 -3658.4231 3470.1318 C-3658.1145 3469.9375 -3657.8232 3470.5313 -3657.5081 3470.0728 C-3657.3772 3469.7314 -3657.6057 3469.0967 -3657.0842 3469.373 C-3656.6768 3470.1543 -3655.4761 3470.0024 -3655.0264 3469.8896 C-3654.6328 3469.5537 L-3654.6663 3469.2295 -3655.3848 3469.5977 -3655.1321 3469.1768 C-3654.5183 3469.0493 L-3654.5657 3469.2524 L-3654.3623 3469.2979 -3654.1543 3469.0796 -3653.9688 3468.9639 C-3654.1599 3469.3438 -3654.6023 3469.1909 -3654.5144 3469.7412 C-3654.2263 3469.8496 -3654.1824 3470.0537 -3653.9172 3469.9478 C-3653.9751 3469.9873 -3654.0249 3470.041 -3654.0176 3470.1182 C-3653.4343 3470.3564 -3653.4543 3469.5024 -3653.3081 3469.3232 c-3652.7217 3468.6084 -3653.8992 3468.6597 -3653.8242 3468.0933 C-3652.1121 3467.791 L-3652.2583 3467.9692 -3652.4055 3468.1475 -3652.3503 3468.373 C-3651.9304 3468.627 -3652.3408 3468.7998 -3651.7512 3468.7734 C-3651.7932 3468.0215 -3651.0088 3468.3047 -3650.5923 3467.8701 C-3650.3977 3468.1782 -3650.3577 3468.2393 -3650.7832 3468.249 C-3650.7344 3468.7373 -3650.1631 3468.5493 -3649.96 3468.5942 C-3649.8423 3468.4727 -3649.6416 3468.4019 -3649.5144 3468.2935 C-3649.6848 3468.0493 -3649.6121 3467.7437 -3649.2432 3467.5356 C-3649.2217 3467.4336 L-3649.8264 3467.2998 -3650.7664 3466.7661 -3651.1455 3467.2661 C-3651.0383 3467.0244 L-3651.7383 3466.6021 -3652.5615 3467.9014 -3652.8843 3466.979 C-3652.8545 3466.6143 -3653.0249 3466.8955 -3653.0127 3466.3677 C-3653.5281 3466.7803 L-3653.4209 3466.541 L-3654.2976 3466.6597 L-3654.2744 3466.5615 L-3654.6912 3467.0391 -3655.0176 3467.4287 -3655.2783 3467.7471 C-3655.2793 3467.9771 -3655.2522 3468.0479 -3655.3911 3468.2173 C-3655.5305 3468.3311 -3655.6362 3468.3486 -3655.7305 3468.3184 C-3655.7312 3468.3188 -3655.7312 3468.3188 -3655.7312 3468.3213 C-3655.7312 3468.3188 -3655.7312 3468.3188 -3655.7312 3468.3184 C-3655.9463 3468.2515 -3656.0896 3467.9209 -3656.3545 3467.7856 C-3655.5393 3467.7295 L-3655.4729 3467.3389 -3655.5422 3466.9336 -3655.9417 3466.6597 C-3655.7783 3466.6455 -3655.71 3466.3408 -3655.9121 3466.2959 C-3655.9343 3466.3975 -3656.4463 3466.5454 -3656.2512 3466.8564 C-3657.0256 3466.999 -3658.2793 3465.9736 -3659.4551 3466.7158 C-3658.6104 3466.2695 -3660.1321 3466.1924 -3659.1943 3466.0313 C-3659.8489 3465.4072 -3659.7576 3466.6475 -3660.4248 3466.5493 C-3660.4817 3466.3252 -3660.0615 3466.5791 -3659.9082 3466.1353 C-3661.0176 3465.8853 -3661.78 3467.1455 -3662.8533 3466.9561 C-3662.8992 3466.4688 L-3663.1023 3466.5313 -3663.3279 3466.6006 -3663.5625 3466.6709 Cf-3665.6855 3467.2783 m-3665.8921 3467.333 -3666.1016 3467.3896 -3666.3145 3467.4463 C-3666.2937 3467.4541 -3666.2744 3467.4541 -3666.2527 3467.4604 C-3666.8733 3467.8535 L-3666.4919 3468.0435 -3666.2407 3468.5791 -3666.7744 3468.8286 C-3666.7295 3468.627 -3666.8855 3468.3799 -3666.7 3468.2622 C-3667.0576 3467.9692 -3667.8423 3467.6865 -3667.6377 3468.4229 C-3666.9504 3467.7271 -3667.4775 3469.3604 -3666.9375 3468.8438 C-3667.2273 3469.3232 -3667.5144 3469.1079 -3667.7881 3469.3223 C-3667.5032 3468.9209 -3667.8545 3468.4126 -3668.2825 3468.2212 C-3668.4688 3468.3398 -3668.9729 3468.2261 -3669.2825 3468.4209 C-3669.1721 3468.8711 -3669.4417 3469.1289 -3668.9373 3469.2422 C-3669.1223 3469.3604 -3669.4087 3469.4541 -3669.7295 3469.2227 C-3669.6023 3469.1455 -3669.3799 3469.0894 -3669.3953 3468.9272 C-3669.6023 3468.5127 -3669.8447 3468.5313 -3669.9785 3468.3545 C-3670.0852 3468.3799 -3670.1929 3468.4019 -3670.2976 3468.4263 C-3670.2664 3468.4648 -3670.2393 3468.5166 -3670.22 3468.5811 C-3670.5745 3468.9785 L-3670.1023 3468.7661 -3670.3562 3469.1865 -3670.3623 3469.4502 c-3670.3496 3468.9229 -3670.6663 3469.3809 -3670.8279 3469.3984 C-3670.4768 3469.9561 L-3670.6465 3470.2349 -3671.0759 3469.5537 -3670.9873 3470.105 C-3670.2424 3470.3262 -3669.9561 3470.2314 -3669.2825 3470.0654 C-3669.5559 3469.6328 L-3668.7959 3469.3267 -3669.0872 3470.375 -3668.2344 3470.3545 C-3667.8799 3469.959 -3666.9519 3470.3267 -3666.9343 3469.5352 C-3667.0413 3469.7764 -3666.4033 3470.2393 -3666.1111 3469.8809 C-3665.7881 3469.1572 -3664.8113 3469.0596 -3665.1072 3468.7295 C-3665.3711 3468.7207 -3665.7263 3469.1182 -3665.9385 3468.6475 C-3665.4265 3468.4966 L-3665.7625 3468.1021 L-3665.5889 3468.2437 -3665.6057 3467.8584 -3665.6855 3467.2783 Cf1 D-3677.1455 3462.8389 m-3677.1511 3462.835 -3677.1584 3462.833 -3677.1653 3462.8286 C-3677.1577 3462.8311 -3677.1504 3462.8311 -3677.1433 3462.8311 C-3677.1455 3462.8389 Lf*U0 D-3630.9968 3466.8311 m-3630.8496 3466.6509 -3630.4856 3466.6807 -3630.5569 3466.2935 C-3630.5481 3466.7192 -3631.2073 3466.3584 -3630.9968 3466.8311 Cf-3630.5615 3467.248 m-3630.5359 3467.1465 -3630.5537 3466.9829 -3630.3904 3466.9683 C-3630.8401 3467.0767 L-3630.5615 3467.248 Lf-3630.1052 3470.1597 m-3629.8733 3469.8423 -3629.7263 3469.6631 -3629.3623 3469.6919 C-3629.2256 3470.7314 -3629.9583 3469.9824 -3630.1233 3470.9517 C-3629.4561 3471.0493 -3629.2512 3470.1416 -3628.7024 3470.0537 C-3628.9744 3469.6201 -3630.0852 3469.3701 -3630.1052 3470.1597 Cf-3630.4016 3471.4736 m-3630.0305 3471.2393 L-3630.0671 3471.1782 L-3630.4385 3471.4126 L-3630.4016 3471.4736 Lf-3638.4385 3462.4429 m-3638.4719 3462.1182 -3638.7031 3462.4385 -3638.8271 3462.5166 C-3638.7263 3462.5376 -3638.5852 3462.623 -3638.4385 3462.4429 Cf-3711.3503 3462.105 m-3714.1809 3462.4185 L-3713.3665 3462.3369 -3712.6145 3462.2959 -3711.3503 3462.105 Cf-3647.8313 3464.5664 m-3647.0713 3464.2603 -3646.7336 3463.6997 -3645.9592 3463.5576 C-3646.9775 3462.9033 -3647.3042 3464.5796 -3648.1592 3463.9092 C-3647.8313 3464.5664 Lf-3647.5632 3461.9751 m-3647.4373 3462.5869 -3648.1497 3462.6919 -3648.0393 3463.1406 C-3647.5271 3462.9912 -3647.8008 3462.5576 -3647.3359 3462.6104 C-3647.5632 3461.9751 Lf-3644.1191 3472.0889 m-3644.3496 3472.4072 L-3644.1641 3472.291 L-3644.1191 3472.0889 Lf-3651.0271 3462.5181 m-3650.9431 3462.3799 L-3651.3242 3462.1865 L-3651.0271 3462.5181 Lf-3650.8591 3462.2393 m-3650.9431 3462.3799 L-3650.9431 3462.3799 L-3650.8591 3462.2393 Lf-3644.4153 3473.4014 m-3644.0728 3473.5313 L-3643.9033 3473.2515 L-3644.4153 3473.4014 Lf-3647.4385 3470.1187 m-3647.1321 3469.9229 L-3647.1929 3469.9604 -3647.6121 3469.709 -3647.4385 3470.1187 Cf-3653.3545 3462.2583 m-3653.7273 3462.4932 L-3653.6892 3462.5537 L-3653.3176 3462.3188 L-3653.3545 3462.2583 Lf-3649.8369 3471.8057 m-3649.6252 3472.2759 -3650.4482 3471.9326 -3650.0127 3472.3486 C-3649.6252 3472.2759 -3649.7825 3472.0303 -3649.8369 3471.8057 Cf-3654.3352 3468.6157 m-3654.3855 3468.6157 -3654.4385 3468.6328 -3654.4895 3468.6851 C-3654.4287 3468.665 -3654.3777 3468.6406 -3654.3352 3468.6157 Cf-3654.3352 3468.6157 m-3654.1729 3468.6157 -3654.0105 3468.7959 -3653.8992 3468.6597 C-3654.1016 3468.4473 -3654.1753 3468.5269 -3654.3352 3468.6157 Cf-3656.1953 3468.7256 m-3656.0481 3468.7593 L-3656.1985 3468.9912 -3656.1272 3468.957 -3655.9929 3468.7705 C-3655.8369 3468.7544 -3655.8457 3468.6055 -3655.8271 3468.5039 C-3655.7959 3468.4473 -3655.7649 3468.3853 -3655.7312 3468.3213 C-3655.7793 3468.3809 -3655.8225 3468.4404 -3655.8591 3468.4912 C-3656.1008 3468.4873 -3656.2483 3468.5103 -3656.1953 3468.7256 Cf-3663.1052 3460.7998 m-3662.5615 3460.9751 -3662.4209 3461.0596 -3662.4504 3461.4248 C-3661.9343 3461.541 -3662.0144 3460.9126 -3661.7031 3460.7661 C-3662.2871 3460.8369 -3662.4065 3460.6685 -3663.1052 3460.7998 Cf-3661.7031 3460.7661 m-3661.6377 3460.7593 -3661.5752 3460.7515 -3661.4993 3460.7373 C-3661.5842 3460.7261 -3661.6472 3460.7412 -3661.7031 3460.7661 Cf-3654.0212 3472.7173 m-3654.3591 3473.2759 L-3654.2351 3473.1982 L-3654.0212 3472.7173 Lf-3663.9121 3460.6157 m-3663.8113 3460.6392 -3663.6497 3460.623 -3663.5703 3460.748 C-3663.5413 3460.3809 -3664.0127 3460.5933 -3663.9121 3460.6157 cf-3661.8152 3467.7744 m-3661.76 3467.998 -3661.4121 3467.8643 -3661.2705 3467.9502 C-3661.4736 3467.9033 -3661.6392 3467.23 -3661.8152 3467.7744 Cf-3665.4719 3462.1221 m-3665.3711 3462.1455 -3665.2161 3462.3911 -3665.2832 3462.6934 C-3665.1367 3462.5142 -3664.9385 3461.8701 -3665.4719 3462.1221 Cf-3662.8088 3467.709 m-3662.7312 3467.833 L-3662.3591 3467.5977 L-3662.8088 3467.709 Lf-3661.4817 3473.1006 m-3661.0632 3472.665 -3662.1455 3472.0493 -3661.4248 3471.6807 C-3662.3545 3471.2246 -3661.3535 3472.2979 -3662.0393 3472.2271 C-3661.6377 3472.374 -3661.4409 3472.9253 -3661.4817 3473.1006 Cf-3662.0393 3472.2271 m-3662.0977 3472.2041 -3662.1609 3472.1909 -3662.2295 3472.1895 C-3662.1536 3472.21 -3662.0923 3472.2212 -3662.0393 3472.2271 Cf-3667.9287 3469.4692 m-3667.8679 3469.4238 -3667.8264 3469.374 -3667.7881 3469.3223 C-3667.8359 3469.3584 -3667.8816 3469.4033 -3667.9287 3469.4692 Cf-3664.2295 3472.5869 m-3663.6023 3471.9326 L-3664.0212 3472.3677 -3665.0752 3472.3413 -3665.0095 3472.9927 C-3664.6682 3473.125 -3664.2576 3472.9517 -3664.0889 3472.6709 C-3664.2295 3472.5869 Lf-3671.4287 3460.7764 m-3671.1577 3460.5181 L-3671.4961 3460.4424 L-3671.3992 3460.54 -3671.5745 3461.0181 -3671.4287 3460.7764 Cf-3671.5615 3460.4287 m-3671.4961 3460.4424 L-3671.5105 3460.4263 -3671.5313 3460.4199 -3671.5615 3460.4287 Cf-3666.7424 3469.1543 m-3666.5398 3469.1997 -3666.3777 3469.1816 -3666.1929 3469.0664 C-3666.2695 3468.9429 -3666.7744 3468.8286 -3666.7424 3469.1543 Cf-3673.3369 3461.7236 m-3672.8896 3461.6118 L-3673.3777 3461.6597 L-3673.3369 3461.7236 Lf-3675.4241 3460.6157 m-3675.5012 3460.4932 L-3675.8721 3460.7271 L-3675.7937 3460.8496 L-3675.4241 3460.6157 Lf-3672.6943 3473.4326 m-3672.3911 3473.5024 -3672.1543 3472.917 -3672.2336 3472.7935 C-3672.8215 3472.8188 L-3672.6721 3473.3311 -3672.6584 3472.8037 -3672.3176 3472.9336 C-3672.6943 3473.4326 Lf-3690.9153 3461.5732 m-3690.7839 3461.2314 -3690.1409 3461.4292 -3690.1072 3461.7544 C-3690.1936 3461.8955 -3690.5422 3462.0303 -3690.3232 3462.2373 C-3689.8145 3461.3975 L-3689.1377 3461.9209 -3690.3289 3462.5015 -3690.6631 3462.7979 C-3689.9736 3462.9063 -3689.7693 3462.3545 -3689.0359 3462.3574 C-3689.2522 3462.2822 -3689.3889 3462.0728 -3689.5032 3461.8926 C-3689.5281 3461.3013 -3688.8447 3461.563 -3688.3562 3461.5166 C-3688.6672 3461.2598 -3688.4873 3461.0435 -3688.2607 3460.8115 C-3688.22 3460.7935 -3688.1929 3460.7593 -3688.1736 3460.7192 C-3688.1472 3460.6919 -3688.1223 3460.665 -3688.0967 3460.6367 C-3688.1553 3460.6377 L-3688.1511 3460.5713 -3688.1641 3460.4912 -3688.2063 3460.3809 C-3688.6162 3460.5537 -3688.9297 3460.0596 -3689.1936 3460.0518 C-3688.9329 3461.0132 -3690.0923 3460.2744 -3690.4241 3460.5703 C-3690.8071 3460.665 L-3690.9504 3460.667 L-3690.9792 3460.5615 -3690.9385 3460.4292 -3690.72 3460.2393 C-3690.9023 3460.4287 -3691.5105 3460.3623 -3691.4543 3460.6709 C-3692.8423 3460.6846 L-3692.8855 3460.6455 -3692.9287 3460.5967 -3692.9607 3460.5269 C-3693.0088 3460.5879 -3693.0168 3460.6377 -3693.0105 3460.6865 C-3699.0576 3460.748 L-3698.7593 3460.8232 -3698.5012 3461.0435 -3698.1936 3461.1494 C-3698.6553 3461.7876 -3697.6892 3461.2646 -3697.8247 3461.8677 C-3698.0322 3462.0869 -3698.3359 3462.0181 -3698.5168 3461.8716 C-3698.5842 3462.1763 -3698.3264 3462.4463 -3698.3562 3462.8101 C-3697.5935 3463.1934 -3697.4768 3461.7349 -3696.7312 3461.957 C-3696.7607 3462.3223 -3696.9912 3462.6416 -3696.5032 3462.5923 C-3696.6272 3462.6709 L-3695.8457 3462.2622 -3696.0183 3463.4966 -3695.5264 3462.4951 C-3695.5393 3463.0225 L-3695.1848 3462.625 -3694.4951 3462.6221 -3694.1064 3462.5493 C-3694.1296 3462.6509 L-3693.0393 3462.0479 -3693.5176 3462.5225 -3692.2932 3462.2705 C-3692.8567 3462.8853 L-3692.4343 3463.1396 -3692.3391 3462.4712 -3692.0359 3462.54 C-3692.0576 3462.6416 -3691.9873 3463.0269 -3692.2737 3463.123 C-3690.7881 3462.1851 L-3690.4336 3461.7876 -3690.8601 3461.7979 -3690.9153 3461.5732 Cf-3689.0359 3462.3574 m-3688.9573 3462.3853 -3688.8679 3462.3975 -3688.7625 3462.3774 C-3688.8643 3462.3604 -3688.9519 3462.3574 -3689.0359 3462.3574 Cf-3699.4824 3460.7524 m-3699.0576 3460.748 L-3699.1892 3460.7158 -3699.3264 3460.7061 -3699.4824 3460.7524 Cf-3686.9065 3461.2061 m-3687.1641 3460.9336 -3686.7136 3460.8247 -3686.6687 3460.6221 C-3687.5913 3460.6318 L-3687.5872 3460.835 -3687.6785 3461.0625 -3687.6599 3461.248 C-3686.9065 3461.2061 Lf-3687.8584 3460.249 m-3687.8896 3460.3896 -3687.9873 3460.5166 -3688.0967 3460.6367 C-3687.5913 3460.6318 L-3687.5945 3460.479 -3687.6511 3460.3408 -3687.8584 3460.249 Cf-3687.7607 3471.0894 m-3687.9241 3471.1079 L-3688.1711 3471.2646 L-3687.7607 3471.0894 Lf-3690.3152 3470.1963 m-3690.1201 3470.5044 -3689.75 3470.2705 -3689.6262 3470.1924 C-3690.0527 3470.2017 -3689.8679 3470.0854 -3690.3152 3470.1963 Cf-3689.7881 3473.4966 m-3690.1992 3473.6709 L-3690.1609 3473.7314 L-3689.7881 3473.4966 Lf-3702.6223 3462.8281 m-3702.6897 3462.8398 -3702.7551 3462.8486 -3702.8232 3462.8623 C-3702.7312 3462.8643 -3702.6711 3462.8496 -3702.6223 3462.8281 Cf-3699.0945 3462.3252 m-3700.0752 3461.7334 -3698.4519 3461.833 -3698.76 3461.0752 C-3699.2937 3461.3262 L-3699.2483 3461.123 L-3699.8992 3461.1895 L-3699.7656 3461.5376 -3699.6653 3461.5591 -3699.6943 3461.9248 C-3700.5632 3461.7822 -3699.9683 3461.4912 -3700.6057 3461.0303 C-3701.5769 3461.0967 L-3701.4983 3460.9873 L-3701.5801 3460.9951 -3701.6162 3461.041 -3701.6443 3461.1006 C-3704.9172 3461.3281 L-3705.5127 3461.6182 -3704.5879 3461.9854 -3705.0271 3462.5225 C-3704.3369 3462.521 -3703.3113 3462.9102 -3703.2527 3462.1816 C-3703.2759 3462.2822 -3703.3215 3462.4829 -3703.1816 3462.5688 C-3702.7825 3461.9692 L-3703.1631 3461.7783 L-3702.7617 3461.1807 -3701.4656 3461.3135 -3701.2312 3461.6846 C-3701.9683 3461.8887 -3701.5984 3462.6084 -3702.6252 3462.2173 C-3702.5791 3462.4019 -3702.3911 3462.7271 -3702.6223 3462.8281 C-3701.4192 3462.6157 -3700.3408 3462.9478 -3699.0945 3462.3252 Cf-3711.1631 3462.6763 m-3711.1536 3462.6104 L-3711.1753 3462.6455 -3711.1824 3462.6719 -3711.1631 3462.6763 Cf-3710.7593 3462.7661 m-3710.1729 3462.0518 L-3711.0872 3462.1094 L-3711.1536 3462.6104 L-3711.0728 3462.4829 -3710.7522 3462.2295 -3710.6279 3462.4253 C-3710.7593 3462.7661 Lf-3709.4919 3461.6201 m-3709.9641 3461.833 -3709.9385 3462.4229 -3709.6809 3462.6919 C-3710.1145 3462.9648 -3709.9097 3462.0576 -3710.2083 3462.6807 C-3710.1985 3463.1064 -3709.6641 3462.8564 -3709.5413 3462.7783 C-3709.4919 3461.6201 Lf-3706.0081 3461.9307 m-3706.1409 3462.1753 L-3705.8137 3462.2393 L-3706.0081 3461.9307 Lf-3706.1409 3462.1753 m-3706.4656 3462.1094 L-3706.4431 3462.291 -3706.4209 3462.4683 -3706.3679 3462.5923 C-3706.1409 3462.1753 Lf-3707.3176 3461.9395 m-3707.4551 3461.8955 -3707.6072 3461.8623 -3707.7922 3461.8462 C-3707.3176 3461.9395 Lf-3706.9463 3462.0894 m-3706.9573 3462.0127 L-3707.3176 3461.9395 L-3707.1848 3461.9854 -3707.0657 3462.0356 -3706.9463 3462.0894 Cf-3706.4656 3462.1094 m-3706.5183 3461.6963 -3706.5801 3461.2622 -3707.0496 3461.3774 C-3706.9573 3462.0127 L-3706.4656 3462.1094 Lf-3692.7783 3472.874 m-3693.1497 3473.1079 L-3693.1104 3473.1719 L-3692.7393 3472.9375 L-3692.7783 3472.874 Lf-3694.9209 3472.4966 m-3695.0127 3472.5688 -3695.0823 3472.6455 -3695.1455 3472.7236 C-3695.0488 3472.6782 -3694.9719 3472.6094 -3694.9209 3472.4966 Cf-3696.5137 3475.3188 m-3696.9504 3474.9033 -3695.9111 3474.7695 -3696.72 3474.5854 C-3696.7913 3474.1982 -3696.4121 3473.6992 -3696.0313 3473.8916 C-3696.0615 3474.2559 -3696.4023 3474.125 -3696.1682 3474.4966 C-3695.9153 3474.0752 -3695.8191 3474.3623 -3695.9072 3473.8135 C-3695.4817 3473.4712 -3695.4343 3473.0811 -3695.1455 3472.7236 C-3695.6599 3472.9648 -3696.74 3472.4019 -3697.3928 3473.1064 C-3697.7527 3473.7661 -3697.5344 3474.667 -3697.5359 3475.6201 C-3697.4817 3475.8438 -3696.5488 3475.9502 -3696.5137 3475.3188 Cf-3695.8264 3476.2705 m-3695.6243 3476.3174 -3695.5625 3476.2793 -3695.4385 3476.1997 C-3695.4719 3475.874 -3695.6631 3476.2559 -3695.8264 3476.2705 Cf-3700.4719 3469.0942 m-3700.5105 3469.2295 -3700.8762 3469.3975 -3700.7976 3469.6318 C-3700.2432 3469.4604 L-3700.3733 3469.4385 -3700.4192 3469.2725 -3700.4719 3469.0942 Cf-3700 3469.3877 m-3700.2432 3469.4604 L-3700.1824 3469.4727 -3700.1072 3469.4541 -3700 3469.3877 Cf-3700.4983 3469.0093 m-3700.4895 3469.0376 -3700.4817 3469.0664 -3700.4719 3469.0942 C-3700.4641 3469.0654 -3700.4656 3469.0356 -3700.4983 3469.0093 Cf-3708.6631 3461.7017 m-3708.6553 3461.4404 -3708.9023 3461.5967 -3709.0264 3461.6743 C-3708.9255 3461.6963 -3708.7839 3461.7822 -3708.6631 3461.7017 Cf-3717.9641 3462.7314 m-3718.1824 3462.5225 L-3718.1052 3462.6475 -3718.0657 3462.709 -3717.9641 3462.7314 Cf-3721.3279 3469.8765 m-3721.3342 3469.9272 -3721.3503 3469.9692 -3721.3721 3470.0093 C-3721.3503 3469.9771 -3721.3352 3469.9336 -3721.3279 3469.8765 cf-3721.3721 3470.0093 m-3721.5212 3470.2271 -3721.9817 3469.8887 -3722.1472 3470.2192 C-3722.1262 3470.1187 L-3722.4343 3470.3145 L-3722.1455 3470.2856 -3721.5393 3470.3267 -3721.3721 3470.0093 CfUUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 40)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7593.4521 7347.5977 m-7201.6909 7347.5977 L-7201.6909 7255.9082 L-7593.4521 7255.9082 L-7593.4521 7347.5977 Ln0 O0 0 0 1 k1 XR-7206.3535 7289.9209 m-7208.1113 7289.9209 -7327.7817 7292.0918 -7403.6519 7293.4717 C-7424.4663 7292.5352 -7445.2529 7291.2227 -7466.0547 7289.502 C-7468.5327 7289.1514 -7471.3472 7288.7949 -7472.8584 7288.6006 c-7473.7114 7288.4863 -7474.5732 7288.3857 -7475.4375 7288.293 C-7474.9829 7288.0605 -7474.54 7287.7998 -7474.1167 7287.4941 C-7473.25 7286.7324 -7472.3955 7285.832 -7471.8735 7284.4541 C-7471.8979 7284.1689 -7471.6997 7283.8193 -7471.6523 7283.5293 c-7471.5532 7282.9121 -7471.6382 7282.1631 -7471.7319 7281.627 c-7471.7939 7281.2725 -7471.9551 7281.0254 -7472.0259 7280.7314 c-7472.0488 7280.6348 -7471.9785 7280.5762 -7472.0059 7280.502 c-7472.1396 7280.1484 -7472.5313 7279.5518 -7472.7539 7279.2266 c-7472.8579 7279.0762 -7472.9873 7278.9775 -7473.1035 7278.8193 c-7473.1196 7278.7969 -7473.0669 7278.7354 -7473.0928 7278.7061 c-7473.6484 7278.0664 -7474.4312 7277.541 -7475.3955 7277.0762 c-7475.4546 7277.0508 -7475.4639 7277.1445 -7475.5366 7277.0869 C-7475.8213 7276.9658 -7476.1143 7276.8535 -7476.3945 7276.791 c-7477.8965 7276.4629 -7479.7163 7276.8477 -7480.8027 7277.6328 c-7481.7998 7278.3555 -7482.5308 7279.8623 -7482.4678 7281.0742 c-7482.4126 7282.1094 -7481.6665 7283.2578 -7480.4458 7284.0352 c-7479.3604 7284.7295 -7478.0479 7284.9834 -7477.2373 7284.3594 C-7477.6499 7284.2295 -7477.9688 7284.0332 -7478.0811 7283.7529 C-7478.0908 7283.4766 -7478.0967 7283.1992 -7477.8755 7282.8594 C-7477.4517 7282.4863 -7476.7925 7282.248 -7476.1235 7282.7158 c-7475.1846 7283.3701 -7475.0728 7284.7891 -7476.0342 7285.5361 C-7476.3086 7285.6406 -7476.5586 7285.8789 -7476.75 7285.9834 c-7477.1826 7286.2188 -7477.5586 7286.3857 -7477.9751 7286.543 c-7479.0938 7286.959 -7480.4839 7287.418 -7481.5327 7287.5977 c-7481.7114 7287.6289 -7481.8989 7287.6475 -7482.0806 7287.6738 C-7485.4038 7287.3789 -7488.54 7287.0693 -7491.1416 7286.5264 C-7491.1138 7286.5234 -7491.0908 7286.5244 -7491.0586 7286.5205 c-7490.2378 7286.4199 -7489.6309 7286.2529 -7488.9043 7286.0137 c-7488.6328 7285.9238 -7488.3184 7285.9121 -7488.0825 7285.8154 c-7487.9985 7285.7852 -7487.9409 7285.6602 -7487.8472 7285.6133 c-7487.5371 7285.4609 -7487.2129 7285.3662 -7486.8999 7285.1602 c-7485.9097 7284.5059 -7484.8774 7283.3359 -7484.7617 7281.8682 C-7484.9463 7280.8262 -7485.3643 7279.8525 -7486.5938 7279.0781 c-7486.7217 7278.9961 -7486.8662 7278.96 -7486.9995 7278.8828 C-7488.8516 7278.2168 -7490.5913 7279.3135 -7490.8066 7281.2061 C-7490.7119 7281.375 -7490.6499 7281.5527 -7490.6616 7281.752 C-7490.2939 7282.4492 -7488.9033 7283.0557 -7488.3057 7282.6143 C-7488.6133 7282.5566 -7488.7495 7282.5254 -7488.8638 7282.2637 C-7488.8892 7281.6074 -7488.0679 7281.4336 -7487.6528 7282.0176 C-7487.4966 7282.7021 -7487.7676 7283.2529 -7488.2939 7283.8105 c-7488.5068 7284.0361 -7488.7837 7284.1689 -7489.0566 7284.3545 c-7489.4199 7284.6016 -7489.7495 7284.8828 -7490.1118 7285.0332 c-7490.4385 7285.1689 -7490.8115 7285.2012 -7491.1445 7285.2891 c-7491.2349 7285.3105 -7491.2969 7285.3613 -7491.3706 7285.3789 c-7491.6274 7285.4336 -7491.8359 7285.5146 -7492.0879 7285.5469 c-7492.4209 7285.585 -7492.7739 7285.5488 -7493.1528 7285.585 c-7493.3398 7285.6055 -7493.5195 7285.6953 -7493.7144 7285.7109 c-7493.8413 7285.7207 -7493.9722 7285.7207 -7494.1025 7285.7227 C-7496.8135 7284.8213 -7499.0957 7283.6094 -7500.9814 7281.2793 c-7504.6704 7276.7227 -7499.0415 7272.5566 -7497.9902 7276.5977 C-7499.9668 7278.0361 -7503.5874 7281.1201 -7495.8892 7281.2471 C-7487.6045 7279.7549 -7494.6982 7264.4922 -7504.6509 7268.5576 c-7513.0151 7271.9746 -7509.1328 7280.6387 -7503.4658 7284.293 c-7494.9902 7289.7559 -7485.5376 7290.4922 -7475.7012 7290.584 C-7486.3862 7295.0488 -7500.9243 7292.4033 -7508.9897 7284.3809 c-7513.1011 7280.293 -7517.0435 7273.9912 -7515.8193 7267.8896 c-7514.5742 7261.6816 -7508.1616 7267.4238 -7513.0957 7267.4424 C-7512.8896 7273.0059 -7499.6387 7266.9648 -7505.9307 7258.8281 c-7511.6011 7251.4922 -7521.5698 7259.5225 -7523.3242 7265.9482 c-7529.0239 7286.8359 -7499.3545 7292.7129 -7485.3813 7293.4238 C-7497.1143 7296.7754 -7513.3892 7294.2734 -7524.5547 7289.7852 c-7528.9663 7288.0098 -7533.9707 7284.8926 -7536.5479 7280.7773 c-7540.4619 7274.5264 -7533.4268 7270.2842 -7532.8955 7272.4033 c-7532.4697 7274.0957 -7538.3765 7274.623 -7533.8267 7277.6992 c-7529.8091 7280.418 -7526.2759 7274.209 -7525.4619 7271.0781 c-7521.6782 7256.5322 -7543.0601 7258.4609 -7545.3667 7272.1982 c-7550.5103 7302.8271 -7504.3071 7296.457 -7488.4902 7295.5928 C-7488.7124 7295.7617 -7488.9331 7295.9189 -7489.1543 7296.082 C-7494.4346 7297.585 -7499.6416 7299.7861 -7504.46 7302.5469 C-7518.9546 7304.2813 -7531.7495 7293.8906 -7547.5913 7288.6152 c-7556.5635 7285.6289 -7567.0933 7289.9277 -7575.2778 7285.3145 c-7579.6235 7282.8545 -7582.6982 7280.2656 -7584.2959 7275.0518 C-7585.9092 7266.1104 -7576.2979 7264.9717 -7578.1396 7269.6416 C-7579.8428 7269.9688 -7579.1772 7268.834 -7580.3354 7268.8418 C-7584.2861 7272.5479 -7576.0244 7277.7314 -7572.1606 7274.4316 c-7565.4497 7268.7031 -7570.2563 7260.332 -7577.0864 7258.0557 C-7595.5703 7258.25 -7596 7280.8613 -7590.0474 7293.3594 c-7574.2217 7326.585 -7540.1445 7314.582 -7512.5376 7307.5479 C-7516.2817 7310.0732 -7518.8975 7313.6426 -7521.5747 7317.2158 c-7526.2197 7323.416 -7528.6694 7332.8545 -7520.0024 7336.8613 C-7519.1616 7340.9834 -7517.6392 7344.8857 -7513.5669 7346.7695 c-7508.7471 7349 -7503.8457 7346.5586 -7502.5508 7341.4512 C-7502.4766 7338.6729 -7503.1968 7336.8262 -7505.5938 7335.3887 c-7507.1733 7334.4414 -7512.5176 7334.5313 -7509.8574 7337.5342 C-7507.9663 7336.041 -7508.1323 7338.4873 -7509.0112 7339.6006 C-7511.8823 7339.5693 -7512.5771 7337.4873 -7512.5156 7334.5186 c-7512.5151 7334.4961 -7512.5142 7334.4697 -7512.5146 7334.4434 C-7512.3574 7327.1367 -7511.1343 7321.3242 -7509.0718 7316.7285 C-7509.0713 7316.7305 -7509.0708 7316.7314 -7509.0698 7316.7324 c-7508.8242 7317.2158 -7508.4819 7317.5 -7508.2485 7317.8945 c-7508.1729 7318.0234 -7508.2495 7318.1387 -7508.1753 7318.2334 c-7507.8262 7318.6855 -7506.9971 7319.3701 -7506.5313 7319.7402 c-7506.3135 7319.9121 -7506.0835 7319.998 -7505.8477 7320.1729 c-7505.8125 7320.1973 -7505.8613 7320.3105 -7505.8115 7320.3418 c-7504.7256 7321.0176 -7503.3638 7321.4277 -7501.7661 7321.6709 C-7501.6699 7321.6816 -7501.6978 7321.543 -7501.5669 7321.5938 C-7501.1035 7321.6406 -7500.6309 7321.6738 -7500.1982 7321.6387 c-7497.8862 7321.4453 -7495.4316 7320.084 -7494.2129 7318.4668 c-7493.0942 7316.9854 -7492.7095 7314.4854 -7493.3379 7312.7646 c-7493.8774 7311.2949 -7495.4629 7309.9697 -7497.5684 7309.3906 c-7499.4419 7308.873 -7501.4492 7309.084 -7502.3408 7310.3477 C-7501.6875 7310.3535 -7501.1406 7310.4941 -7500.8545 7310.8477 C-7500.7178 7311.2422 -7500.5859 7311.6387 -7500.7539 7312.2266 C-7501.2002 7312.9541 -7502.0469 7313.5898 -7503.2178 7313.2129 c-7504.4604 7312.8135 -7505.2119 7311.5781 -7505.0532 7310.3486 C-7499.7505 7304.2031 -7492.0386 7301.6465 -7483.2539 7301.0537 C-7483.2886 7301.0684 -7483.3218 7301.0801 -7483.3604 7301.0977 c-7484.5015 7301.6064 -7485.3027 7302.1143 -7486.2437 7302.7832 c-7486.5957 7303.0332 -7487.0439 7303.1914 -7487.3428 7303.4316 c-7487.4492 7303.5166 -7487.4766 7303.7227 -7487.5913 7303.8301 c-7487.9707 7304.1895 -7488.3975 7304.4688 -7488.7563 7304.9063 c-7489.8945 7306.2891 -7490.8662 7308.4346 -7490.3809 7310.6016 C-7489.6523 7312.0234 -7488.6162 7313.2441 -7486.4995 7313.8145 c-7486.2788 7313.875 -7486.0542 7313.8633 -7485.8276 7313.918 C-7482.8613 7314.0537 -7480.8369 7311.7021 -7481.3667 7308.875 C-7481.5781 7308.6738 -7481.7471 7308.4434 -7481.8184 7308.1514 C-7482.6582 7307.3105 -7484.9336 7307.0508 -7485.5996 7307.9521 C-7485.1309 7307.9004 -7484.9199 7307.8848 -7484.6387 7308.2109 C-7484.3105 7309.1475 -7485.4189 7309.7617 -7486.2759 7309.1045 C-7486.8052 7308.1865 -7486.6587 7307.2695 -7486.1479 7306.2314 c-7485.9409 7305.8105 -7485.5991 7305.5 -7485.2881 7305.1104 c-7484.8735 7304.5938 -7484.5239 7304.041 -7484.0669 7303.6621 c-7483.6563 7303.3232 -7483.1318 7303.1094 -7482.6899 7302.8369 c-7482.5708 7302.7646 -7482.5039 7302.6641 -7482.4043 7302.6074 c-7482.0596 7302.4121 -7481.7935 7302.2031 -7481.4438 7302.0469 c-7480.9819 7301.8418 -7480.4561 7301.7373 -7479.9253 7301.5146 c-7479.6636 7301.4063 -7479.4443 7301.1953 -7479.1709 7301.085 c-7479.0063 7301.0215 -7478.8311 7300.9688 -7478.6592 7300.9141 C-7477.2695 7300.918 -7475.8613 7300.957 -7474.4375 7301.0342 c-7472.7285 7301.0801 -7470.4653 7301.0938 -7468.5728 7301.166 C-7436.4688 7297.6533 -7403.98 7296.7305 -7371.4746 7296.2822 C-7298.0664 7297.6152 -7207.8774 7299.248 -7206.3535 7299.248 c-7203.7773 7299.248 -7201.6909 7297.1602 -7201.6909 7294.584 c-7201.6909 7292.0078 -7203.7773 7289.9209 -7206.3535 7289.9209 cfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -(ush Tool/ Decorative Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Chalk - Scribble)(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Stem)(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Decorative Border)(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -(157 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Super Soft Black Vignette)PcBb2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Green, Yellow, Orange)PcBb0 0 0 0 Bh2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Purple Radial)Pc(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Laguna)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au0 R0 G0 J 0 j 0.1 w 10 M []0 d0 XR88.7793 -499.9121 m7.29834 -683.5127 L133.9736 -557.8169 L88.7793 -499.9121 Ls18.5967 -477.3149 m7.29834 -683.5127 L88.7793 -499.9121 L18.5967 -477.3149 Ls133.9736 -557.8169 m7.29834 -683.5127 L162.2197 -576.1768 L133.9736 -557.8169 Ls328.8726 -704.6973 m369.8301 -934.9043 L371.2422 -766.8394 L328.8726 -704.6973 Ls7.29834 -683.5127 m369.8301 -934.9043 L328.8726 -704.6973 L7.29834 -683.5127 Ls186.2285 -593.125 m7.29834 -683.5127 L328.8726 -704.6973 L186.2285 -593.125 Ls878.2637 -1122.7422 m653.7051 -1220.1924 L881.0879 -1278.0977 L878.2637 -1122.7422 Ls279.4414 -617.1338 m146.6841 -372.8037 L220.125 -587.4756 L279.4414 -617.1338 Ls220.125 -587.4756 m146.6841 -372.8037 L162.2197 -576.1768 L220.125 -587.4756 Ls146.6841 -372.8037 m18.5967 -477.3149 L88.7793 -499.9121 L146.6841 -372.8037 Ls341.5835 -197.6768 m227.186 -259.8188 L279.4414 -617.1338 L341.5835 -197.6768 Ls133.9736 -557.8169 m146.6841 -372.8037 L88.7793 -499.9121 L133.9736 -557.8169 Ls162.2197 -576.1768 m146.6841 -372.8037 L133.9736 -557.8169 L162.2197 -576.1768 Ls227.186 -259.8188 m146.6841 -372.8037 L279.4414 -617.1338 L227.186 -259.8188 Ls443.27 -1231.4902 m636.7578 -1333.1777 L508.2363 -1196.1826 L443.27 -1231.4902 Ls453.1563 -1091.6719 m443.27 -1231.4902 L508.2363 -1196.1826 L453.1563 -1091.6719 Ls451.7441 -1049.3018 m436.2085 -1060.6006 L453.1563 -1091.6719 L451.7441 -1049.3018 Ls371.2422 -766.8394 m369.8301 -934.9043 L372.6543 -934.9043 L371.2422 -766.8394 Ls881.0879 -1124.1543 m878.2637 -1122.7422 L881.0879 -1278.0977 L881.0879 -1124.1543 Ls916.3945 -1252.6748 m881.0879 -1124.1543 L881.0879 -1278.0977 L916.3945 -1252.6748 Ls508.2363 -1196.1826 m636.7578 -1333.1777 L653.7051 -1220.1924 L508.2363 -1196.1826 Ls436.2085 -1060.6006 m443.27 -1231.4902 L453.1563 -1091.6719 L436.2085 -1060.6006 Ls508.2363 -1196.1826 m653.7051 -1220.1924 L453.1563 -1091.6719 L508.2363 -1196.1826 Ls372.6543 -934.9043 m436.2085 -1060.6006 L448.9189 -953.2646 L372.6543 -934.9043 Ls369.8301 -934.9043 m436.2085 -1060.6006 L372.6543 -934.9043 L369.8301 -934.9043 Ls453.1563 -1091.6719 m653.7051 -1220.1924 L451.7441 -1049.3018 L453.1563 -1091.6719 Ls653.7051 -1220.1924 m448.9189 -953.2646 L451.7441 -1049.3018 L653.7051 -1220.1924 Ls448.9189 -953.2646 m436.2085 -1060.6006 L451.7441 -1049.3018 L448.9189 -953.2646 Ls162.2197 -576.1768 m7.29834 -683.5127 L186.2285 -593.125 L162.2197 -576.1768 Ls597.2129 -196.2646 m341.5835 -197.6768 L279.4414 -617.1338 L597.2129 -196.2646 Ls220.125 -587.4756 m186.2285 -593.125 L279.4414 -617.1338 L220.125 -587.4756 Ls448.9189 -953.2646 m751.1543 -703.2852 L371.2422 -766.8394 L448.9189 -953.2646 Ls650.8809 -220.2739 m286.5034 -624.1953 L758.2168 -621.3711 L650.8809 -220.2739 Ls279.4414 -617.1338 m186.2285 -593.125 L286.5034 -624.1953 L279.4414 -617.1338 Ls372.6543 -934.9043 m448.9189 -953.2646 L371.2422 -766.8394 L372.6543 -934.9043 Ls186.2285 -593.125 m328.8726 -704.6973 L286.5034 -624.1953 L186.2285 -593.125 Ls299.2139 -8.42676 m227.186 -259.8188 L341.5835 -197.6768 L299.2139 -8.42676 Ls835.8926 -399.6377 m821.7695 -378.4531 L844.3672 -477.3149 L835.8926 -399.6377 Ls-4 -1638.2363 m74.6563 -1680.6064 L-2.58789 -1148.1641 L-4 -1638.2363 Ls1111.2949 -1501.2422 m1098.584 -1441.9258 L737.0313 -1667.8955 L1111.2949 -1501.2422 Ls1176.2607 -1326.1152 m984.1855 -1232.9033 L1098.584 -1441.9258 L1176.2607 -1326.1152 Ls286.5034 -624.1953 m328.8726 -704.6973 L758.2168 -621.3711 L286.5034 -624.1953 Ls896.623 -1.36523 m659.3535 -220.2739 L821.7695 -378.4531 L896.623 -1.36523 Ls162.2197 -576.1768 m186.2285 -593.125 L220.125 -587.4756 L162.2197 -576.1768 Ls821.7695 -378.4531 m659.3535 -220.2739 L650.8809 -220.2739 L821.7695 -378.4531 Ls758.2168 -621.3711 m821.7695 -378.4531 L650.8809 -220.2739 L758.2168 -621.3711 Ls844.3672 -477.3149 m821.7695 -378.4531 L828.832 -538.0444 L844.3672 -477.3149 Ls828.832 -538.0444 m821.7695 -378.4531 L758.2168 -621.3711 L828.832 -538.0444 Ls286.5034 -624.1953 m597.2129 -196.2646 L279.4414 -617.1338 L286.5034 -624.1953 Ls328.8726 -704.6973 m371.2422 -766.8394 L758.2168 -621.3711 L328.8726 -704.6973 Ls650.8809 -220.2739 m597.2129 -196.2646 L286.5034 -624.1953 L650.8809 -220.2739 Ls659.3535 -220.2739 m597.2129 -196.2646 L650.8809 -220.2739 L659.3535 -220.2739 Ls857.0781 -532.3955 m844.3672 -477.3149 L828.832 -538.0444 L857.0781 -532.3955 Ls752.5664 -699.0479 m809.0586 -595.9492 L758.2168 -621.3711 L752.5664 -699.0479 Ls371.2422 -766.8394 m751.1543 -703.2852 L758.2168 -621.3711 L371.2422 -766.8394 Ls751.1543 -703.2852 m752.5664 -699.0479 L758.2168 -621.3711 L751.1543 -703.2852 Ls809.0586 -595.9492 m857.0781 -532.3955 L828.832 -538.0444 L809.0586 -595.9492 Ls758.2168 -621.3711 m809.0586 -595.9492 L828.832 -538.0444 L758.2168 -621.3711 Ls821.7695 -378.4531 m1193.209 -259.8188 L896.623 -1.36523 L821.7695 -378.4531 Ls436.2085 -1060.6006 m-2.58789 -1148.1641 L443.27 -1231.4902 L436.2085 -1060.6006 Ls369.8301 -934.9043 m-2.58789 -1148.1641 L436.2085 -1060.6006 L369.8301 -934.9043 Ls-2.58789 -1148.1641 m74.6563 -1680.6064 L443.27 -1231.4902 L-2.58789 -1148.1641 Ls737.0313 -1667.8955 m74.6563 -1680.6064 L737.0313 -1672.1328 L737.0313 -1667.8955 Ls7.29834 -683.5127 m-2.58789 -1148.1641 L369.8301 -934.9043 L7.29834 -683.5127 Ls636.7578 -1333.1777 m74.6563 -1680.6064 L737.0313 -1667.8955 L636.7578 -1333.1777 Ls443.27 -1231.4902 m74.6563 -1680.6064 L636.7578 -1333.1777 L443.27 -1231.4902 Ls18.5967 -477.3149 m-4 -686.3374 L7.29834 -683.5127 L18.5967 -477.3149 Ls227.186 -259.8188 m4.47363 -7.01465 L146.6841 -372.8037 L227.186 -259.8188 Ls299.2139 -8.42676 m4.47363 -7.01465 L227.186 -259.8188 L299.2139 -8.42676 Ls-4 -686.3374 m-2.58789 -1148.1641 L7.29834 -683.5127 L-4 -686.3374 Ls146.6841 -372.8037 m4.47363 -7.01465 L18.5967 -477.3149 L146.6841 -372.8037 Ls74.6563 -1680.6064 m1167.7871 -1689.0801 L737.0313 -1672.1328 L74.6563 -1680.6064 Ls4.47363 -7.01465 m-4 -686.3374 L18.5967 -477.3149 L4.47363 -7.01465 Ls961.5898 -1146.752 m1187.5586 -908.0703 L914.9824 -1073.3105 L961.5898 -1146.752 Ls557.6675 4.28369 m4.47363 -7.01465 L299.2139 -8.42676 L557.6675 4.28369 Ls1187.5586 -1283.7461 m1187.5586 -908.0703 L961.5898 -1146.752 L1187.5586 -1283.7461 Ls984.1855 -1232.9033 m1187.5586 -1283.7461 L961.5898 -1146.752 L984.1855 -1232.9033 Ls914.9824 -1073.3105 m1187.5586 -908.0703 L772.3389 -792.2607 L914.9824 -1073.3105 Ls772.3389 -792.2607 m1187.5586 -908.0703 L1180.498 -725.8818 L772.3389 -792.2607 Ls1180.498 -725.8818 m1187.5586 -908.0703 L1193.209 -259.8188 L1180.498 -725.8818 Ls1111.2949 -1501.2422 m1186.1465 -1482.8828 L1098.584 -1441.9258 L1111.2949 -1501.2422 Ls1167.7871 -1689.0801 m1186.1465 -1482.8828 L1111.2949 -1501.2422 L1167.7871 -1689.0801 Ls737.0313 -1672.1328 m1167.7871 -1689.0801 L737.0313 -1667.8955 L737.0313 -1672.1328 Ls737.0313 -1667.8955 m1167.7871 -1689.0801 L1111.2949 -1501.2422 L737.0313 -1667.8955 Ls1186.1465 -1482.8828 m1187.5586 -1283.7461 L1176.2607 -1326.1152 L1186.1465 -1482.8828 Ls1176.2607 -1326.1152 m1187.5586 -1283.7461 L984.1855 -1232.9033 L1176.2607 -1326.1152 Ls1098.584 -1441.9258 m1186.1465 -1482.8828 L1176.2607 -1326.1152 L1098.584 -1441.9258 Ls914.9824 -1073.3105 m772.3389 -792.2607 L878.2637 -1122.7422 L914.9824 -1073.3105 Ls341.5835 -197.6768 m557.6675 4.28369 L299.2139 -8.42676 L341.5835 -197.6768 Ls881.0879 -1124.1543 m914.9824 -1073.3105 L878.2637 -1122.7422 L881.0879 -1124.1543 Ls448.9189 -953.2646 m772.3389 -792.2607 L751.1543 -703.2852 L448.9189 -953.2646 Ls916.3945 -1252.6748 m961.5898 -1146.752 L881.0879 -1124.1543 L916.3945 -1252.6748 Ls653.7051 -1220.1924 m772.3389 -792.2607 L448.9189 -953.2646 L653.7051 -1220.1924 Ls878.2637 -1122.7422 m772.3389 -792.2607 L653.7051 -1220.1924 L878.2637 -1122.7422 Ls881.0879 -1278.0977 m653.7051 -1220.1924 L753.9785 -1331.7656 L881.0879 -1278.0977 Ls984.1855 -1232.9033 m961.5898 -1146.752 L916.3945 -1252.6748 L984.1855 -1232.9033 Ls636.7578 -1333.1777 m737.0313 -1667.8955 L753.9785 -1331.7656 L636.7578 -1333.1777 Ls737.0313 -1667.8955 m1098.584 -1441.9258 L753.9785 -1331.7656 L737.0313 -1667.8955 Ls653.7051 -1220.1924 m636.7578 -1333.1777 L753.9785 -1331.7656 L653.7051 -1220.1924 Ls881.0879 -1278.0977 m1098.584 -1441.9258 L916.3945 -1252.6748 L881.0879 -1278.0977 Ls753.9785 -1331.7656 m1098.584 -1441.9258 L881.0879 -1278.0977 L753.9785 -1331.7656 Ls1098.584 -1441.9258 m984.1855 -1232.9033 L916.3945 -1252.6748 L1098.584 -1441.9258 Ls961.5898 -1146.752 m914.9824 -1073.3105 L881.0879 -1124.1543 L961.5898 -1146.752 Ls835.8926 -399.6377 m1193.209 -259.8188 L821.7695 -378.4531 L835.8926 -399.6377 Ls896.623 -1.36523 m557.6675 4.28369 L659.3535 -220.2739 L896.623 -1.36523 Ls1193.209 -259.8188 m1183.3223 5.69629 L896.623 -1.36523 L1193.209 -259.8188 Ls1183.3223 5.69629 m557.6675 4.28369 L896.623 -1.36523 L1183.3223 5.69629 Ls659.3535 -220.2739 m557.6675 4.28369 L597.2129 -196.2646 L659.3535 -220.2739 Ls597.2129 -196.2646 m557.6675 4.28369 L341.5835 -197.6768 L597.2129 -196.2646 Ls1180.498 -725.8818 m1193.209 -259.8188 L857.0781 -532.3955 L1180.498 -725.8818 Ls772.3389 -792.2607 m1180.498 -725.8818 L809.0586 -595.9492 L772.3389 -792.2607 Ls752.5664 -699.0479 m772.3389 -792.2607 L809.0586 -595.9492 L752.5664 -699.0479 Ls844.3672 -477.3149 m1193.209 -259.8188 L835.8926 -399.6377 L844.3672 -477.3149 Ls809.0586 -595.9492 m1180.498 -725.8818 L857.0781 -532.3955 L809.0586 -595.9492 Ls751.1543 -703.2852 m772.3389 -792.2607 L752.5664 -699.0479 L751.1543 -703.2852 Ls857.0781 -532.3955 m1193.209 -259.8188 L844.3672 -477.3149 L857.0781 -532.3955 LsULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF