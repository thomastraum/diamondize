%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.0.0%%For: (Thomas Eberwein) ()%%Title: (test-9-53-21.ai)%%CreationDate: 07/07/2011 10:05%%Canvassize: 16383%%BoundingBox: -516 -649 2160 2291%%HiResBoundingBox: -516 -648.3301 2159.5488 2291%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 822.5 821.5898 822.5 821.5898%AI3_TileBox: 542.5449 442.0449 1101.5449 1225.0449%AI3_DocumentPreview: None%AI5_ArtSize: 1644.0898 1644.0898%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -2989 3082 0.25 1908 1120 26 0 0 6 74 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 120 128 8%%BeginData: 19726 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD29FF7D7D7DA8A8A87DA87DFD05A87DA8A8A87EFD07A87DA8A8FF%A8FFA8FFAFFFFFFFA8FFFFFFA8FFFFFFA8FD48FFA8A87DFFFFFFA8FFA8A8%A8A9A8FFA8FFA8FFFD0CA87DA87DA87D7D7DA87D7D7DA87DA87DA87D7D7D%A87DFD06A8A9A8A8A8FD3AFFAFA9A8FFA8FD07FFA8FFA8FD1EFFA87DFFFF%FFA8AFA8FD05FFA8A87DA8FD39FFA8FF7D7DA8FFA8A8FD08FFA8FFA8FFA8%FFA8FFA8FD13FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFFD04A87DFD38FFA8FF%FFA87DFFFFFFA8FD0FFFA8FFA8FFA8FD17FFA8A8A8FFA8FFA8FD04FF84FD%37FF7DA8A8A87D7DA8FFA8FFA8A8FD12FFA8FFA8FFA8FD09FFA8FD09FFA8%FFA8A87DFFFFFFA8FF7DA8FD35FFA8FFFFFF7DFFA8A8FD05FFAFFD16FFA8%FFA8FFA8FFFFFFA8FFFFFFA8FD04FFA8A8FFA8FFA8A8A8FFA8FFFFA8A8FD%34FFA8FD04FFA87DFFA8A8A8FFFFFFA8A8A8FD17FFA8FFA8A87EFFA8FFA8%FFA8FFA8A87DFD04A8FFA8FF7EA8FFFF7DA8FD33FFA8A8A8FFFFFFA8A8A8%FFA8FD06FFA8FD16FFA8FFA8FFA8FFFFFFA8A8A8FFFFFFA8FD08FFA9A8FF%FFA8A8FD32FFA8A8FFFFA8FFA87D7DA8A8FFA8A8FD05FFA8A8FD0FFFA8FF%A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD05FFA8FFA9A884FFFFFFA8A8%A8FD31FFA8A8FD05FF7DFFFFFFA8FF7DFD06FFA8A8FD0BFFA8FFA8FD09FF%A8FFAFFFA8FFA8A87EFFA8A8A8FFA8A87DFFFFFFA8FFFFA87DFD31FFA8A8%FFFFFFA87D7DA8A8FFA8FFA8A87DFFA8FFA8FFFFA8A8FD05FFA8FFA8FFA8%FD05FFA8FFFFFFA8A87DA8A8FFA8FFA8A8A8FFA8FFA8A8A8AFA8A87DFFA8%FFFFFFA87DA8FD30FFA8FD04FFA8A8FFA8FD05FFA8AFA8FFA8FFFD05A8FF%A8FFA8FFA8FFFFFFA8FFA8FFA8FFAFFF7DFFA8FD05FFA8FD0EFFA8A8FFA8%FF7DFFAFFD2EFFA8FD05FF7DFFFFFFA8FFA8A8A8FFFD05A8FFA9FFA8A87D%A8A8FFFFFFA8FD09FFA8A8A8FFFFFFA8FFFFFFA8FD0BFFA8FF7EA8A8FFFF%A87DFFA9FD2CFFA8FFA8FFFFFFA8FFFFFFA8FFA8A8A8FD05FFAFFFA8FD04%FFA8A8FD0DFFA8FFA8FFFFFFA8FFFFFFA8FD0BFFA8FFFFA8FD04FF8484FD%2DFFA8A8A8FFFFFFA8FFA8FFFFFF7D7DA8FD07FFA8FFFFFFA8FFA8A8A8FF%A8FD07FFA8A8A8FFFFA8A8FFA8FFFFFFA8FD07FFA8FD07FF7DFFFFFFA8A8%7DFFA8FD2BFFA9FD04FFA8FFA8FD04FFA9A8AFA8FD07FFA8FD05FFA8A8A8%FFA8FD05FFA8FFFFFFA8FF7EFD05FFA8FD0DFFA8FFA8FFA9FFA8FFA8A8A8%FD2BFFA8A8FFA8FFA8A8FFA8A8FFFFA8A8FFA8FFA8FFA8FFA8FFFFFFA8FD%04FFFD04A8FFA8A8A8A97DA8A8FFA8A8A8FD05FFA8FD0BFFA8FFFFFFA8FF%A8FD04FFA87DA8A8FD2AFFA8FFA8FFFFA8FFFFA8FFFFFFA8FFFFFFA8FD05%FFA8FFFFFFA8FFFFFFFD05A8FFA87D84FFFFFFA8FFFFFFA8FFFFFFA8FD0D%FFA8FFA8FFFFAFA8FFFFFFA8A8A8FFA8FD28FFA8FFA8FFFFA8A8FFA8A8FF%FFA8FD05FFA8FD05FFA8FFA8FFA8FFFFA8A8FFA8FFA8FFA8A8FFFFA8FD04%FFA8FFFFA8FD0FFFA8A8A8FFA8FFA8FFFFA87DFFA8FFA8FD26FFA8FD05FF%A8FFFFFFA8FFA8FFA8FD0DFFA8FFA8FFA8FFFFA87EFFFFFFA8FFA8FD05FF%A8FD13FF7DFFFFFFA8FD04FFA8FFFFA8FD26FFA8A9FFFFA8FFA8FFFFFFA8%FFFFFFA8FD07FFA8FD09FFA87D7DFF7DA8A8A9A8A8A8FFA8FFA8FFFFFFA8%FD07FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8FD04FF7DFFA8A8A8FD24FF%A8FFFFFFA8FFA8FD04FFA8FD04FFA9FD11FFA8A8A9A8A8FFA8A87DFFA8FF%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD09FFA8FFA8A8A8FD04FFA8A8FFA8%FD24FFAFA8A8FFA8FFA8A8FD04FFA8FFA8FFA8FD07FFA8FD09FFA8FFFD05%A8FFA8FFA8A8A8FFFFFFA8A8A8FFA8FFA8FD0DFFA8FFAFFFA8A8FD04FF7D%FFFFA8A8FD24FFA8FFFFFFA8FD06FFAFA8FD0BFFA8FD09FFA8FFA8AF7DA8%FD06FFA8FFA8FD13FFA8FFAFFFFFFFA8A8FFFFFFA8A8FFA8FD24FFA8FFFF%FFA8A8A8FD04FFAFA8FFFFFFA8FD09FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8%A8FFA8FFFFFFA8AFFD06FFA8FD0DFFA8FFFFFFA8FFFFFF7DA8FFFFA8A8FF%FFA8FD22FFA8FFFFFFA8A8A8FD05FFA8AFFFFFA8FD0BFFA8FFFFFFA8FFFF%A9A8FFFFA87DFD05FFA8FD1DFFA8FFA8A8A8FFA8FFFFAFA8FD20FFA8FD04%FFA8A8FD06FFA8A8FFFFA8FD0CFFA8FFFFFFA8FFA8FFFD07A8FFA8FFA8FF%A8FD05FFAFAFFD0CFFA8FFFFFFA8FFA8A8FFFFFD04A8FFFFA8A8A8FD1EFF%A8FD05FF84FD07FF84FFFFFFA8FD11FF7DA8A8FD05FFA8A8FFFFA8FD15FF%A8FD07FFA8FFFFFFA8A8A8FFFFFFA8FD1EFFA8A8FD04FFA8A8A8FFA8FFA8%FFA8A8FFFFA8FD0DFFA8FD04FFA87DA8A8FFFFFFA8FFA8FFA8A8FD0AFFA8%FD09FFA8FD05FFA8FFA8FD05FF7DA8A8FFFFA8A8FD1DFFA9A8FFFFFFA8A8%FFFFA8FFFFFFA8FFA8FD11FFA8FD05FFA8A87EA8A9FFA8FFFF7DA8FD0BFF%A8FD11FFA8FFFFFFA8A87EFFFFFFA8A8FD1CFFAFA8FFFFFFA8A8A8FFFFFF%A8FFA8FFFFFFA8FFA8FD0FFFA8FFA8FD05FFFD04A87DA884FFA8FFA8FFA8%FD07FFA8FD07FFA8FD05FFA8A8A8FFFFFFA8A8A884A8FFFFFFA8FD1CFFA8%FD05FF7DFFA8FFA8FFA8A8A8FFFFFFA8FD07FFA8FFA8FFA8FFA8A8A8FFA8%FFA8FFA8FFA8FFFFFFA8A8FFFFA8FD05FFA8FD07FFA8FD05FFA8FD07FFA8%FFFFFFA8A8A8FFA8A8FD04FFA8FD1AFFA8FFFFFFA8FF7DA8A8FFFFFFAFFF%FD05A87DA8FFFD07A8FFA8A8A8FFA8FFA8FFA8FFA8FFFFFFA8FFA87D7DFF%A8FD07FFA8FFA8FD05FFA8FFFFFFA8FD08FFA8A8FFA8A8A8FFFFFF7DFFFF%FFA8A8A8FD18FFA8FD05FFA8FFFFFFA8FFFFFFA8FD05FF7DA9A8FD0FFFA8%FD08FFA87DA8FFFFA8FD09FFA8FFA8FFFFFFA8FD0BFF7DA8FFA8A8FD04FF%A8FD04FFA8FD18FFA8FFFFFFA8FFA8A8A8FFFFFFA8FFA8FFFFFFA8FF7DFF%FFFFA8FFA8FFA8FD0BFFA8FD05FFA8A87DFFA8FFA8FD0DFFA8A9A8FFA8FF%A8FFA8FFA8FFA8FF7DA8A8A87DA87EA87DA852FD04FFA8A8FD16FFA8FFFF%FFA8FFFFFFA8FD06FFA8A8FFA8A8FD0AFFA8FD0FFFA8FFA8FFFFFFA8FD11%FFA8A87EFFA8FFA8FFFFFFA8FFFFFFFD05A8FFFFA8A8FFFFFFA8A8FD16FF%A8A8FFA8FFFFFFA8FD05FFA8A8A8FFA8FFA8A87DFFFFFFAFFD07FFA8FFA8%FD05FFA8FFFFFFA8FFA8A8A8FFA8A8A8FD0DFFA8FFA8FFA8A8FD06FFA8FF%AFFFA8FFA8FFFFFFAFFF7E7EA8FFFFFF7DFD16FFA8FFA8FFFFFFA8FD05FF%A8FFA8FD05FFA87DA8A8A8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA9FF%A8FFA8FD05FFA8A8FD0AFFA8FFA8FD0BFFA8FD07FFA8FFFFFFA9FF7DFD04%FFAFA8FD14FFA8A8A8FFFFFFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8A8FF%A8FFA8A8A8FFA8FFA8FFA8FFA8FFFD04A884A8A8FFA8A8A8FFFFFFA8A87E%FD05FFA8FFA8AFA8FD07FFA8FD05FFA8FFA8FD07FFA8FFFFFFA8A8A8FFFF%FFA8A8A8FD12FFA8A8A8FFFFFFA8FFA8FD0DFFA8FD07FFAFFFA8FD0BFFA8%FFFFAFFD06FFA8A8FFFFA8FFA8FD11FFA8FD0FFFA8A8A8FFFFFFA8FD12FF%A8A87EFFA8A8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFFFFFA8FD%05FFA8FFA8FFA8FD07FFA8A8A8FFA8FFA8A87DA87DA8A8FFA8FD0DFFA8FF%FFA8A8FD0BFFA8FFFFFFA8FF7DFFA8FFFFA8A8FD10FFA8FFA8FFA8FFA8FF%FFFFA8FD07FFA8FFFFFFA8FFFFAFFD0EFFA8FFA8FFFFFFAFFFA8FF7DA8A8%FFFFFFA8A8A8FFA8FFA8FFA8FD0BFFA8A8A8FD0DFFA8FFFFFFA8A8FD05FF%A8FD0FFFA8A8A8FFA87EA8FFA8A87DFFFFFFA8FD05FFA8FFA8FFA8FFA8FD%05FFA8FD09FFA8FFA8FFA8A8A8FF7DA8A8FFA8FFA8A87DA8FD06FFA8FFA8%FFA8FD05FFA8A8A8FD0FFFA8FFFD04A8FFAFFFFF7EA8FD0EFFA9FD04FFA8%FFFFFFA8FFFFFFAFFD05FFA8FFA8FFA8FD09FFA8FD0DFFA8FFA8A8A8FD05%FFA8A87DFFA8FFA8FFA8FFFFFFA8FFFD04A87DA8FD12FFA8FFA8FFA8FFA8%FFFFFFA8FD0DFFA8FFFFA8FD05FFA8FFA8A8FD06FFA8FFFFFFA8FFFFFFA8%FD07FFA8FD0BFFA8FF7DFFA8A8A8FFFFA8A8A87DFFA8FFA8FFFFFFA8FFFF%FFA8FFA8A87DA8FFFFA8FFA8FFA8FD0DFFA9A8FFA8FFFFA8FFA9A8AFFD0B%FFA8A8FFA8FFFFFFA8FFFFFFA8A8A8FD07FFA8FD05FFA8FD09FFA8FD09FF%A8FFA8A8A8FFA9A8A8FFA8FFA87EFD0AFFAFFFA8FD09FFA9FFA8FFA8FD0B%FFA8FFA8FFFFFFA8FFA8FD0CFF7DA87DA8FD04FFA8FFA8FFA8FFA8FFA8FF%FFFFA8A8A8FFA8FFFFA8A8FD09FFA8FD07FFA8FFA8A8A8FFA8FF7D7DA8A8%7EFFFD05A8FFFFFFA8FFA8FD05FF7DFFA8FD07FFA8FFA8FFA8FFA8FFA8FD%04FFA8A8FFA8FFFFA9FFA8A8FD0AFFA8A8A8FFA8FFA8FFFFFFA8FFA8FD05%FFA8FFFFFFA8FD05FFA8FD0BFFA8FD09FFA8FFA8FFA8FFA8FFA8A8FD04FF%A8A8A8FFA8FFA8FFA8FFA8A87DA8A8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFFFA8FFFFAFFFFFA8FD0AFFA8A8FFA8A8A8FFA8A87DFF%A8FD07FFA8A87DFD06FFA8A8FD0BFFA8FD04FFA8A8FFFFA8A8FFA8A8FFFF%7D7D7DFFFFFFA8FFA87DA8FFA8A8A8FFA8A87DA8FFFFA8FFA8A8A8FFA8FD%05FFA8FFFFFFA8FFFD05A8FFA8FFFFFFA8FFA8A8FD09FFA8FFFFFFA8FFFF%FFA8FD07FFA8FFA8FD05FFA8FFFFFFA8FD0DFFA8FFFFFFAFFFFFFFFD04A8%7D7D7DA8A87E84FFA8FFFFFFA8A8A8FFFFFFA8FFAFA9A8FD07FFA8FFA8FD%0FFFA8FFA8FFFFFFA8FFA8FD08FFA8A8A8FFA8A8A8FFA8FF7EA8A8FFA8FF%A8FFA8FFFFFFA8FFA8FD04FFA8A8FD0DFFA8A8A8FFA8A9A8A87D7D7DA8A8%FFA8FFA8A8A8FFFFFFA8A8A8FFA8FFA8A8A8FFA8FD0BFFA8FFA8FFA8FFA8%FD07FFA8FFA8A8FD04FFA8A8FD09FFA8FFFFFFA8FFA8FFA8A8A8FFA8FFFF%FFAFFD05FFA8FD05FFA8FD0FFF7EFFFFFFA8FFFFA8A8FFA8FD05FFA8FFFF%FFA8FFA8A8A8FD05FFA8FD11FFA8FFA8FD07FFA8FF7DFD05FFA8FD08FFA8%A8FFFFA8AF7DFD07FFA8FFFFFFA8FFA8FFA8A8A8FD04FFA8A8FD09FFA8FF%A8FFA8FFA8A8A8FFFFFFA8A8A8AFA8FFFFFFA8FFA8FFFD05A8FFA8FFFFFF%A8FD17FFA8FFA8FFFFFFA8FF7DFFFFFFA8A8A8FD07FFA8A8FFA8FFA8FFFF%FFA8FD0DFFA8FD05FFA8FD09FFA8FD07FFA8FD05FFA8FFA8A8FFFFA8A9FF%FFFD05A8FFA8FFFFFFA9A8FD1CFFFD04A87DFFFFFFA8A8FD07FF7DFFA8A8%A8FFA8FFA8FD0BFFA8FFFFFFA8FFA8FFFFA8A8FD05FFA8FFA8FD05FFA8FF%A8FFA8FFA8FFFFFFA8FFA8A8FFFFA8FFFFA8A8FF7DA8A8FFFFFFA8A8FD1A%FFFD04A87DA8FFA8A8A8FFFF7DFD06FFA8A8FFFFA8FD0FFFA8FD07FFA8FF%A8FD05FFA8FD07FFA8FD0AFFAFA8FFA8A8FD07FFA8A8FD1DFFA8A8A8FD05%FFA8FFA8FFA8AFFFA8A8FD05FFA8A8FFA8A8FD04FFA8FD07FFA8FD07FFA8%FFFFFFA8A8A8AFA8FFA9FFA8FFFD04A87DA8FD08FFA8FFFFA8FFFFA8A87D%FFFFFFA8A9A8FD05FFA8FD13FFFD05A8FD08FFA8A8FFA8FFFD04A8FD05FF%A8A8FFA9FFFFA8FFA8FD07FFA8FD09FFA8FFFFFFA8A8A8FFA8AFA8FFA8FF%FFFFA8FFFFFFA8FD07FFA8FFA8FFFFFFA87D7DFD04A8FD05FFA8FD11FFA8%A9A8FFA8FD0BFFA8FFFFA8FD04FF7DFD04FFFD05A8FFFFFFA8FD05FFA8A9%A8FD0AFFAFA8FFFFFFA8A8A8FFA8FD05FFA8FFA8FFA8FD09FFA8FFA8FFFF%A8A8A87DA87DFFA8FFFFFFA8FD0DFFFD05A8FFA8FD0FFFA8FFA8FD04FFA8%7DFD04FFA8FFA8FFFFFFA8FD05FFA8FD11FFA8FD09FFA8FFFFFFA8FD0CFF%A8A8FFA8FFFFFFA8A8A8FFA8FFA8FD0BFFA8FFA8A9A8FD15FFA8FD05FFA8%FD04FFA8FFA8A8A8FFFFA8A8FFFFFFA8FD0FFFA8FFA8A8FFFFA8A8A8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8A87DA8A8FFFFFFA8A8A8%FFFFA8FD06FFFD05A8FFA8FD18FFA8A8AFFFFFFFA8A8FFFFA8FFA8FFFFA8%A8FFA8FFA8FD13FFA8AFFD06FFA8FFA8FFFFFFA87DA8A8A8FFA8FFAFFFA8%FFA8FFA8FFA8A8A8FFA8FFFFFFA8A8A8FD05FFA8A8A8A9A8FD1DFFA8A8A8%FFFFFFA8FFFFFFA8A8FD05FFA884A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD%05FFA8A8A8FFA8FFA8A8A87D7DFFA8FFA8A87DA8A8FFA8FFA8FFA8FFA8FD%05FFA8FFFFFFA8FFA8FFA8A8A8FFFD05A8FD21FF7DA8FFFFA8FFAFFFFFA8%FD06FFA8A8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFF7DFFA8A9%A8FFFFFF7DA8FFFFA8FFA8A8FD08FFAFFFA8FFA8FF7DA8A8FFA8FFA8A8FF%FF7DA8A8FFA8FD25FFA8FFA8FFA8FFFFA8A8FFFFA8FFA8FFA8FFFFFFA8FD%0FFFA8FFA8A8FD07FFA87DFF7DFFA8A8A8FFA8FD0BFFA87DFFFFA8FFFFFF%A8FFA8A8A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FD%0FFFA8A8FD06FFA8A8FFA8FFFFFFA8FD05FFA8FD11FFA8FD07FFFD04A8FF%A9A8FFFFFFA8FD0AFFA8A8FD05FFA9FFFFAFFFFFA8FD11FFAFFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FD07FF7EA8FFFFA8FFFF7DA8A8FFFFFFA8A8FD06FF%A8FD0FFFA8FFA8FFA8FD04FFA87DFD06A8FFFFAFA8FD07FFA8FFA8A8A8FD%07FFA8FFFFFFA8FD17FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DFFA8FF%FFFFA8A8FD1BFFA8FFFFA8A8FD05FFA8A8A8FF7DFFA8FD0DFFAFFFA8FFA8%FFFFFFA8FFA8FD05FFA8FD25FF7DA8FFFFA8FFFF7DFFA8FFA8FFA8FD0BFF%A8FD0DFF7DA8A8FFA8FFFFA87DA8A8AFA8A8FD04FFA8FFFFFFA8FFFFFFA8%FFA9A8FFFFA8FFFFFFA8FFA8FD05FFA8FD23FFA8A87DFFA8FFFFFFA8A8FF%FFFFA8FFA8FD0BFFA8FD0BFFA8FFA8FFA8AFA8A87D7DA8FFA884A8FD05FF%A8FFAFFD07FFA8FD05FFA8FD09FFA8FD21FFA8FFA8A8A8FD04FF7DA8A8FF%FFFFA8FFA8FFA8FFA8FD07FFA8FD07FFA8FFA8FFA8FFA8FFFFFF7D7EA8FF%FD0AA87DFD05FFA8FFA8A8FFFFA8FFA8A8A8FFA8FD07FFA8FD1FFFA8A8FF%FD04A8FFFFFFA9A8FFA8FD09FFA8FFA8FD0DFFAFFD08FFA8A8FD07FFA8FF%FFFFA8A8FD04FFA8FFFFFFA8FD05FFA8FFAFFD09FFA8FD1EFFA8FFFFA8FF%A8FD04FFA8A8FFFFA8FFA8FD09FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFA8FFA8A87DA8A8FFFFFFA8FFA8FD05FFA8A8FFFFA8FFFFFFA8A8FD04%FF84FFFFFFA8FD09FFA8FD1CFFA8A8FFFFA8FFA884FFFFFFA8A8FFFFFFA8%FFA8FD0DFFA8FFA8FFA8FFA8FD07FFA8FD05FFA8FFFFFFA8FD05FFA8FFA8%FD07FFA8FFFFFFA8A8FFFFA8FD0BFFA8FD1BFFA8FFFFFFA8FD06FFA8A8A8%FFFFFFA8FFA8FD0DFFA8FFA8A87DA8A8AFA8A9A8FF7DA8A8FFA8A8FFFFA8%FFFFA8A8FFA8FFA8FFFFA87DA8A8FFFFFFA8A8FFFFA8AF7DFFFFA8FD0BFF%A8A8FD19FFA8FD04FFA8A8FFA8FD04FFA8FD18FFA8A8FFFFFFA8FFA8FFFF%FFA8A87DA9A8FFA8A87DFFFFFFA8FFFFA8A8FFA8A8A8FFFFFFA8FD04FFA8%FFFFA8FD0DFFA8FD17FFA8FD05FFA8FFA8FD04FFA8A8A8FD05FFA8FD0BFF%A8FFA8FFFFFFA8FFFFFFA8FFA8A8FFFFA8FFFFFFA8FFFD05A8FFA8A87DFD%04A8FFFFAFA8FFA8A8FD04FF7DFFA8FD0FFFA8FD15FFA8FD05FFA8A8A8FD%06FFA8FFA8FD05FFA8FD09FFA8FD05FFAFA9A8FFFFFFA8A8A8FFA8FFFFFF%A8FF7DA8A8FFA8FFA8FFFFFFA9FFA8A8A8FFA8FFA8A8FD05FFA8A8FD11FF%A8FD13FFA8FD07FFA8FD06FFA8A8FFFFA8FFFFFFA8A8FD04FFA8FFA8FFA8%FFA8FFA8FFFD05A8FFA87D7DFFA8FFA8FFFFFFA8FFFFFF7DFD04A8FFA8FF%A8FFA8A8A8FFA8A87DFFA8FFFFFFA8A8A8FD10FFA9A8FD11FFA8A8FD06FF%A8A8A8FD06FFA8FFA8FD05FFA8FFA8FFA8FFA8FFAFFFA8FD09FFA8FFA8FD%07FFA8FD05FFA8FD09FFA8A8A8FD05FFA8FFFFA8A8FD13FFA8FD10FFA9FD%08FFA8FD07FFA8FFFFA8FD05FF7DA8A8FFA8FD0BFFA8FFFFFD04A8FD05FF%A8FFA8FFFFFFA8A8FD0AFFA8FFA8A8A8FFA8FFA8FFA8A8A8FD12FFA8A8FD%0EFFA8A8FD07FFA8A8FD07FFA8FD08FFA8FD04FFA8FFA8FD09FFA8FFA8FF%A8FD05FFA8FFA8FD05FFA8FD09FFA8FFFFFFA8A8A8FFFFFFA8FFA8A8FD14%FFA8FD0DFFA8FD08FFA8A8FD07FFA8A8FFA8FD05FFA8FD07FFA8FFA8FFA8%FFA8FFA8A8FFFFA8A8A8FFA8A8A8FFA8FD06FFA8A8FD07FFA8FFFFFFA8FF%A8A8A8FFA8A87DA8A8FFA8FD12FFA8A8FD0BFFA8FD07FFA8A87DFD08FFA8%FFFFFFA8FFFFFFAFFD0FFFA8A8A8FFA8FFA8FFA8FD0BFFA8FD0FFFA8FFFF%FFFD05A8FFA8FD13FFA8FD09FFA8FD07FFA8FFA8FD09FFA8A8FD07FFA8FD%0FFF7DFFFD04A87DFD0DFFA8FD07FFA8FD05FFA8A8FFFFA8FFA8FFA8AFA8%FFFFFFA8FFA8FFA8FD0CFFA8A8FD07FFA8FD05FFA8FFA8FFA8FD0AFFA8FF%FFFFA8FFFFFFA8FFA8FD0BFFA8FFFFFFA8FFFFFF7DA8FD0CFFA8FFA8FD05%FFA8FD07FF7DFFFFFFA8FFA8FFFFFFA8FD05FFA8FFA8FD0DFFA8FD05FFA8%FD05FFA8FFFFFFA8FD0BFFA8A8FFFFFFA8FFA8FFFFA8FD0AFFA8FFFFFFA8%FF7EFFA8FFA8A8FD0CFFA8FD05FFA8FD07FFA87E7DFFFFA8AFFFFFFFA8FF%A8FD07FFA8FFA8FFA8FFA8FD06FFA8A8FFFFFFA8A8FFFFA8A9A8FFFFFFA8%FFA8FD0AFFA8FD07FFA8FFA8FD09FFA8FD06FFA8A9FD0FFFA8FFA8FD0BFF%A8FFFFFFA8A8A8FFA8FFFFFFA8FD0FFFA8FFAFFD05FFA8FFFFA8FFFFA8FD%05FFA8FFAFFD0CFFA8FFFFFFA8FFA8FFFFFFA8FD05FFA9AFA8FD05FFA8FF%A8FFFFFFA8FFA8AFA8FD0BFFA8FFFFFFA8FD05FFA8A8FFFFFFA87DFD07FF%A8FFFFFFA8FD0BFFA8FFA8FFA8FFFFFD04A8FFA8FD05FFA8FFA8FD0CFFA8%FD07FFA9FD07FFA8FD09FFA8FFA8FFFFA8FFFFA8FFA8FD07FFA8FD0BFFA8%FFFFFFA8FFA8A8A8FFA8FD09FFA8FD11FFA9A87DFFA8FD05FFA8FD10FFA8%FFFFFFA8FFA8FFFFFFA8FFFFFFA8FD09FFA8FFFFFFA8FFA8FFFFFFA8FFA8%FD07FFA8FFA8FD05FFA8FFA8FFA8FFFFFFFD05A8FD05FFA8FD05FFA8FD11%FF7DFFFFFFA8FFA8A87DFFFFFFA8FD0DFFA9FD04FFA8FD11FFA8FD0BFFA8%FFA8FD05FFA8FD05FFA9FD05FFA8FD04FFA8A8FFA8FD07FFA8FD15FFA8A8%FD06FFA8FFFFFFA8FD0EFFA8FD05FFA8FFA8FFA8A8A8FFFFFFA8FD06FFA8%A8FD05FFA8FD05FFA8FFA8FD05FFA8FFA8FFA8FFA8FFFFFFA8FD05FF7DFF%A8FF7DFD07FFA8FD07FFA8FD0BFFA8A8A8FD04FFA8A8A8FFFFA8FD10FFA8%FD04FFA8A8FFFD05A8FFA8FFA8FFA8FFA8FF7EFD05FFA8FFA8FD07FFA8FD%07FFA8FFA8FFFFFFA8FD05FFA8A8FFFFFFA8A8FD07FFA8FD07FFA8FD0BFF%A8FFA8FFFFFFA8FFA8FD12FFA8FD05FF7DFFFFFFA8FFA8FFA8FFA8FFA8FF%FFFFA8A8A8FFA8FFFFFFA8A8FD05FFAFA8FFA8FFFFFFA8FFFFA8A8FFFFFF%A8FFA8FFA8FFFD04A87DFFA8A8A8FD06FFAFA8FD07FFA8FD09FFA8FFA8FF%FFA8A8FFA8FFFFFFA8FD10FFA8FFFFFFA8A8FFFFA8FFFFFFA8FD05FFA9FF%AFFD07FFA8FFA8FD0FFFA8A8A8FFA8FFA8FD05FFA8FD05FFA8FFA8FD0FFF%AFFD07FFA8FD05FFA8FFA8FFFFFFA8FD10FFA8FD05FF7DFFFFAFFD04FFA8%FD05FFA8A8A8FFA8FD05FFA87DA8A8A8FD08FFA8A8FFA8A87D847DFD04A8%FD04FFA8A8FFFFFFA8FFA8FFA8FFA8FFFFFFA8FD09FFA8FFA8FFFFFFA8FF%A8FFA8A8A8FFFFA8FFFFA8FD12FFA8FFFFFFA8A8FFFFA8FD05FFA8FFFFFF%A8FFA8FFA8FFA8FFFFFFFD06A87DFD04A8FFFFFFFD05A8FD07FFA8FFA8A8%7DFD07FFA8FFFFFFA8FFFFFFA8FD0BFFA8FFFFFFA8FFA8A87DFFFFFFA8FD%14FFA8A8A8FFA8FFA8FFA8FD07FF7DA8A8FFA8FFFFFFA8A8FFFFA8A8A8FF%A8FFA8FFA8FFA87E52FFFFFFA8FFA8FFA8FFA8FD05FFA8A87DA8A8FFAFFF%FFFFA8FFA8FFFFFFA8FFFFFFA8FD0BFFFD05A8FFA8A8FFFFA8FD16FFA8FF%FFFFA8A8FD08FFA8A8FFFFA8A8A8FFA8FFFD04A8FD04FFA8FD05FFA8A8A8%FFAFFFA8FFFFFFA8FFFFFFA9A8A8FFFFFFA8FFFFFFA8FFFFFFA8FD13FFA8%A8A8FD04FFA8A8FFFFA8FFFFA9FD12FFA8FFFFFFA8FFA8FFA8FFFFFFA8FF%FFFFA8FFFFFFA8A8A8FFFFFFA8A8A8FFA8FFA8FFA8FFFFFFFD04A8FFFFA8%FFFFFFA8A8A8FFA8A8A8FD04FFA9A8FFFFFFA8FFA8A8A8FFA8FFA8FFFFFF%A8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FD14FFA8FFFFFFA8FF%A8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFFD04A87EFD05FF7EFD04A8FFA8FF%A8FFA8FFFFFFA8FFA8FFA8A9FD07FFA8FD06FFA8A8A8FFA8FFA8FFA8FFA8%FFFFFFA8FD05FFA8A8A8FFFFFFA8AFFFFFA8FD16FFA8AFA8FFA8FFA8A8A8%FFA8FFFFFFA8FFFFFFA8FFA8A87DFD06A8FFA8FFFD05A8FFA8A8FFFFA8A8%A8FFA8FFA8847EFD09FFA8A8FD06FFA8A8FD04FFA8FFFFA87DA8A8FFA8FF%A8FFA8A8A8FFFFFFA8FFA8FFA8A8FD1DFFA8FD09FFA8FFFFFFA8FFFFFFA8%FFA8A8A8FFFFFFA8FF7DFFA8A9AFFFFFA87DA8A8FFFFFF7DFD0BFFA8FD07%FFA8FFA8FD05FFA8FFFFFFA8FD05FF7DFFFFFFA8FFA8FFFFA8FD17FFA8FF%A8FFA8FFA8A8A8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FD04FFA8A8FFA8A87E%FD05A87DFFA8A87DA8FD04FFA8A8A8FFA8FD08FFA8A8FD05FFA8A9A8FD05%FFA8FFA8FFFFFFA8FFFFFFA8A8FFFFA8FFFFA8A8FFA8FFA8FD16FFA8FD04%FFA8FD04FFA8FFA8A8A8FFFFFFA8FFFFFFA8FFFFFFFD04A87DFFFFFFA8FF%FF7DA8FFFFFFA8FD05FFA8A8A9FD09FFA8FD06FFA8FFFFA8FFFFFFA8FD07%FFA8FFFFA8A8FD05FFA8FFA8FD18FFA8A9A8FFA8FF7EFFA8FFFD04A87DA8%A8FFA8A87EFFA8A8FFFFFFA87DFFA8FFA8FFFFA8A8A87DFFFFFFA8AFFD04%FFA8FFA8A8FFFFA8FD07FFA8FD05FF7DFFA8A8A8FFA8FFFFFFA8FD05FFA8%A87DA9FFFFA8FFA8A8FFA8A8FD18FFA8FFA8FFFFA8A8FD09FFA8FFA8FFA8%FFA8FFFFFFA8FFA8FD05FFA8FFFFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FD07FFA8FFFFFFA8FFFFFFA8A8FD0AFFA8FFFFA8A8FFA9FFFFFFAFFFA8%FD18FFA8FFA8A8A8FFA8FD05FFA8FD07FFFD04A87DFFFFFFA8A8A8FFA8AF%7DA8FFFFA8FD04FFAFFD04FFA8FFFFA8A8FFFFFFA8FD05FFA8FFA8FFFFFF%A8FFFFA87DA8A8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FD%18FFA8FFA8FD11FF84A8FFFFA8FFA9AFA8FFA8FFA8FFA8FFA8A8FFFFA8FF%A8FFFFFFA9FFA8FFFFA8FD04FFA8FD07FFA9FFA8A8FFFFA8FFFFFFFD05A8%A9A8FFFFFFA8FFA8FD04FFA8A8FFAFFD18FFA8FFA8A8A8FFA8FD0BFFA8FF%A8FFA8FFA8FFA8FF7EA8A8FFFFFFA8FFFFA8A8FFA8FD05FFA8FFA8FFFFFF%A8FD05FFA8FFFFFFA8FFFFA9FFFFA8FFA8FFA8FFA8FFFD05A8FFA8FFA8A8%7DA8FD04FFA8A8A8FD1AFFA8FFA8FFFFFFA8FD09FFA8FD05FFA8FD05FFA8%FFFFFFA8FFA9FFA8FD05FFA8FD05FFA8FFFFFFA8FD05FFA9FFFFFFA8FFA8%FFA8FFA8FFAFA8A8FFFFFFA8FFFFFFA8FD04FFA8A8FFFFFFA8AFA8FD1CFF%A8A8A8FD05FFA8FFFFFFA8FFFFFFA8FD05FFA8AFFFFFA8FFA8FFA8FFFFFF%A8A8A8FFA8FD05FFA8FFA8FD04FFA8A8FD05FFA8FFFFFFA8FFA8FFA8A8A8%FFA8FFFFFFA8FD05FFA8A8A8FF7DA8FFFFFFAFA8A8A8FD1CFFA8FFA8FFA8%FD05FFA8FD0BFFA8FD05FFA8FD04FFA8A8FFA8FFFFFFA8FFA9FFFFFFA9FF%FFFFA8FD0DFFA8A8A8FFA8FFA8FFFFFFAFFFFFFFA8FFA8FFFFA97DFFFFFF%A8A8A8FD1CFFA8A8A8FFA8A8A8FFA8FFA8FFFFFFA8FD07FFA8A8A8FFA8FF%A8A8A8FFA8A87DFFA8FD04FFA8FD04FFA8FD05FFA8FD07FFA8AFA8FFA8A8%A8FFFD05A8FFA8FFA8AFA8FFA8FD04FFA87DFFAFA87DFD1EFFA8FFFFFFA8%A8A8FD11FFA8FFFFFFA8FFFFFFA8FFA8A8FD04FFA8FFA9FFFFFFAFFD05FF%A8FD08FFA8A8FFA8A8FD06FFA8A8A8FD05FFA8FD04FFA8FFFF7DFD1EFFA8%FFA8FFFFFF7DFD11FFA8A8A8FFFFFFA8A87DA8A8A87DFD05FFA8FFFFFFA8%FD05FFA8A8FD07FFA87DFD04A8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FF%FFFFA8A8A87DFD1DFFA8FD05FFA8FFA8FD11FFA8FFA8FFFFA884FD05FFA8%FFFFFFA8FD0BFFA8FD05FFA8A8A8FFA8FFFFFFA8FFA8FD07FFA8FFA8A8A8%FD05FF7D7DA8FD1EFFA8FFA8FFA8FFA8A8A8FFFFFFA8FD07FFA8FFA8FFA8%FFA8FFFFFFA8FFA8FFFFFFA8FFFFFFA8A8A8FFFFFFA8FD07FFA8FFFD05A8%FFA8A8FFFFFFFD04A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8A8A87D52FD22FF%A8FFFFFFA8FFFFFFA8FD05FFA8FFA8FD05FFA8FFFFFFA8FD07FFA8FFFFFF%A8FD0BFFFD05A87DA8FFA8A8A8FFFFFFAFA87DA8A8FFA8FFA8FFFFFFA8FF%A8A87DA884A8A8FD20FF7DFD04A8FFA8FFA8FFA8FFA8FFA8FFA8FD09FFA8%FFA8FD05FFA8FFFFA8FFFFFFA87DA884A8A8FFA8FFA8FFA8FFA8A8A8FFFF%A8FFFF7DFFA8FFA8A8A8FFA8FFA8FFFD07A8FFA8FD26FFFD04A87D84A8A8%527D7DA8A8FD0CFFA8FD0AFFA8FFFFFFA9A8A8A97EA8A8FFFFFFA8A8A8FF%A8A8A8FFA8FFA8FFA8FFA8FFFFFFA8FFA8A8A8FFA8FD34FFA8A87DA8FD07%7DFD04A8FFA8FFA8A8FD09FFA8A8FFA8FFA8FFFFFFA8FFA8A87DFD04A8FF%A8A87D7E7DFD06A8FFA8A8A8FD42FFFD04A87DFD04A8AF84FD0DFFA8FFFF%FFA8FFFFA8A8FFAFFFA8FFFD05A8FFA8FD4EFFA8FFFD04A87DA8A8A87DA8%A8FD05FFA8FFA8FFFFFFA8FFA8A9FD04FFA8A87DFD04A8FFFFFFAFFD54FF%A8FFFD04A87DA8A8FFA8A87DFFFFFFA8A8AFFD06A8FFA8FD62FFA8FFA8A8%7DA87D7DFD04A87EA87DA8A8FD42FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au*u1 D0 R0 G0 J 0 j 2.83465 w 10 M []0 d0 XR-317.2334 815.3672 m-388.0996 670.8008 l-305.8945 821.0371 l-317.2334 815.3672 ls-402.2729 -295.8154 m-419.2808 -508.4141 l-351.249 -488.5713 l-402.2729 -295.8154 ls1961.8252 1084.6592 m2004.3457 1030.8008 l2154.582 917.415 l1961.8252 1084.6592 ls1845.6045 1487.1797 m1961.8252 1084.6592 l2154.582 917.415 l1845.6045 1487.1797 ls-368.2568 1215.0532 m-436.2886 917.415 l-354.084 1189.5415 l-368.2568 1215.0532 ls-509.9893 727.4932 m-419.2808 -508.4141 l-402.2729 -295.8154 l-509.9893 727.4932 ls-354.084 1189.5415 m-305.8945 1084.6592 l-288.8867 1155.5254 l-354.084 1189.5415 ls-13.9258 -185.2637 m-155.6582 -173.9248 l22.9248 -230.6182 l-13.9258 -185.2637 ls-436.2886 917.415 m-509.9893 727.4932 l-402.2729 889.0684 l-436.2886 917.415 ls2061.0381 738.832 m2109.2275 585.7607 l2154.582 917.415 l2061.0381 738.832 ls-509.9893 727.4932 m-436.2886 917.415 l-368.2568 1215.0532 l-509.9893 727.4932 ls-308.7295 1198.0454 m-354.084 1189.5415 l-288.8867 1155.5254 l-308.7295 1198.0454 ls-368.2568 1215.0532 m-354.084 1189.5415 l-308.7295 1198.0454 l-368.2568 1215.0532 ls-277.5479 -448.8867 m-351.249 -488.5713 l-263.375 -522.5879 l-277.5479 -448.8867 ls-280.3828 -392.1934 m-351.249 -488.5713 l-277.5479 -448.8867 l-280.3828 -392.1934 ls-288.8867 1155.5254 m-305.8945 1084.6592 l-277.5479 1070.4863 l-288.8867 1155.5254 ls-155.6582 -173.9248 m-280.3828 -392.1934 l22.9248 -230.6182 l-155.6582 -173.9248 ls-509.9893 727.4932 m-402.2729 -295.8154 l-328.5718 112.374 l-509.9893 727.4932 ls-402.2729 -295.8154 m-331.4063 -193.7676 l-328.5718 112.374 l-402.2729 -295.8154 ls-402.2729 889.0684 m-509.9893 727.4932 l-317.2334 815.3672 l-402.2729 889.0684 ls-509.9893 727.4932 m-388.0996 670.8008 l-317.2334 815.3672 l-509.9893 727.4932 ls-260.54 1331.2739 m-308.7295 1198.0454 l-218.0205 1300.0928 l-260.54 1331.2739 ls-277.5479 -448.8867 m-263.375 -522.5879 l-212.3516 -522.5879 l-277.5479 -448.8867 ls-328.5718 112.374 m-331.4063 -193.7676 l-300.2256 -128.5703 l-328.5718 112.374 ls-402.2729 889.0684 m-317.2334 815.3672 l-305.8945 821.0371 l-402.2729 889.0684 ls-509.9893 727.4932 m-328.5718 112.374 l-280.3828 424.1855 l-509.9893 727.4932 ls-436.2886 917.415 m-402.2729 889.0684 l-305.8945 1084.6592 l-436.2886 917.415 ls-354.084 1189.5415 m-436.2886 917.415 l-305.8945 1084.6592 l-354.084 1189.5415 ls-388.0996 670.8008 m-509.9893 727.4932 l-280.3828 424.1855 l-388.0996 670.8008 ls-368.2568 1215.0532 m-308.7295 1198.0454 l-260.54 1331.2739 l-368.2568 1215.0532 ls68.2793 472.375 m-280.3828 424.1855 l90.9565 344.8154 l68.2793 472.375 ls-218.0205 1300.0928 m-135.8154 1223.5571 l-107.4692 1288.7544 l-218.0205 1300.0928 ls-101.7998 4.6582 m-2.58691 -15.1846 l28.5942 58.5156 l-101.7998 4.6582 ls-402.2729 -295.8154 m-351.249 -488.5713 l-280.3828 -392.1934 l-402.2729 -295.8154 ls-331.4063 -193.7676 m-402.2729 -295.8154 l-280.3828 -392.1934 l-331.4063 -193.7676 ls-402.2729 889.0684 m-305.8945 821.0371 l-277.5479 1070.4863 l-402.2729 889.0684 ls-305.8945 1084.6592 m-402.2729 889.0684 l-277.5479 1070.4863 l-305.8945 1084.6592 ls130.6416 -448.8867 m-212.3516 -522.5879 l193.0039 -570.7764 l130.6416 -448.8867 ls-351.249 -488.5713 m-419.2808 -508.4141 l-263.375 -522.5879 l-351.249 -488.5713 ls-331.4063 -193.7676 m-280.3828 -392.1934 l-155.6582 -173.9248 l-331.4063 -193.7676 ls402.7681 2227.0234 m428.2798 2173.165 l428.2798 2283.7163 l402.7681 2227.0234 ls-328.5718 112.374 m-300.2256 -128.5703 l-235.0283 132.2168 l-328.5718 112.374 ls-280.3828 424.1855 m-328.5718 112.374 l-235.0283 132.2168 l-280.3828 424.1855 ls-280.3828 -392.1934 m-277.5479 -448.8867 l-212.3516 -522.5879 l-280.3828 -392.1934 ls99.4604 478.0439 m201.5078 466.7051 l204.3423 543.2412 l99.4604 478.0439 ls42.7676 1623.2427 m8.75146 1541.0381 l56.9404 1617.5737 l42.7676 1623.2427 ls-288.8867 1155.5254 m-277.5479 1070.4863 l-195.3433 1144.187 l-288.8867 1155.5254 ls-218.0205 1300.0928 m-308.7295 1198.0454 l-195.3433 1144.187 l-218.0205 1300.0928 ls-300.2256 -128.5703 m-331.4063 -193.7676 l-155.6582 -173.9248 l-300.2256 -128.5703 ls-308.7295 1198.0454 m-288.8867 1155.5254 l-195.3433 1144.187 l-308.7295 1198.0454 ls-277.5479 1070.4863 m-305.8945 821.0371 l-192.5088 1090.3286 l-277.5479 1070.4863 ls-195.3433 1144.187 m-277.5479 1070.4863 l-192.5088 1090.3286 l-195.3433 1144.187 ls-141.4849 1334.1084 m-218.0205 1300.0928 l-107.4692 1288.7544 l-141.4849 1334.1084 ls-101.7998 4.6582 m-155.6582 -173.9248 l-70.6187 -114.3975 l-101.7998 4.6582 ls-260.54 1331.2739 m-218.0205 1300.0928 l-141.4849 1334.1084 l-260.54 1331.2739 ls-70.6187 -114.3975 m-155.6582 -173.9248 l-13.9258 -185.2637 l-70.6187 -114.3975 ls-218.0205 1300.0928 m-195.3433 1144.187 l-135.8154 1223.5571 l-218.0205 1300.0928 ls-101.7998 4.6582 m-70.6187 -114.3975 l-2.58691 -15.1846 l-101.7998 4.6582 ls-280.3828 -392.1934 m-212.3516 -522.5879 l22.9248 -230.6182 l-280.3828 -392.1934 ls156.1533 -122.9014 m170.3267 -171.0908 l184.5 -117.2324 l156.1533 -122.9014 ls-235.0283 132.2168 m-300.2256 -128.5703 l-101.7998 4.6582 l-235.0283 132.2168 ls-300.2256 -128.5703 m-155.6582 -173.9248 l-101.7998 4.6582 l-300.2256 -128.5703 ls-195.3433 1144.187 m-192.5088 1090.3286 l-79.123 1232.061 l-195.3433 1144.187 ls-135.8154 1223.5571 m-195.3433 1144.187 l-79.123 1232.061 l-135.8154 1223.5571 ls-107.4692 1288.7544 m-135.8154 1223.5571 l-79.123 1232.061 l-107.4692 1288.7544 ls201.5078 316.4688 m130.6416 262.6113 l244.0273 52.8467 l201.5078 316.4688 ls-141.4849 1334.1084 m-107.4692 1288.7544 l8.75146 1541.0381 l-141.4849 1334.1084 ls-13.9258 -185.2637 m22.9248 -230.6182 l59.7754 -222.1143 l-13.9258 -185.2637 ls-235.0283 132.2168 m-101.7998 4.6582 l28.5942 58.5156 l-235.0283 132.2168 ls-260.54 1331.2739 m-141.4849 1334.1084 l8.75146 1541.0381 l-260.54 1331.2739 ls297.8857 2161.8262 m402.7681 2227.0234 l428.2798 2283.7163 l297.8857 2161.8262 ls54.106 -77.5469 m31.4287 -80.3818 l59.7754 -222.1143 l54.106 -77.5469 ls31.4287 -80.3818 m-13.9258 -185.2637 l59.7754 -222.1143 l31.4287 -80.3818 ls-260.54 1331.2739 m8.75146 1541.0381 l42.7676 1623.2427 l-260.54 1331.2739 ls133.4761 -63.374 m88.1216 -69.043 l156.1533 -122.9014 l133.4761 -63.374 ls90.9565 344.8154 m62.6099 115.209 l130.6416 262.6113 l90.9565 344.8154 ls-2.58691 -15.1846 m-70.6187 -114.3975 l31.4287 -80.3818 l-2.58691 -15.1846 ls-70.6187 -114.3975 m-13.9258 -185.2637 l31.4287 -80.3818 l-70.6187 -114.3975 ls363.083 2156.1572 m297.8857 2161.8262 l382.9253 2065.4482 l363.083 2156.1572 ls116.4683 1059.1475 m249.6968 948.5962 l255.3662 1416.3135 l116.4683 1059.1475 ls371.5869 534.7373 m422.6104 483.7139 l513.3193 526.2334 l371.5869 534.7373 ls-192.5088 1090.3286 m-305.8945 821.0371 l116.4683 1059.1475 l-192.5088 1090.3286 ls-2.58691 -15.1846 m31.4287 -80.3818 l54.106 -77.5469 l-2.58691 -15.1846 ls-260.54 1331.2739 m42.7676 1623.2427 l258.2007 2105.1333 l-260.54 1331.2739 ls-79.123 1232.061 m-192.5088 1090.3286 l85.2871 1149.8564 l-79.123 1232.061 ls-235.0283 132.2168 m28.5942 58.5156 l62.6099 115.209 l-235.0283 132.2168 ls-280.3828 424.1855 m-235.0283 132.2168 l90.9565 344.8154 l-280.3828 424.1855 ls85.2871 1149.8564 m-192.5088 1090.3286 l116.4683 1059.1475 l85.2871 1149.8564 ls-235.0283 132.2168 m62.6099 115.209 l90.9565 344.8154 l-235.0283 132.2168 ls8.75146 1541.0381 m-107.4692 1288.7544 l130.6416 1455.9985 l8.75146 1541.0381 ls116.4683 1059.1475 m-305.8945 821.0371 l190.1689 806.8633 l116.4683 1059.1475 ls62.6099 115.209 m28.5942 58.5156 l122.1377 -20.8545 l62.6099 115.209 ls-2.58691 -15.1846 m54.106 -77.5469 l88.1216 -69.043 l-2.58691 -15.1846 ls-305.8945 821.0371 m96.626 551.7451 l190.1689 806.8633 l-305.8945 821.0371 ls-305.8945 821.0371 m-388.0996 670.8008 l96.626 551.7451 l-305.8945 821.0371 ls-388.0996 670.8008 m-280.3828 424.1855 l96.626 551.7451 l-388.0996 670.8008 ls363.083 2156.1572 m382.9253 2139.1489 l402.7681 2173.165 l363.083 2156.1572 ls96.626 551.7451 m68.2793 472.375 l99.4604 478.0439 l96.626 551.7451 ls-280.3828 424.1855 m68.2793 472.375 l96.626 551.7451 l-280.3828 424.1855 ls68.2793 472.375 m90.9565 344.8154 l99.4604 478.0439 l68.2793 472.375 ls59.7754 -222.1143 m153.3188 -202.2715 l156.1533 -122.9014 l59.7754 -222.1143 ls-79.123 1232.061 m85.2871 1149.8564 l130.6416 1455.9985 l-79.123 1232.061 ls-2.58691 -15.1846 m88.1216 -69.043 l122.1377 -20.8545 l-2.58691 -15.1846 ls28.5942 58.5156 m-2.58691 -15.1846 l122.1377 -20.8545 l28.5942 58.5156 ls8.75146 1541.0381 m130.6416 1455.9985 l158.9883 1543.8726 l8.75146 1541.0381 ls56.9404 1617.5737 m8.75146 1541.0381 l158.9883 1543.8726 l56.9404 1617.5737 ls22.9248 -230.6182 m-212.3516 -522.5879 l130.6416 -448.8867 l22.9248 -230.6182 ls133.4761 -63.374 m144.8145 -60.5391 l150.4839 -26.5234 l133.4761 -63.374 ls122.1377 -20.8545 m88.1216 -69.043 l133.4761 -63.374 l122.1377 -20.8545 ls144.8145 -60.5391 m133.4761 -63.374 l156.1533 -122.9014 l144.8145 -60.5391 ls-107.4692 1288.7544 m-79.123 1232.061 l130.6416 1455.9985 l-107.4692 1288.7544 ls122.1377 -20.8545 m133.4761 -63.374 l150.4839 -26.5234 l122.1377 -20.8545 ls22.9248 -230.6182 m130.6416 -448.8867 l153.3188 -420.54 l22.9248 -230.6182 ls96.626 551.7451 m204.3423 543.2412 l218.5156 704.8164 l96.626 551.7451 ls90.9565 344.8154 m130.6416 262.6113 l147.6494 341.9814 l90.9565 344.8154 ls184.5 -117.2324 m170.3267 -171.0908 l241.1929 -139.9092 l184.5 -117.2324 ls241.1929 -139.9092 m170.3267 -171.0908 l249.6968 -156.917 l241.1929 -139.9092 ls170.3267 -171.0908 m201.5078 -222.1143 l249.6968 -156.917 l170.3267 -171.0908 ls59.7754 -222.1143 m22.9248 -230.6182 l153.3188 -420.54 l59.7754 -222.1143 ls54.106 -77.5469 m59.7754 -222.1143 l156.1533 -122.9014 l54.106 -77.5469 ls88.1216 -69.043 m54.106 -77.5469 l156.1533 -122.9014 l88.1216 -69.043 ls59.7754 -222.1143 m153.3188 -420.54 l181.665 -267.4688 l59.7754 -222.1143 ls153.3188 -202.2715 m59.7754 -222.1143 l181.665 -267.4688 l153.3188 -202.2715 ls56.9404 1617.5737 m158.9883 1543.8726 l229.8545 1617.5737 l56.9404 1617.5737 ls320.563 -222.1143 m224.1851 -369.5156 l357.4136 -366.6816 l320.563 -222.1143 ls85.2871 1149.8564 m116.4683 1059.1475 l255.3662 1416.3135 l85.2871 1149.8564 ls99.4604 478.0439 m90.9565 344.8154 l164.6572 441.1934 l99.4604 478.0439 ls90.9565 344.8154 m147.6494 341.9814 l164.6572 441.1934 l90.9565 344.8154 ls153.3188 -202.2715 m181.665 -267.4688 l201.5078 -222.1143 l153.3188 -202.2715 ls156.1533 -122.9014 m153.3188 -202.2715 l170.3267 -171.0908 l156.1533 -122.9014 ls150.4839 -26.5234 m144.8145 -60.5391 l184.5 -117.2324 l150.4839 -26.5234 ls144.8145 -60.5391 m156.1533 -122.9014 l184.5 -117.2324 l144.8145 -60.5391 ls314.8936 -77.5469 m241.1929 -139.9092 l331.9019 -103.0586 l314.8936 -77.5469 ls445.2876 13.1611 m397.0986 -134.2402 l504.8154 -120.0674 l445.2876 13.1611 ls399.9331 -403.5322 m272.374 -420.54 l456.626 -638.8076 l399.9331 -403.5322 ls-212.3516 -522.5879 m-263.375 -522.5879 l193.0039 -570.7764 l-212.3516 -522.5879 ls153.3188 -420.54 m130.6416 -448.8867 l193.0039 -570.7764 l153.3188 -420.54 ls170.3267 -171.0908 m153.3188 -202.2715 l201.5078 -222.1143 l170.3267 -171.0908 ls300.7207 -57.7041 m241.1929 -139.9092 l314.8936 -77.5469 l300.7207 -57.7041 ls147.6494 341.9814 m130.6416 262.6113 l201.5078 316.4688 l147.6494 341.9814 ls181.665 -267.4688 m153.3188 -420.54 l224.1851 -369.5156 l181.665 -267.4688 ls164.6572 441.1934 m147.6494 341.9814 l201.5078 316.4688 l164.6572 441.1934 ls96.626 551.7451 m99.4604 478.0439 l204.3423 543.2412 l96.626 551.7451 ls99.4604 478.0439 m164.6572 441.1934 l201.5078 466.7051 l99.4604 478.0439 ls164.6572 441.1934 m201.5078 316.4688 l201.5078 466.7051 l164.6572 441.1934 ls190.1689 806.8633 m96.626 551.7451 l218.5156 704.8164 l190.1689 806.8633 ls158.9883 1543.8726 m130.6416 1455.9985 l221.3506 1450.3291 l158.9883 1543.8726 ls116.4683 1059.1475 m190.1689 806.8633 l249.6968 948.5962 l116.4683 1059.1475 ls272.374 928.7539 m190.1689 806.8633 l391.4292 829.541 l272.374 928.7539 ls130.6416 262.6113 m62.6099 115.209 l244.0273 52.8467 l130.6416 262.6113 ls930.0127 948.5962 m1032.0605 894.7383 l1034.8945 923.084 l930.0127 948.5962 ls249.6968 948.5962 m190.1689 806.8633 l272.374 928.7539 l249.6968 948.5962 ls204.3423 543.2412 m201.5078 466.7051 l272.374 560.249 l204.3423 543.2412 ls158.9883 1543.8726 m280.8779 1504.1875 l289.3818 1526.8647 l158.9883 1543.8726 ls-368.2568 1215.0532 m-260.54 1331.2739 l258.2007 2105.1333 l-368.2568 1215.0532 ls2004.3457 1030.8008 m2061.0381 738.832 l2154.582 917.415 l2004.3457 1030.8008 ls62.6099 115.209 m122.1377 -20.8545 l244.0273 52.8467 l62.6099 115.209 ls122.1377 -20.8545 m150.4839 -26.5234 l244.0273 52.8467 l122.1377 -20.8545 ls249.6968 -156.917 m201.5078 -222.1143 l320.563 -222.1143 l249.6968 -156.917 ls221.3506 1450.3291 m130.6416 1455.9985 l255.3662 1416.3135 l221.3506 1450.3291 ls130.6416 1455.9985 m85.2871 1149.8564 l255.3662 1416.3135 l130.6416 1455.9985 ls244.0273 52.8467 m150.4839 -26.5234 l263.8701 33.0039 l244.0273 52.8467 ls1780.4082 2008.7554 m1845.6045 1487.1797 l2154.582 917.415 l1780.4082 2008.7554 ls320.563 -222.1143 m357.4136 -366.6816 l402.7681 -156.917 l320.563 -222.1143 ls224.1851 -369.5156 m153.3188 -420.54 l272.374 -420.54 l224.1851 -369.5156 ls272.374 -420.54 m193.0039 -570.7764 l456.626 -638.8076 l272.374 -420.54 ls153.3188 -420.54 m193.0039 -570.7764 l272.374 -420.54 l153.3188 -420.54 ls397.0986 -134.2402 m402.7681 -156.917 l504.8154 -120.0674 l397.0986 -134.2402 ls218.5156 704.8164 m204.3423 543.2412 l272.374 560.249 l218.5156 704.8164 ls382.9253 2139.1489 m382.9253 2065.4482 l411.272 2079.6216 l382.9253 2139.1489 ls224.1851 -369.5156 m272.374 -420.54 l357.4136 -366.6816 l224.1851 -369.5156 ls181.665 -267.4688 m224.1851 -369.5156 l320.563 -222.1143 l181.665 -267.4688 ls221.3506 1450.3291 m255.3662 1416.3135 l280.8779 1504.1875 l221.3506 1450.3291 ls229.8545 1617.5737 m158.9883 1543.8726 l289.3818 1526.8647 l229.8545 1617.5737 ls158.9883 1543.8726 m221.3506 1450.3291 l280.8779 1504.1875 l158.9883 1543.8726 ls297.8857 2161.8262 m258.2007 2105.1333 l382.9253 2065.4482 l297.8857 2161.8262 ls382.9253 2139.1489 m363.083 2156.1572 l382.9253 2065.4482 l382.9253 2139.1489 ls263.8701 33.0039 m150.4839 -26.5234 l300.7207 -57.7041 l263.8701 33.0039 ls184.5 -117.2324 m241.1929 -139.9092 l300.7207 -57.7041 l184.5 -117.2324 ls150.4839 -26.5234 m184.5 -117.2324 l300.7207 -57.7041 l150.4839 -26.5234 ls56.9404 1617.5737 m229.8545 1617.5737 l326.2324 2025.7632 l56.9404 1617.5737 ls201.5078 -222.1143 m181.665 -267.4688 l320.563 -222.1143 l201.5078 -222.1143 ls42.7676 1623.2427 m56.9404 1617.5737 l326.2324 2025.7632 l42.7676 1623.2427 ls326.2324 2025.7632 m371.5869 2020.0938 l382.9253 2065.4482 l326.2324 2025.7632 ls258.2007 2105.1333 m42.7676 1623.2427 l326.2324 2025.7632 l258.2007 2105.1333 ls241.1929 -139.9092 m249.6968 -156.917 l331.9019 -103.0586 l241.1929 -139.9092 ls263.8701 33.0039 m360.248 -66.209 l445.2876 13.1611 l263.8701 33.0039 ls300.7207 -57.7041 m314.8936 -77.5469 l360.248 -66.209 l300.7207 -57.7041 ls363.083 2156.1572 m402.7681 2173.165 l402.7681 2227.0234 l363.083 2156.1572 ls218.5156 704.8164 m272.374 560.249 l331.9019 602.7686 l218.5156 704.8164 ls249.6968 -156.917 m320.563 -222.1143 l331.9019 -103.0586 l249.6968 -156.917 ls442.4531 792.6904 m391.4292 667.9658 l459.4609 707.6514 l442.4531 792.6904 ls391.4292 829.541 m368.752 659.4619 l391.4292 667.9658 l391.4292 829.541 ls258.2007 2105.1333 m326.2324 2025.7632 l382.9253 2065.4482 l258.2007 2105.1333 ls263.8701 33.0039 m300.7207 -57.7041 l360.248 -66.209 l263.8701 33.0039 ls314.8936 -77.5469 m331.9019 -103.0586 l360.248 -66.209 l314.8936 -77.5469 ls331.9019 602.7686 m363.083 611.2725 l368.752 659.4619 l331.9019 602.7686 ls218.5156 704.8164 m331.9019 602.7686 l368.752 659.4619 l218.5156 704.8164 ls297.8857 2161.8262 m363.083 2156.1572 l402.7681 2227.0234 l297.8857 2161.8262 ls459.4609 707.6514 m499.146 667.9658 l538.8311 855.0527 l459.4609 707.6514 ls*U*u382.9253 2065.4482 m371.5869 2020.0938 l411.272 2079.6216 l382.9253 2065.4482 ls272.374 560.249 m201.5078 466.7051 l371.5869 534.7373 l272.374 560.249 ls331.9019 602.7686 m272.374 560.249 l371.5869 534.7373 l331.9019 602.7686 ls363.083 611.2725 m331.9019 602.7686 l371.5869 534.7373 l363.083 611.2725 ls-263.375 -522.5879 m-419.2808 -508.4141 l456.626 -638.8076 l-263.375 -522.5879 ls218.5156 704.8164 m368.752 659.4619 l391.4292 829.541 l218.5156 704.8164 ls190.1689 806.8633 m218.5156 704.8164 l391.4292 829.541 l190.1689 806.8633 ls357.4136 -366.6816 m272.374 -420.54 l399.9331 -403.5322 l357.4136 -366.6816 ls326.2324 2025.7632 m229.8545 1617.5737 l405.6025 1937.8892 l326.2324 2025.7632 ls442.4531 792.6904 m459.4609 707.6514 l538.8311 855.0527 l442.4531 792.6904 ls428.2798 2173.165 m408.4375 2175.9995 l431.1143 2141.9839 l428.2798 2173.165 ls986.7061 1336.9434 m969.6982 1288.7544 l992.375 1285.9194 l986.7061 1336.9434 ls368.752 659.4619 m363.083 611.2725 l391.4292 667.9658 l368.752 659.4619 ls371.5869 2020.0938 m326.2324 2025.7632 l405.6025 1937.8892 l371.5869 2020.0938 ls397.0986 -134.2402 m331.9019 -103.0586 l402.7681 -156.917 l397.0986 -134.2402 ls360.248 -66.209 m331.9019 -103.0586 l397.0986 -134.2402 l360.248 -66.209 ls331.9019 -103.0586 m320.563 -222.1143 l402.7681 -156.917 l331.9019 -103.0586 ls604.0283 84.0283 m578.5161 30.1699 l612.5322 55.6816 l604.0283 84.0283 ls402.7681 2227.0234 m402.7681 2173.165 l408.4375 2175.9995 l402.7681 2227.0234 ls229.8545 1617.5737 m289.3818 1526.8647 l405.6025 1937.8892 l229.8545 1617.5737 ls408.4375 2175.9995 m402.7681 2173.165 l431.1143 2141.9839 l408.4375 2175.9995 ls357.4136 -366.6816 m399.9331 -403.5322 l402.7681 -156.917 l357.4136 -366.6816 ls402.7681 2173.165 m382.9253 2139.1489 l431.1143 2141.9839 l402.7681 2173.165 ls193.0039 -570.7764 m-263.375 -522.5879 l456.626 -638.8076 l193.0039 -570.7764 ls391.4292 829.541 m391.4292 667.9658 l442.4531 792.6904 l391.4292 829.541 ls382.9253 2139.1489 m411.272 2079.6216 l431.1143 2141.9839 l382.9253 2139.1489 ls986.7061 1336.9434 m992.375 1285.9194 l1012.2178 1257.5732 l986.7061 1336.9434 ls1743.5576 2255.3696 m1780.4082 2008.7554 l2154.582 917.415 l1743.5576 2255.3696 ls499.146 667.9658 m513.3193 526.2334 l541.666 631.1152 l499.146 667.9658 ls371.5869 534.7373 m201.5078 466.7051 l422.6104 483.7139 l371.5869 534.7373 ls201.5078 466.7051 m201.5078 316.4688 l422.6104 483.7139 l201.5078 466.7051 ls1939.1484 1030.8008 m1097.2568 806.8633 l2061.0381 738.832 l1939.1484 1030.8008 ls402.7681 2227.0234 m408.4375 2175.9995 l428.2798 2173.165 l402.7681 2227.0234 ls402.7681 -156.917 m399.9331 -403.5322 l504.8154 -120.0674 l402.7681 -156.917 ls530.3271 2031.4326 m405.6025 1937.8892 l535.9966 2003.0859 l530.3271 2031.4326 ls663.5557 642.4541 m683.3984 537.5723 l706.0752 563.084 l663.5557 642.4541 ls428.2798 2283.7163 m428.2798 2173.165 l530.3271 2031.4326 l428.2798 2283.7163 ls504.8154 -120.0674 m399.9331 -403.5322 l516.1538 -482.9023 l504.8154 -120.0674 ls201.5078 316.4688 m244.0273 52.8467 l445.2876 13.1611 l201.5078 316.4688 ls244.0273 52.8467 m263.8701 33.0039 l445.2876 13.1611 l244.0273 52.8467 ls360.248 -66.209 m397.0986 -134.2402 l445.2876 13.1611 l360.248 -66.209 ls1097.2568 806.8633 m1672.6914 208.752 l2061.0381 738.832 l1097.2568 806.8633 ls391.4292 667.9658 m363.083 611.2725 l499.146 667.9658 l391.4292 667.9658 ls399.9331 -403.5322 m456.626 -638.8076 l516.1538 -482.9023 l399.9331 -403.5322 ls499.146 667.9658 m363.083 611.2725 l513.3193 526.2334 l499.146 667.9658 ls459.4609 707.6514 m391.4292 667.9658 l499.146 667.9658 l459.4609 707.6514 ls391.4292 829.541 m442.4531 792.6904 l538.8311 855.0527 l391.4292 829.541 ls428.2798 2173.165 m431.1143 2141.9839 l530.3271 2031.4326 l428.2798 2173.165 ls445.2876 13.1611 m504.8154 -120.0674 l527.4922 35.8389 l445.2876 13.1611 ls422.6104 483.7139 m201.5078 316.4688 l501.9805 469.54 l422.6104 483.7139 ls422.6104 483.7139 m501.9805 469.54 l513.3193 526.2334 l422.6104 483.7139 ls538.8311 -525.4219 m456.626 -638.8076 l567.1777 -618.9658 l538.8311 -525.4219 ls363.083 611.2725 m371.5869 534.7373 l513.3193 526.2334 l363.083 611.2725 ls501.9805 469.54 m201.5078 316.4688 l527.4922 35.8389 l501.9805 469.54 ls201.5078 316.4688 m445.2876 13.1611 l527.4922 35.8389 l201.5078 316.4688 ls371.5869 2020.0938 m405.6025 1937.8892 l530.3271 2031.4326 l371.5869 2020.0938 ls411.272 2079.6216 m371.5869 2020.0938 l530.3271 2031.4326 l411.272 2079.6216 ls431.1143 2141.9839 m411.272 2079.6216 l530.3271 2031.4326 l431.1143 2141.9839 ls255.3662 1416.3135 m737.2568 1280.25 l737.2568 1373.7935 l255.3662 1416.3135 ls513.3193 526.2334 m501.9805 469.54 l618.2012 506.3906 l513.3193 526.2334 ls932.8477 1558.0459 m737.2568 1623.2427 l935.6816 1526.8647 l932.8477 1558.0459 ls567.1777 -618.9658 m456.626 -638.8076 l587.02 -641.6426 l567.1777 -618.9658 ls527.4922 35.8389 m578.5161 30.1699 l604.0283 84.0283 l527.4922 35.8389 ls516.1538 -482.9023 m456.626 -638.8076 l538.8311 -525.4219 l516.1538 -482.9023 ls501.9805 469.54 m527.4922 35.8389 l604.0283 84.0283 l501.9805 469.54 ls530.3271 -499.9102 m516.1538 -482.9023 l538.8311 -525.4219 l530.3271 -499.9102 ls391.4292 829.541 m538.8311 855.0527 l544.5005 976.9424 l391.4292 829.541 ls1837.1006 191.7441 m1567.8096 -463.0596 l2029.8574 381.666 l1837.1006 191.7441 ls249.6968 948.5962 m272.374 928.7539 l544.5005 976.9424 l249.6968 948.5962 ls527.4922 35.8389 m504.8154 -120.0674 l578.5161 30.1699 l527.4922 35.8389 ls272.374 928.7539 m391.4292 829.541 l544.5005 976.9424 l272.374 928.7539 ls706.0752 563.084 m683.3984 537.5723 l737.2568 540.4063 l706.0752 563.084 ls249.6968 948.5962 m544.5005 976.9424 l598.3589 1093.1631 l249.6968 948.5962 ls255.3662 1416.3135 m249.6968 948.5962 l598.3589 1093.1631 l255.3662 1416.3135 ls748.5952 1124.3447 m754.2646 1098.8325 l802.4536 1107.3369 l748.5952 1124.3447 ls516.1538 -482.9023 m626.7051 -516.918 l649.3823 -88.8857 l516.1538 -482.9023 ls606.8628 41.5078 m612.5322 52.8467 l612.5322 55.6816 l606.8628 41.5078 ls405.6025 1937.8892 m691.9023 1543.8726 l737.2568 1623.2427 l405.6025 1937.8892 ls618.2012 506.3906 m669.2251 520.5645 l683.3984 537.5723 l618.2012 506.3906 ls578.5161 30.1699 m606.8628 41.5078 l612.5322 55.6816 l578.5161 30.1699 ls604.0283 84.0283 m612.5322 55.6816 l677.729 55.6816 l604.0283 84.0283 ls428.2798 2283.7163 m530.3271 2031.4326 l740.0913 1988.9126 l428.2798 2283.7163 ls504.8154 -120.0674 m516.1538 -482.9023 l649.3823 -88.8857 l504.8154 -120.0674 ls626.7051 -516.918 m567.1777 -618.9658 l683.3984 -559.4375 l626.7051 -516.918 ls638.0439 -46.3662 m504.8154 -120.0674 l649.3823 -88.8857 l638.0439 -46.3662 ls541.666 631.1152 m513.3193 526.2334 l618.2012 506.3906 l541.666 631.1152 ls598.3589 1093.1631 m544.5005 976.9424 l646.5479 1053.478 l598.3589 1093.1631 ls516.1538 -482.9023 m530.3271 -499.9102 l626.7051 -516.918 l516.1538 -482.9023 ls538.8311 -525.4219 m567.1777 -618.9658 l626.7051 -516.918 l538.8311 -525.4219 ls567.1777 -618.9658 m587.02 -641.6426 l683.3984 -559.4375 l567.1777 -618.9658 ls530.3271 -499.9102 m538.8311 -525.4219 l626.7051 -516.918 l530.3271 -499.9102 ls578.5161 30.1699 m504.8154 -120.0674 l638.0439 -46.3662 l578.5161 30.1699 ls606.8628 41.5078 m578.5161 30.1699 l638.0439 -46.3662 l606.8628 41.5078 ls544.5005 976.9424 m538.8311 855.0527 l646.5479 1053.478 l544.5005 976.9424 ls663.5557 642.4541 m618.2012 506.3906 l683.3984 537.5723 l663.5557 642.4541 ls796.7842 1878.3613 m791.1152 1787.6528 l830.7998 1838.6763 l796.7842 1878.3613 ls538.8311 855.0527 m499.146 667.9658 l663.5557 642.4541 l538.8311 855.0527 ls499.146 667.9658 m541.666 631.1152 l663.5557 642.4541 l499.146 667.9658 ls853.4775 1730.9595 m816.627 1753.6367 l867.6504 1671.4321 l853.4775 1730.9595 ls541.666 631.1152 m618.2012 506.3906 l663.5557 642.4541 l541.666 631.1152 ls612.5322 55.6816 m612.5322 52.8467 l677.729 55.6816 l612.5322 55.6816 ls606.8628 41.5078 m638.0439 -46.3662 l677.729 55.6816 l606.8628 41.5078 ls810.9575 1283.085 m847.8086 1200.8799 l859.1465 1206.5493 l810.9575 1283.085 ls612.5322 52.8467 m606.8628 41.5078 l677.729 55.6816 l612.5322 52.8467 ls816.627 1753.6367 m737.2568 1623.2427 l867.6504 1671.4321 l816.627 1753.6367 ls856.3125 1807.4951 m791.1152 1787.6528 l859.1465 1787.6528 l856.3125 1807.4951 ls833.6348 1317.1006 m810.9575 1283.085 l859.1465 1206.5493 l833.6348 1317.1006 ls405.6025 1937.8892 m289.3818 1526.8647 l691.9023 1543.8726 l405.6025 1937.8892 ls737.2568 1623.2427 m691.9023 1543.8726 l935.6816 1526.8647 l737.2568 1623.2427 ls289.3818 1526.8647 m280.8779 1504.1875 l691.9023 1543.8726 l289.3818 1526.8647 ls691.9023 1543.8726 m280.8779 1504.1875 l737.2568 1373.7935 l691.9023 1543.8726 ls280.8779 1504.1875 m255.3662 1416.3135 l737.2568 1373.7935 l280.8779 1504.1875 ls598.3589 1093.1631 m646.5479 1053.478 l731.5874 1118.6753 l598.3589 1093.1631 ls737.2568 540.4063 m683.3984 537.5723 l740.0913 486.5479 l737.2568 540.4063 ls683.3984 537.5723 m669.2251 520.5645 l740.0913 486.5479 l683.3984 537.5723 ls663.5557 642.4541 m706.0752 563.084 l737.2568 540.4063 l663.5557 642.4541 ls530.3271 2031.4326 m535.9966 2003.0859 l740.0913 1988.9126 l530.3271 2031.4326 ls255.3662 1416.3135 m598.3589 1093.1631 l737.2568 1280.25 l255.3662 1416.3135 ls779.7764 1918.0464 m535.9966 2003.0859 l791.1152 1787.6528 l779.7764 1918.0464 ls779.7764 1918.0464 m791.1152 1787.6528 l796.7842 1878.3613 l779.7764 1918.0464 ls748.5952 1124.3447 m731.5874 1118.6753 l754.2646 1098.8325 l748.5952 1124.3447 ls731.5874 1118.6753 m646.5479 1053.478 l754.2646 1098.8325 l731.5874 1118.6753 ls691.9023 1543.8726 m737.2568 1373.7935 l935.6816 1526.8647 l691.9023 1543.8726 ls740.0913 1988.9126 m535.9966 2003.0859 l779.7764 1918.0464 l740.0913 1988.9126 ls740.0913 486.5479 m669.2251 520.5645 l759.9336 444.0283 l740.0913 486.5479 ls669.2251 520.5645 m618.2012 506.3906 l759.9336 444.0283 l669.2251 520.5645 ls598.3589 1093.1631 m731.5874 1118.6753 l754.2646 1249.0693 l598.3589 1093.1631 ls737.2568 1280.25 m598.3589 1093.1631 l754.2646 1249.0693 l737.2568 1280.25 ls731.5874 1118.6753 m748.5952 1124.3447 l754.2646 1249.0693 l731.5874 1118.6753 ls501.9805 469.54 m604.0283 84.0283 l759.9336 444.0283 l501.9805 469.54 ls618.2012 506.3906 m501.9805 469.54 l759.9336 444.0283 l618.2012 506.3906 ls791.1152 1787.6528 m816.627 1753.6367 l859.1465 1787.6528 l791.1152 1787.6528 ls816.627 1753.6367 m853.4775 1730.9595 l859.1465 1787.6528 l816.627 1753.6367 ls805.2881 -477.2324 m683.3984 -559.4375 l825.1309 -502.7451 l805.2881 -477.2324 ls935.6816 1526.8647 m986.7061 1336.9434 l989.541 1594.8965 l935.6816 1526.8647 ls856.3125 -519.7529 m683.3984 -559.4375 l932.8477 -553.7686 l856.3125 -519.7529 ls405.6025 1937.8892 m737.2568 1623.2427 l791.1152 1787.6528 l405.6025 1937.8892 ls737.2568 1373.7935 m737.2568 1280.25 l785.4458 1334.1084 l737.2568 1373.7935 ls535.9966 2003.0859 m405.6025 1937.8892 l791.1152 1787.6528 l535.9966 2003.0859 ls740.0913 1988.9126 m779.7764 1918.0464 l856.3125 1875.5269 l740.0913 1988.9126 ls754.2646 1249.0693 m748.5952 1124.3447 l796.7842 1206.5493 l754.2646 1249.0693 ls683.3984 -559.4375 m587.02 -641.6426 l932.8477 -553.7686 l683.3984 -559.4375 ls626.7051 -516.918 m683.3984 -559.4375 l805.2881 -477.2324 l626.7051 -516.918 ls649.3823 -88.8857 m626.7051 -516.918 l805.2881 -477.2324 l649.3823 -88.8857 ls737.2568 540.4063 m864.8164 517.7295 l873.3203 798.3594 l737.2568 540.4063 ls830.7998 1838.6763 m856.3125 1807.4951 l856.3125 1875.5269 l830.7998 1838.6763 ls748.5952 1124.3447 m802.4536 1107.3369 l808.123 1118.6753 l748.5952 1124.3447 ls754.2646 1249.0693 m796.7842 1206.5493 l810.9575 1283.085 l754.2646 1249.0693 ls802.4536 1107.3369 m930.0127 948.5962 l947.0205 1127.1792 l802.4536 1107.3369 ls737.2568 1280.25 m754.2646 1249.0693 l810.9575 1283.085 l737.2568 1280.25 ls785.4458 1334.1084 m737.2568 1280.25 l810.9575 1283.085 l785.4458 1334.1084 ls791.1152 1787.6528 m737.2568 1623.2427 l816.627 1753.6367 l791.1152 1787.6528 ls796.7842 1206.5493 m748.5952 1124.3447 l813.792 1135.6831 l796.7842 1206.5493 ls748.5952 1124.3447 m808.123 1118.6753 l813.792 1135.6831 l748.5952 1124.3447 ls737.2568 540.4063 m844.9736 472.375 l864.8164 517.7295 l737.2568 540.4063 ls810.9575 1283.085 m796.7842 1206.5493 l847.8086 1200.8799 l810.9575 1283.085 ls796.7842 1206.5493 m813.792 1135.6831 l847.8086 1200.8799 l796.7842 1206.5493 ls785.4458 1334.1084 m810.9575 1283.085 l833.6348 1317.1006 l785.4458 1334.1084 ls737.2568 540.4063 m740.0913 486.5479 l844.9736 472.375 l737.2568 540.4063 ls740.0913 486.5479 m759.9336 444.0283 l844.9736 472.375 l740.0913 486.5479 ls935.6816 1560.8804 m932.8477 1558.0459 l935.6816 1526.8647 l935.6816 1560.8804 ls825.1309 -502.7451 m856.3125 -519.7529 l901.666 -465.8945 l825.1309 -502.7451 ls663.5557 642.4541 m737.2568 540.4063 l873.3203 798.3594 l663.5557 642.4541 ls796.7842 1878.3613 m830.7998 1838.6763 l856.3125 1875.5269 l796.7842 1878.3613 ls876.1543 293.792 m890.3281 118.0439 l921.5088 242.7686 l876.1543 293.792 ls876.1543 293.792 m677.729 55.6816 l890.3281 118.0439 l876.1543 293.792 ls805.2881 -477.2324 m825.1309 -502.7451 l901.666 -465.8945 l805.2881 -477.2324 ls1029.2256 942.9268 m930.0127 948.5962 l1034.8945 923.084 l1029.2256 942.9268 ls844.9736 472.375 m759.9336 444.0283 l850.6426 390.1699 l844.9736 472.375 ls779.7764 1918.0464 m796.7842 1878.3613 l856.3125 1875.5269 l779.7764 1918.0464 ls830.7998 1838.6763 m791.1152 1787.6528 l856.3125 1807.4951 l830.7998 1838.6763 ls1494.1084 -281.6426 m1491.2734 -324.1621 l1567.8096 -463.0596 l1494.1084 -281.6426 ls924.3438 1147.0215 m802.4536 1107.3369 l947.0205 1127.1792 l924.3438 1147.0215 ls825.1309 -502.7451 m683.3984 -559.4375 l856.3125 -519.7529 l825.1309 -502.7451 ls944.1855 1345.4473 m969.6982 1288.7544 l986.7061 1336.9434 l944.1855 1345.4473 ls850.6426 390.1699 m759.9336 444.0283 l876.1543 293.792 l850.6426 390.1699 ls901.666 -465.8945 m989.541 -494.2412 l998.0449 -397.8623 l901.666 -465.8945 ls677.729 55.6816 m638.0439 -46.3662 l861.9814 21.666 l677.729 55.6816 ls677.729 55.6816 m861.9814 21.666 l890.3281 118.0439 l677.729 55.6816 ls638.0439 -46.3662 m649.3823 -88.8857 l861.9814 21.666 l638.0439 -46.3662 ls853.4775 1730.9595 m867.6504 1671.4321 l881.8242 1733.7944 l853.4775 1730.9595 ls759.9336 444.0283 m604.0283 84.0283 l876.1543 293.792 l759.9336 444.0283 ls604.0283 84.0283 m677.729 55.6816 l876.1543 293.792 l604.0283 84.0283 ls538.8311 855.0527 m663.5557 642.4541 l873.3203 798.3594 l538.8311 855.0527 ls813.792 1135.6831 m808.123 1118.6753 l924.3438 1147.0215 l813.792 1135.6831 ls881.8242 863.5566 m873.3203 798.3594 l921.5088 886.2344 l881.8242 863.5566 ls754.2646 1098.8325 m646.5479 1053.478 l881.8242 863.5566 l754.2646 1098.8325 ls901.666 -465.8945 m856.3125 -519.7529 l932.8477 -553.7686 l901.666 -465.8945 ls538.8311 855.0527 m873.3203 798.3594 l881.8242 863.5566 l538.8311 855.0527 ls859.1465 1787.6528 m853.4775 1730.9595 l881.8242 1733.7944 l859.1465 1787.6528 ls646.5479 1053.478 m538.8311 855.0527 l881.8242 863.5566 l646.5479 1053.478 ls930.0127 1200.8799 m924.3438 1147.0215 l947.0205 1127.1792 l930.0127 1200.8799 ls983.8711 582.9258 m983.8711 356.1543 l1017.8867 364.6582 l983.8711 582.9258 ls859.1465 1206.5493 m924.3438 1147.0215 l930.0127 1200.8799 l859.1465 1206.5493 ls935.6816 1526.8647 m944.1855 1345.4473 l986.7061 1336.9434 l935.6816 1526.8647 ls969.6982 1288.7544 m978.2021 1220.7227 l992.375 1285.9194 l969.6982 1288.7544 ls808.123 1118.6753 m802.4536 1107.3369 l924.3438 1147.0215 l808.123 1118.6753 ls785.4458 1334.1084 m833.6348 1317.1006 l935.6816 1526.8647 l785.4458 1334.1084 ls947.0205 1869.8574 m856.3125 1807.4951 l958.3594 1773.4795 l947.0205 1869.8574 ls935.6816 1526.8647 m833.6348 1317.1006 l944.1855 1345.4473 l935.6816 1526.8647 ls*U*u737.2568 1373.7935 m785.4458 1334.1084 l935.6816 1526.8647 l737.2568 1373.7935 ls847.8086 1200.8799 m813.792 1135.6831 l924.3438 1147.0215 l847.8086 1200.8799 ls859.1465 1206.5493 m847.8086 1200.8799 l924.3438 1147.0215 l859.1465 1206.5493 ls881.8242 863.5566 m921.5088 886.2344 l930.0127 948.5962 l881.8242 863.5566 ls890.3281 118.0439 m861.9814 21.666 l930.0127 98.2012 l890.3281 118.0439 ls802.4536 1107.3369 m754.2646 1098.8325 l930.0127 948.5962 l802.4536 1107.3369 ls754.2646 1098.8325 m881.8242 863.5566 l930.0127 948.5962 l754.2646 1098.8325 ls856.3125 1875.5269 m856.3125 1807.4951 l947.0205 1869.8574 l856.3125 1875.5269 ls859.1465 1206.5493 m930.0127 1200.8799 l932.8477 1246.2344 l859.1465 1206.5493 ls833.6348 1317.1006 m859.1465 1206.5493 l932.8477 1246.2344 l833.6348 1317.1006 ls935.6816 1626.0776 m932.8477 1558.0459 l935.6816 1560.8804 l935.6816 1626.0776 ls867.6504 1671.4321 m932.8477 1558.0459 l935.6816 1626.0776 l867.6504 1671.4321 ls881.8242 1733.7944 m867.6504 1671.4321 l935.6816 1626.0776 l881.8242 1733.7944 ls947.0205 1127.1792 m930.0127 948.5962 l1017.8867 1027.9663 l947.0205 1127.1792 ls867.6504 1671.4321 m737.2568 1623.2427 l932.8477 1558.0459 l867.6504 1671.4321 ls833.6348 1317.1006 m932.8477 1246.2344 l944.1855 1345.4473 l833.6348 1317.1006 ls890.3281 118.0439 m930.0127 98.2012 l944.1855 231.4297 l890.3281 118.0439 ls805.2881 -477.2324 m901.666 -465.8945 l998.0449 -397.8623 l805.2881 -477.2324 ls856.3125 1807.4951 m859.1465 1787.6528 l958.3594 1773.4795 l856.3125 1807.4951 ls873.3203 798.3594 m864.8164 517.7295 l983.8711 582.9258 l873.3203 798.3594 ls921.5088 242.7686 m944.1855 231.4297 l947.0205 248.4375 l921.5088 242.7686 ls921.5088 242.7686 m890.3281 118.0439 l944.1855 231.4297 l921.5088 242.7686 ls876.1543 293.792 m947.0205 248.4375 l983.8711 356.1543 l876.1543 293.792 ls850.6426 390.1699 m876.1543 293.792 l983.8711 356.1543 l850.6426 390.1699 ls876.1543 293.792 m921.5088 242.7686 l947.0205 248.4375 l876.1543 293.792 ls1156.7852 2014.4248 m1145.4463 1977.5742 l1159.6191 1980.4087 l1156.7852 2014.4248 ls1071.7451 -397.8623 m1037.7295 -403.5322 l1136.9424 -485.7363 l1071.7451 -397.8623 ls740.0913 1988.9126 m856.3125 1875.5269 l947.0205 1869.8574 l740.0913 1988.9126 ls969.6982 1288.7544 m932.8477 1246.2344 l978.2021 1220.7227 l969.6982 1288.7544 ls932.8477 1246.2344 m930.0127 1200.8799 l978.2021 1220.7227 l932.8477 1246.2344 ls881.8242 1733.7944 m935.6816 1626.0776 l958.3594 1773.4795 l881.8242 1733.7944 ls859.1465 1787.6528 m881.8242 1733.7944 l958.3594 1773.4795 l859.1465 1787.6528 ls930.0127 1200.8799 m947.0205 1127.1792 l978.2021 1220.7227 l930.0127 1200.8799 ls935.6816 1560.8804 m935.6816 1526.8647 l989.541 1594.8965 l935.6816 1560.8804 ls944.1855 1345.4473 m932.8477 1246.2344 l969.6982 1288.7544 l944.1855 1345.4473 ls947.0205 1869.8574 m958.3594 1773.4795 l978.2021 1810.3296 l947.0205 1869.8574 ls649.3823 -88.8857 m805.2881 -477.2324 l998.0449 -397.8623 l649.3823 -88.8857 ls1049.0684 -361.0117 m1074.5801 -335.5 l1083.084 -74.7129 l1049.0684 -361.0117 ls983.8711 582.9258 m864.8164 517.7295 l983.8711 356.1543 l983.8711 582.9258 ls844.9736 472.375 m850.6426 390.1699 l983.8711 356.1543 l844.9736 472.375 ls864.8164 517.7295 m844.9736 472.375 l983.8711 356.1543 l864.8164 517.7295 ls861.9814 21.666 m649.3823 -88.8857 l998.0449 -397.8623 l861.9814 21.666 ls944.1855 231.4297 m930.0127 98.2012 l995.21 112.374 l944.1855 231.4297 ls428.2798 2283.7163 m1250.3281 2119.3066 l1411.9033 2241.1968 l428.2798 2283.7163 ls935.6816 1626.0776 m935.6816 1560.8804 l989.541 1594.8965 l935.6816 1626.0776 ls1091.5879 1084.6592 m1111.4307 1076.1553 l1125.6035 1132.8486 l1091.5879 1084.6592 ls901.666 -465.8945 m932.8477 -553.7686 l989.541 -494.2412 l901.666 -465.8945 ls1100.0918 1158.3604 m1091.5879 1084.6592 l1125.6035 1132.8486 l1100.0918 1158.3604 ls978.2021 1810.3296 m958.3594 1773.4795 l1049.0684 1716.7861 l978.2021 1810.3296 ls1105.7617 1169.6987 m1100.0918 1158.3604 l1125.6035 1132.8486 l1105.7617 1169.6987 ls947.0205 248.4375 m995.21 112.374 l1017.8867 364.6582 l947.0205 248.4375 ls1049.0684 -361.0117 m1071.7451 -397.8623 l1074.5801 -335.5 l1049.0684 -361.0117 ls947.0205 248.4375 m944.1855 231.4297 l995.21 112.374 l947.0205 248.4375 ls947.0205 1127.1792 m1017.8867 1027.9663 l1043.3984 1073.3208 l947.0205 1127.1792 ls1488.4395 -281.6426 m1491.2734 -324.1621 l1494.1084 -281.6426 l1488.4395 -281.6426 ls983.8711 356.1543 m947.0205 248.4375 l1017.8867 364.6582 l983.8711 356.1543 ls998.0449 -397.8623 m989.541 -494.2412 l1037.7295 -403.5322 l998.0449 -397.8623 ls992.375 1285.9194 m978.2021 1220.7227 l1012.2178 1257.5732 l992.375 1285.9194 ls935.6816 1626.0776 m989.541 1594.8965 l1049.0684 1716.7861 l935.6816 1626.0776 ls1017.8867 1027.9663 m1085.918 1008.124 l1085.918 1033.6357 l1017.8867 1027.9663 ls861.9814 21.666 m1049.0684 -361.0117 l1083.084 -74.7129 l861.9814 21.666 ls1043.3984 1073.3208 m1091.5879 1084.6592 l1100.0918 1158.3604 l1043.3984 1073.3208 ls921.5088 886.2344 m873.3203 798.3594 l1023.5566 806.8633 l921.5088 886.2344 ls873.3203 798.3594 m983.8711 582.9258 l1023.5566 806.8633 l873.3203 798.3594 ls1049.0684 -361.0117 m1037.7295 -403.5322 l1071.7451 -397.8623 l1049.0684 -361.0117 ls921.5088 886.2344 m1023.5566 806.8633 l1032.0605 894.7383 l921.5088 886.2344 ls1017.8867 1027.9663 m930.0127 948.5962 l1029.2256 942.9268 l1017.8867 1027.9663 ls930.0127 948.5962 m921.5088 886.2344 l1032.0605 894.7383 l930.0127 948.5962 ls1037.7295 -403.5322 m989.541 -494.2412 l1136.9424 -485.7363 l1037.7295 -403.5322 ls998.0449 -397.8623 m1037.7295 -403.5322 l1049.0684 -361.0117 l998.0449 -397.8623 ls861.9814 21.666 m998.0449 -397.8623 l1049.0684 -361.0117 l861.9814 21.666 ls958.3594 1773.4795 m935.6816 1626.0776 l1049.0684 1716.7861 l958.3594 1773.4795 ls947.0205 1869.8574 m978.2021 1810.3296 l1145.4463 1915.2119 l947.0205 1869.8574 ls1032.0605 894.7383 m1023.5566 806.8633 l1097.2568 806.8633 l1032.0605 894.7383 ls1156.7852 2014.4248 m1207.8086 2025.7632 l1250.3281 2119.3066 l1156.7852 2014.4248 ls1145.4463 1977.5742 m1145.4463 1915.2119 l1159.6191 1980.4087 l1145.4463 1977.5742 ls1085.918 1008.124 m1034.8945 923.084 l1097.2568 806.8633 l1085.918 1008.124 ls1168.123 -275.9727 m1153.9502 -355.3428 l1199.3047 -358.1777 l1168.123 -275.9727 ls995.21 112.374 m930.0127 98.2012 l1083.084 -74.7129 l995.21 112.374 ls930.0127 98.2012 m861.9814 21.666 l1083.084 -74.7129 l930.0127 98.2012 ls1043.3984 1073.3208 m1017.8867 1027.9663 l1085.918 1033.6357 l1043.3984 1073.3208 ls1034.8945 923.084 m1032.0605 894.7383 l1097.2568 806.8633 l1034.8945 923.084 ls947.0205 1869.8574 m1145.4463 1915.2119 l1145.4463 1977.5742 l947.0205 1869.8574 ls1029.2256 942.9268 m1034.8945 923.084 l1085.918 1008.124 l1029.2256 942.9268 ls1017.8867 1027.9663 m1029.2256 942.9268 l1085.918 1008.124 l1017.8867 1027.9663 ls1043.3984 1073.3208 m1085.918 1033.6357 l1091.5879 1084.6592 l1043.3984 1073.3208 ls1151.1152 -213.6104 m1168.123 -275.9727 l1287.1787 -267.4688 l1151.1152 -213.6104 ls1023.5566 806.8633 m983.8711 582.9258 l1097.2568 806.8633 l1023.5566 806.8633 ls983.8711 582.9258 m1017.8867 364.6582 l1097.2568 806.8633 l983.8711 582.9258 ls978.2021 1220.7227 m947.0205 1127.1792 l1100.0918 1158.3604 l978.2021 1220.7227 ls947.0205 1127.1792 m1043.3984 1073.3208 l1100.0918 1158.3604 l947.0205 1127.1792 ls1071.7451 -397.8623 m1136.9424 -485.7363 l1153.9502 -355.3428 l1071.7451 -397.8623 ls1613.1641 2020.0938 m1672.6914 1986.0781 l1678.3604 2113.6372 l1613.1641 2020.0938 ls1012.2178 1257.5732 m978.2021 1220.7227 l1105.7617 1169.6987 l1012.2178 1257.5732 ls978.2021 1220.7227 m1100.0918 1158.3604 l1105.7617 1169.6987 l978.2021 1220.7227 ls1091.5879 1084.6592 m1085.918 1033.6357 l1111.4307 1076.1553 l1091.5879 1084.6592 ls1085.918 1033.6357 m1085.918 1008.124 l1111.4307 1076.1553 l1085.918 1033.6357 ls1074.5801 -335.5 m1071.7451 -397.8623 l1153.9502 -355.3428 l1074.5801 -335.5 ls1411.9033 2241.1968 m1522.4551 2187.3384 l1525.2891 2255.3696 l1411.9033 2241.1968 ls989.541 -494.2412 m932.8477 -553.7686 l1136.9424 -485.7363 l989.541 -494.2412 ls428.2798 2283.7163 m1411.9033 2241.1968 l1525.2891 2255.3696 l428.2798 2283.7163 ls947.0205 1869.8574 m1145.4463 1977.5742 l1156.7852 2014.4248 l947.0205 1869.8574 ls1145.4463 -57.7041 m1083.084 -74.7129 l1151.1152 -213.6104 l1145.4463 -57.7041 ls1049.0684 1716.7861 m989.541 1594.8965 l1145.4463 1759.3062 l1049.0684 1716.7861 ls995.21 112.374 m1083.084 -74.7129 l1145.4463 -57.7041 l995.21 112.374 ls1199.3047 -358.1777 m1258.832 -397.8623 l1287.1787 -267.4688 l1199.3047 -358.1777 ls978.2021 1810.3296 m1049.0684 1716.7861 l1145.4463 1759.3062 l978.2021 1810.3296 ls1145.4463 1915.2119 m978.2021 1810.3296 l1145.4463 1759.3062 l1145.4463 1915.2119 ls1145.4463 1759.3062 m989.541 1594.8965 l1411.9033 1447.4946 l1145.4463 1759.3062 ls1250.3281 2119.3066 m1207.8086 2025.7632 l1332.5332 2096.6294 l1250.3281 2119.3066 ls995.21 112.374 m1145.4463 -57.7041 l1307.0215 -80.3818 l995.21 112.374 ls1083.084 -74.7129 m1074.5801 -335.5 l1151.1152 -213.6104 l1083.084 -74.7129 ls740.0913 1988.9126 m947.0205 1869.8574 l1156.7852 2014.4248 l740.0913 1988.9126 ls1153.9502 -355.3428 m1136.9424 -485.7363 l1199.3047 -358.1777 l1153.9502 -355.3428 ls1156.7852 2014.4248 m1159.6191 1980.4087 l1207.8086 2025.7632 l1156.7852 2014.4248 ls1017.8867 364.6582 m995.21 112.374 l1307.0215 -80.3818 l1017.8867 364.6582 ls1307.0215 -80.3818 m1151.1152 -213.6104 l1307.0215 -250.4609 l1307.0215 -80.3818 ls1074.5801 -335.5 m1153.9502 -355.3428 l1168.123 -275.9727 l1074.5801 -335.5 ls1151.1152 -213.6104 m1074.5801 -335.5 l1168.123 -275.9727 l1151.1152 -213.6104 ls740.0913 1988.9126 m1156.7852 2014.4248 l1250.3281 2119.3066 l740.0913 1988.9126 ls428.2798 2283.7163 m740.0913 1988.9126 l1250.3281 2119.3066 l428.2798 2283.7163 ls1151.1152 -213.6104 m1287.1787 -267.4688 l1307.0215 -250.4609 l1151.1152 -213.6104 ls1159.6191 1980.4087 m1145.4463 1915.2119 l1207.8086 2025.7632 l1159.6191 1980.4087 ls1250.3281 2119.3066 m1332.5332 2096.6294 l1411.9033 2241.1968 l1250.3281 2119.3066 ls1488.4395 -281.6426 m1465.7617 -267.4688 l1491.2734 -324.1621 l1488.4395 -281.6426 ls1199.3047 -358.1777 m1136.9424 -485.7363 l1258.832 -397.8623 l1199.3047 -358.1777 ls1168.123 -275.9727 m1199.3047 -358.1777 l1287.1787 -267.4688 l1168.123 -275.9727 ls1105.7617 1169.6987 m1341.0371 1181.0376 l1363.7148 1260.4077 l1105.7617 1169.6987 ls1465.7617 -267.4688 m1417.5723 -318.4922 l1491.2734 -324.1621 l1465.7617 -267.4688 ls1145.4463 -57.7041 m1151.1152 -213.6104 l1307.0215 -80.3818 l1145.4463 -57.7041 ls1417.5723 -318.4922 m1392.0605 -437.5479 l1491.2734 -324.1621 l1417.5723 -318.4922 ls1125.6035 1132.8486 m1111.4307 1076.1553 l1341.0371 1181.0376 l1125.6035 1132.8486 ls1105.7617 1169.6987 m1125.6035 1132.8486 l1341.0371 1181.0376 l1105.7617 1169.6987 ls1085.918 1008.124 m1097.2568 806.8633 l1341.0371 1181.0376 l1085.918 1008.124 ls1111.4307 1076.1553 m1085.918 1008.124 l1341.0371 1181.0376 l1111.4307 1076.1553 ls986.7061 1336.9434 m1012.2178 1257.5732 l1363.7148 1260.4077 l986.7061 1336.9434 ls1012.2178 1257.5732 m1105.7617 1169.6987 l1363.7148 1260.4077 l1012.2178 1257.5732 ls986.7061 1336.9434 m1363.7148 1260.4077 l1411.9033 1447.4946 l986.7061 1336.9434 ls1598.9902 2037.1016 m1403.3994 2054.1099 l1613.1641 2020.0938 l1598.9902 2037.1016 ls1598.9902 18.8311 m1502.6123 -117.2324 l1689.6992 50.0117 l1598.9902 18.8311 ls1502.6123 -117.2324 m1494.1084 -281.6426 l1689.6992 50.0117 l1502.6123 -117.2324 ls1258.832 -397.8623 m1136.9424 -485.7363 l1392.0605 -437.5479 l1258.832 -397.8623 ls1207.8086 2025.7632 m1145.4463 1915.2119 l1403.3994 2054.1099 l1207.8086 2025.7632 ls1332.5332 2096.6294 m1207.8086 2025.7632 l1403.3994 2054.1099 l1332.5332 2096.6294 ls1145.4463 1915.2119 m1145.4463 1759.3062 l1403.3994 2054.1099 l1145.4463 1915.2119 ls989.541 1594.8965 m986.7061 1336.9434 l1411.9033 1447.4946 l989.541 1594.8965 ls1258.832 -397.8623 m1392.0605 -437.5479 l1417.5723 -318.4922 l1258.832 -397.8623 ls1307.0215 -250.4609 m1287.1787 -267.4688 l1417.5723 -318.4922 l1307.0215 -250.4609 ls1287.1787 -267.4688 m1258.832 -397.8623 l1417.5723 -318.4922 l1287.1787 -267.4688 ls1307.0215 -250.4609 m1417.5723 -318.4922 l1465.7617 -267.4688 l1307.0215 -250.4609 ls1307.0215 -250.4609 m1465.7617 -267.4688 l1482.7695 -179.5947 l1307.0215 -250.4609 ls1307.0215 -80.3818 m1307.0215 -250.4609 l1482.7695 -179.5947 l1307.0215 -80.3818 ls1743.5576 2255.3696 m1769.0693 2028.5977 l1780.4082 2008.7554 l1743.5576 2255.3696 ls1675.5254 1767.8101 m1593.3213 1810.3296 l1698.2031 1716.7861 l1675.5254 1767.8101 ls1307.0215 -80.3818 m1482.7695 -179.5947 l1485.6045 -94.5547 l1307.0215 -80.3818 ls1411.9033 2241.1968 m1488.4395 2127.8105 l1522.4551 2187.3384 l1411.9033 2241.1968 ls1465.7617 -267.4688 m1488.4395 -281.6426 l1494.1084 -281.6426 l1465.7617 -267.4688 ls1485.6045 -94.5547 m1482.7695 -179.5947 l1502.6123 -117.2324 l1485.6045 -94.5547 ls1485.6045 -94.5547 m1502.6123 -117.2324 l1542.2969 -9.51563 l1485.6045 -94.5547 ls1332.5332 2096.6294 m1403.3994 2054.1099 l1488.4395 2127.8105 l1332.5332 2096.6294 ls1411.9033 2241.1968 m1332.5332 2096.6294 l1488.4395 2127.8105 l1411.9033 2241.1968 ls1593.3213 1810.3296 m1644.3447 1487.1797 l1698.2031 1716.7861 l1593.3213 1810.3296 ls1482.7695 -179.5947 m1465.7617 -267.4688 l1494.1084 -281.6426 l1482.7695 -179.5947 ls1482.7695 -179.5947 m1494.1084 -281.6426 l1502.6123 -117.2324 l1482.7695 -179.5947 ls1491.2734 -324.1621 m1392.0605 -437.5479 l1567.8096 -463.0596 l1491.2734 -324.1621 ls1522.4551 2187.3384 m1488.4395 2127.8105 l1559.3047 2122.1411 l1522.4551 2187.3384 ls1145.4463 1759.3062 m1411.9033 1447.4946 l1593.3213 1810.3296 l1145.4463 1759.3062 ls1307.0215 -80.3818 m1485.6045 -94.5547 l1542.2969 -9.51563 l1307.0215 -80.3818 ls1403.3994 2054.1099 m1145.4463 1759.3062 l1593.3213 1810.3296 l1403.3994 2054.1099 ls1017.8867 364.6582 m1307.0215 -80.3818 l1542.2969 -9.51563 l1017.8867 364.6582 ls2004.3457 1030.8008 m1939.1484 1030.8008 l2061.0381 738.832 l2004.3457 1030.8008 ls932.8477 -553.7686 m587.02 -641.6426 l1567.8096 -463.0596 l932.8477 -553.7686 ls1136.9424 -485.7363 m932.8477 -553.7686 l1567.8096 -463.0596 l1136.9424 -485.7363 ls1392.0605 -437.5479 m1136.9424 -485.7363 l1567.8096 -463.0596 l1392.0605 -437.5479 ls1672.6914 208.752 m2029.8574 381.666 l2061.0381 738.832 l1672.6914 208.752 ls1542.2969 -9.51563 m1502.6123 -117.2324 l1598.9902 18.8311 l1542.2969 -9.51563 ls1618.833 2173.165 m1678.3604 2113.6372 l1743.5576 2255.3696 l1618.833 2173.165 ls1559.3047 2122.1411 m1488.4395 2127.8105 l1598.9902 2037.1016 l1559.3047 2122.1411 ls1695.3682 1461.668 m1842.7705 1478.6758 l1845.6045 1487.1797 l1695.3682 1461.668 ls1522.4551 2187.3384 m1615.998 2156.1572 l1618.833 2173.165 l1522.4551 2187.3384 ls1494.1084 -281.6426 m1567.8096 -463.0596 l1689.6992 50.0117 l1494.1084 -281.6426 ls1488.4395 2127.8105 m1403.3994 2054.1099 l1598.9902 2037.1016 l1488.4395 2127.8105 ls1525.2891 2255.3696 m1522.4551 2187.3384 l1618.833 2173.165 l1525.2891 2255.3696 ls1559.3047 2122.1411 m1598.9902 2037.1016 l1615.998 2156.1572 l1559.3047 2122.1411 ls1403.3994 2054.1099 m1593.3213 1810.3296 l1613.1641 2020.0938 l1403.3994 2054.1099 ls1672.6914 208.752 m1837.1006 191.7441 l2029.8574 381.666 l1672.6914 208.752 ls1522.4551 2187.3384 m1559.3047 2122.1411 l1615.998 2156.1572 l1522.4551 2187.3384 ls1411.9033 1447.4946 m1363.7148 1260.4077 l1644.3447 1487.1797 l1411.9033 1447.4946 ls1593.3213 1810.3296 m1411.9033 1447.4946 l1644.3447 1487.1797 l1593.3213 1810.3296 ls1017.8867 364.6582 m1542.2969 -9.51563 l1672.6914 208.752 l1017.8867 364.6582 ls1542.2969 -9.51563 m1598.9902 18.8311 l1672.6914 208.752 l1542.2969 -9.51563 ls1097.2568 806.8633 m1017.8867 364.6582 l1672.6914 208.752 l1097.2568 806.8633 ls1613.1641 2020.0938 m1593.3213 1810.3296 l1672.6914 1986.0781 l1613.1641 2020.0938 ls1618.833 2173.165 m1615.998 2156.1572 l1678.3604 2113.6372 l1618.833 2173.165 ls1672.6914 1986.0781 m1593.3213 1810.3296 l1675.5254 1767.8101 l1672.6914 1986.0781 ls1808.7539 1597.731 m1695.3682 1461.668 l1845.6045 1487.1797 l1808.7539 1597.731 ls1598.9902 2037.1016 m1613.1641 2020.0938 l1678.3604 2113.6372 l1598.9902 2037.1016 ls1615.998 2156.1572 m1598.9902 2037.1016 l1678.3604 2113.6372 l1615.998 2156.1572 ls1672.6914 208.752 m1689.6992 50.0117 l1837.1006 191.7441 l1672.6914 208.752 ls1672.6914 208.752 m1598.9902 18.8311 l1689.6992 50.0117 l1672.6914 208.752 ls*U*u1788.9121 1645.9199 m1797.416 1606.2349 l1808.7539 1597.731 l1788.9121 1645.9199 ls1681.1953 1478.6758 m1644.3447 1487.1797 l1695.3682 1461.668 l1681.1953 1478.6758 ls1644.3447 1487.1797 m1363.7148 1260.4077 l1695.3682 1461.668 l1644.3447 1487.1797 ls1769.0693 2028.5977 m1672.6914 1986.0781 l1780.4082 2008.7554 l1769.0693 2028.5977 ls1845.6045 1487.1797 m1842.7705 1478.6758 l1961.8252 1084.6592 l1845.6045 1487.1797 ls428.2798 2283.7163 m1525.2891 2255.3696 l1743.5576 2255.3696 l428.2798 2283.7163 ls1525.2891 2255.3696 m1618.833 2173.165 l1743.5576 2255.3696 l1525.2891 2255.3696 ls1743.5576 2255.3696 m1678.3604 2113.6372 l1769.0693 2028.5977 l1743.5576 2255.3696 ls1678.3604 2113.6372 m1672.6914 1986.0781 l1769.0693 2028.5977 l1678.3604 2113.6372 ls1672.6914 1986.0781 m1675.5254 1767.8101 l1780.4082 2008.7554 l1672.6914 1986.0781 ls1780.4082 2008.7554 m1675.5254 1767.8101 l1788.9121 1645.9199 l1780.4082 2008.7554 ls1675.5254 1767.8101 m1698.2031 1716.7861 l1788.9121 1645.9199 l1675.5254 1767.8101 ls1644.3447 1487.1797 m1681.1953 1478.6758 l1797.416 1606.2349 l1644.3447 1487.1797 ls1698.2031 1716.7861 m1644.3447 1487.1797 l1797.416 1606.2349 l1698.2031 1716.7861 ls1788.9121 1645.9199 m1698.2031 1716.7861 l1797.416 1606.2349 l1788.9121 1645.9199 ls1681.1953 1478.6758 m1695.3682 1461.668 l1808.7539 1597.731 l1681.1953 1478.6758 ls1797.416 1606.2349 m1681.1953 1478.6758 l1808.7539 1597.731 l1797.416 1606.2349 ls1780.4082 2008.7554 m1788.9121 1645.9199 l1808.7539 1597.731 l1780.4082 2008.7554 ls1842.7705 1478.6758 m1825.7617 1438.9907 l1882.4551 1161.1948 l1842.7705 1478.6758 ls1780.4082 2008.7554 m1808.7539 1597.731 l1845.6045 1487.1797 l1780.4082 2008.7554 ls1695.3682 1461.668 m1825.7617 1438.9907 l1842.7705 1478.6758 l1695.3682 1461.668 ls1961.8252 1084.6592 m1939.1484 1030.8008 l2004.3457 1030.8008 l1961.8252 1084.6592 ls1689.6992 50.0117 m1567.8096 -463.0596 l1837.1006 191.7441 l1689.6992 50.0117 ls2061.0381 738.832 m2029.8574 381.666 l2109.2275 585.7607 l2061.0381 738.832 ls1825.7617 1438.9907 m1695.3682 1461.668 l1882.4551 1161.1948 l1825.7617 1438.9907 ls1363.7148 1260.4077 m1341.0371 1181.0376 l1882.4551 1161.1948 l1363.7148 1260.4077 ls1695.3682 1461.668 m1363.7148 1260.4077 l1882.4551 1161.1948 l1695.3682 1461.668 ls1882.4551 1161.1948 m1341.0371 1181.0376 l1939.1484 1030.8008 l1882.4551 1161.1948 ls1341.0371 1181.0376 m1097.2568 806.8633 l1939.1484 1030.8008 l1341.0371 1181.0376 ls1882.4551 1161.1948 m1939.1484 1030.8008 l1961.8252 1084.6592 l1882.4551 1161.1948 ls1842.7705 1478.6758 m1882.4551 1161.1948 l1961.8252 1084.6592 l1842.7705 1478.6758 ls*UU/BBAccumRotation (0.000000) XTLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF